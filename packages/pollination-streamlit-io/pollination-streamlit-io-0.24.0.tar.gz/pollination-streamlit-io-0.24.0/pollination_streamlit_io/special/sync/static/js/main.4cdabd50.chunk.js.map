{"version":3,"sources":["style.module.scss","SpecialSync.tsx","index.tsx"],"names":["module","exports","SpecialSync","props","render","className","styles","poCheckboxLabel","poCheckbox","type","defaultChecked","state","onChange","_onChange","disabled","onFocus","_onFocus","onBlur","_onBlur","poCheckboxSpan","_genToken","modelType","ms","d","delay","console","log","isChecked","Promise","resolve","reject","setTimeout","sync_token","window","parent","chrome","webview","hostObjects","sync","connection","PassToken","then","result","Streamlit","setComponentValue","event","check","target","checked","setState","isFocused","args","initialState","genPollinationToken","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,eAAiB,8BAA8B,WAAa,4B,4KCwBzHC,E,kDAEJ,WAAmBC,GAAwB,IAAD,uBACxC,cAAMA,IAmBDC,OAAS,WACd,OACE,2BAAOC,UAAWC,IAAOC,iBACvB,2BACEF,UAAWC,IAAOE,WAClBC,KAAK,WACLC,eAAgB,EAAKC,MAAMD,eAC3BE,SAAU,EAAKC,UACfC,SAAU,EAAKX,MAAMW,SACrBC,QAAS,EAAKC,SACdC,OAAQ,EAAKC,UACf,0BAAMb,UAAWC,IAAOa,gBAAxB,UA/BoC,EAsClCC,UAAY,SAACC,GAGnB,IAAmBC,EAabC,EAAI,EAAKZ,MAAMa,MACrBC,QAAQC,IAAI,EAAKf,MAAMa,OACnB,EAAKb,MAAMgB,YAfIL,EAgBPC,EAfI,IAAIK,SAAQ,SAACC,EAASC,GAAV,OAC1BC,YAAW,WACP,IAAIC,EAAaC,OAAOC,OAAOC,OAAOC,QAAQC,YAC3CC,KAAKC,WAAWC,UAAUnB,GAE7BQ,EADaG,KAEZV,OASQmB,MAAK,SAAAC,GACdC,IAAUC,kBAAkBF,OA1DM,EA+DlC7B,UAAY,SAACgC,GACnB,IAAIC,EAAQD,EAAME,OAAOC,QACzB,EAAKC,SAAS,CAACtB,UAAWmB,KAjEc,EAoElC9B,SAAW,WACjB,EAAKiC,SAAS,CAAEC,WAAW,KArEa,EAwElChC,QAAU,WAChB,EAAK+B,SAAS,CAAEC,WAAW,KArE3B,IAAMxC,EAAiB,EAAKP,MAAMgD,KAAX,eAGjBC,EAAe,CACnB1C,eAAgBA,EAChBiB,YAAWjB,EACXc,MALY,EAAKrB,MAAMgD,KAAX,OAL0B,OAaxC,EAAKxC,MAAL,eACKyC,GAGLnB,OAAOC,OAAOmB,oBAAsB,EAAKjC,UAjBD,E,uBAFlBkC,KA+EXC,cAAwBrD,GCpGvCsD,IAASpD,OACP,kBAAC,IAAMqD,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4cdabd50.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"poCheckboxLabel\":\"style_poCheckboxLabel__2IHB4\",\"poCheckboxSpan\":\"style_poCheckboxSpan__ltXcy\",\"poCheckbox\":\"style_poCheckbox__3Q56z\"};","import {\n  ComponentProps,\n  withStreamlitConnection,\n  StreamlitComponentBase,\n  Streamlit,\n} from 'streamlit-component-lib'\nimport React, { \n  ReactNode } from 'react'\n\nimport styles from './style.module.scss';\n\ninterface State {\n  defaultChecked: boolean\n  delay: number\n  isFocused: boolean\n  isChecked: boolean\n}\n\ndeclare global {\n  interface Window {\n    chrome: any\n    genPollinationToken: any\n  }\n}\n\nclass SpecialSync extends StreamlitComponentBase<State> {\n\n  public constructor(props: ComponentProps) {\n    super(props)\n\n    // Values from user input\n    const defaultChecked = this.props.args['defaultChecked'] as boolean\n    const delay = this.props.args['delay'] as number\n\n    const initialState = {\n      defaultChecked: defaultChecked,\n      isChecked: defaultChecked ? true : false,\n      delay: delay\n    } as State\n\n    this.state = {\n      ...initialState\n    };\n    \n    window.parent.genPollinationToken = this._genToken;\n  }\n\n  public render = (): ReactNode => {\n    return (\n      <label className={styles.poCheckboxLabel}>\n        <input \n          className={styles.poCheckbox}\n          type='checkbox' \n          defaultChecked={this.state.defaultChecked} \n          onChange={this._onChange} \n          disabled={this.props.disabled}\n          onFocus={this._onFocus}\n          onBlur={this._onBlur}/>\n        <span className={styles.poCheckboxSpan}>\n          Sync\n        </span>\n      </label>\n    )\n  }\n\n  private _genToken = (modelType: string) \n    : void => {\n\n    const getResult = (ms: number) => {\n      var promise = new Promise((resolve, reject) => \n      setTimeout(() => {\n          var sync_token = window.parent.chrome.webview.hostObjects\n            .sync.connection.PassToken(modelType);\n          let result = sync_token;\n          resolve(result);\n        }, ms)\n      );\n\n      return promise;\n    };\n\n    const d = this.state.delay;\n    console.log(this.state.delay);\n    if (this.state.isChecked) {\n      getResult(d).then(result => {\n          Streamlit.setComponentValue(result);\n        });\n    }\n  }\n\n  private _onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    let check = event.target.checked;\n    this.setState({isChecked: check})\n  }\n\n  private _onFocus = (): void => {\n    this.setState({ isFocused: true })\n  }\n\n  private _onBlur = (): void => {\n    this.setState({ isFocused: false })\n  }\n}\n\nexport default withStreamlitConnection(SpecialSync)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport SpecialSync from \"./SpecialSync\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <SpecialSync />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}