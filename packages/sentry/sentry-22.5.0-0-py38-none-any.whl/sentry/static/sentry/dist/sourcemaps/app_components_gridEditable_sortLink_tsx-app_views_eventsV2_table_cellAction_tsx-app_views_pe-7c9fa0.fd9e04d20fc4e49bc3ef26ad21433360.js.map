{"version":3,"file":"chunks/app_components_gridEditable_sortLink_tsx-app_views_eventsV2_table_cellAction_tsx-app_views_pe-7c9fa0.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/utils/performance/urls.ts","webpack:///./app/views/eventsV2/table/cellAction.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nfunction SortLink({align, title, canSort, generateSortLink, onClick, direction}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  return (\n    <StyledLink align={align} to={target} onClick={onClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {LocationDescriptor, Query} from 'history';\n\nimport {spanTargetHash} from 'sentry/components/events/interfaces/spans/utils';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport function getTransactionDetailsUrl(\n  orgSlug: Organization['slug'],\n  eventSlug: string,\n  transaction?: string,\n  query?: Query,\n  spanId?: string\n): LocationDescriptor {\n  const locationQuery = {\n    ...(query || {}),\n    transaction,\n  };\n  if (!defined(locationQuery.transaction)) {\n    delete locationQuery.transaction;\n  }\n\n  const target = {\n    pathname: `/organizations/${orgSlug}/performance/${eventSlug}/`,\n    query: locationQuery,\n    hash: defined(spanId) ? spanTargetHash(spanId) : undefined,\n  };\n  if (!defined(target.hash)) {\n    delete target.hash;\n  }\n\n  return target;\n}\n","import {Component} from 'react';\nimport {createPortal} from 'react-dom';\nimport {Manager, Popper, PopperProps, Reference} from 'react-popper';\nimport styled from '@emotion/styled';\nimport color from 'color';\n\nimport {IconEllipsis} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {\n  getAggregateAlias,\n  isEquationAlias,\n  isRelativeSpanOperationBreakdownField,\n} from 'sentry/utils/discover/fields';\nimport {getDuration} from 'sentry/utils/formatters';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nimport {TableColumn} from './types';\n\nexport enum Actions {\n  ADD = 'add',\n  EXCLUDE = 'exclude',\n  SHOW_GREATER_THAN = 'show_greater_than',\n  SHOW_LESS_THAN = 'show_less_than',\n  TRANSACTION = 'transaction',\n  RELEASE = 'release',\n  DRILLDOWN = 'drilldown',\n  EDIT_THRESHOLD = 'edit_threshold',\n}\n\nexport function updateQuery(\n  results: MutableSearch,\n  action: Actions,\n  column: TableColumn<keyof TableDataRow>,\n  value: React.ReactText | string[]\n) {\n  const key = column.name;\n\n  if (column.type === 'duration' && typeof value === 'number') {\n    // values are assumed to be in milliseconds\n    value = getDuration(value / 1000, 2, true);\n  }\n\n  // De-duplicate array values\n  if (Array.isArray(value)) {\n    value = [...new Set(value)];\n    if (value.length === 1) {\n      value = value[0];\n    }\n  }\n\n  switch (action) {\n    case Actions.ADD:\n      // If the value is null/undefined create a has !has condition.\n      if (value === null || value === undefined) {\n        // Adding a null value is the same as excluding truthy values.\n        // Remove inclusion if it exists.\n        results.removeFilterValue('has', key);\n        results.addFilterValues('!has', [key]);\n      } else {\n        // Remove exclusion if it exists.\n        results.removeFilter(`!${key}`);\n\n        if (Array.isArray(value)) {\n          // For array values, add to existing filters\n          const currentFilters = results.getFilterValues(key);\n          value = [...new Set([...currentFilters, ...value])];\n        } else {\n          value = [String(value)];\n        }\n\n        results.setFilterValues(key, value);\n      }\n      break;\n    case Actions.EXCLUDE:\n      if (value === null || value === undefined) {\n        // Excluding a null value is the same as including truthy values.\n        // Remove exclusion if it exists.\n        results.removeFilterValue('!has', key);\n        results.addFilterValues('has', [key]);\n      } else {\n        // Remove positive if it exists.\n        results.removeFilter(key);\n        // Negations should stack up.\n        const negation = `!${key}`;\n        value = Array.isArray(value) ? value : [String(value)];\n        const currentNegations = results.getFilterValues(negation);\n        value = [...new Set([...currentNegations, ...value])];\n        results.setFilterValues(negation, value);\n      }\n      break;\n    case Actions.SHOW_GREATER_THAN: {\n      // Remove query token if it already exists\n      results.setFilterValues(key, [`>${value}`]);\n      break;\n    }\n    case Actions.SHOW_LESS_THAN: {\n      // Remove query token if it already exists\n      results.setFilterValues(key, [`<${value}`]);\n      break;\n    }\n    // these actions do not modify the query in any way,\n    // instead they have side effects\n    case Actions.TRANSACTION:\n    case Actions.RELEASE:\n    case Actions.DRILLDOWN:\n      break;\n    default:\n      throw new Error(`Unknown action type. ${action}`);\n  }\n}\n\ntype CellActionsOpts = {\n  column: TableColumn<keyof TableDataRow>;\n  dataRow: TableDataRow;\n  handleCellAction: (action: Actions, value: React.ReactText) => void;\n  /**\n   * allow list of actions to display on the context menu\n   */\n  allowActions?: Actions[];\n};\n\nfunction makeCellActions({\n  dataRow,\n  column,\n  handleCellAction,\n  allowActions,\n}: CellActionsOpts) {\n  // Do not render context menu buttons for the span op breakdown field.\n  if (isRelativeSpanOperationBreakdownField(column.name)) {\n    return null;\n  }\n\n  // Do not render context menu buttons for the equation fields until we can query on them\n  if (isEquationAlias(column.name)) {\n    return null;\n  }\n\n  const fieldAlias = getAggregateAlias(column.name);\n\n  let value = dataRow[fieldAlias];\n\n  // error.handled is a strange field where null = true.\n  if (\n    Array.isArray(value) &&\n    value[0] === null &&\n    column.column.kind === 'field' &&\n    column.column.field === 'error.handled'\n  ) {\n    value = 1;\n  }\n  const actions: React.ReactNode[] = [];\n\n  function addMenuItem(action: Actions, menuItem: React.ReactNode) {\n    if ((Array.isArray(allowActions) && allowActions.includes(action)) || !allowActions) {\n      actions.push(menuItem);\n    }\n  }\n\n  if (\n    !['duration', 'number', 'percentage'].includes(column.type) ||\n    (value === null && column.column.kind === 'field')\n  ) {\n    addMenuItem(\n      Actions.ADD,\n      <ActionItem\n        key=\"add-to-filter\"\n        data-test-id=\"add-to-filter\"\n        onClick={() => handleCellAction(Actions.ADD, value)}\n      >\n        {t('Add to filter')}\n      </ActionItem>\n    );\n\n    if (column.type !== 'date') {\n      addMenuItem(\n        Actions.EXCLUDE,\n        <ActionItem\n          key=\"exclude-from-filter\"\n          data-test-id=\"exclude-from-filter\"\n          onClick={() => handleCellAction(Actions.EXCLUDE, value)}\n        >\n          {t('Exclude from filter')}\n        </ActionItem>\n      );\n    }\n  }\n\n  if (\n    ['date', 'duration', 'integer', 'number', 'percentage'].includes(column.type) &&\n    value !== null\n  ) {\n    addMenuItem(\n      Actions.SHOW_GREATER_THAN,\n      <ActionItem\n        key=\"show-values-greater-than\"\n        data-test-id=\"show-values-greater-than\"\n        onClick={() => handleCellAction(Actions.SHOW_GREATER_THAN, value)}\n      >\n        {t('Show values greater than')}\n      </ActionItem>\n    );\n\n    addMenuItem(\n      Actions.SHOW_LESS_THAN,\n      <ActionItem\n        key=\"show-values-less-than\"\n        data-test-id=\"show-values-less-than\"\n        onClick={() => handleCellAction(Actions.SHOW_LESS_THAN, value)}\n      >\n        {t('Show values less than')}\n      </ActionItem>\n    );\n  }\n\n  if (column.column.kind === 'field' && column.column.field === 'transaction') {\n    addMenuItem(\n      Actions.TRANSACTION,\n      <ActionItem\n        key=\"transaction-summary\"\n        data-test-id=\"transaction-summary\"\n        onClick={() => handleCellAction(Actions.TRANSACTION, value)}\n      >\n        {t('Go to summary')}\n      </ActionItem>\n    );\n  }\n\n  if (column.column.kind === 'field' && column.column.field === 'release' && value) {\n    addMenuItem(\n      Actions.RELEASE,\n      <ActionItem\n        key=\"release\"\n        data-test-id=\"release\"\n        onClick={() => handleCellAction(Actions.RELEASE, value)}\n      >\n        {t('Go to release')}\n      </ActionItem>\n    );\n  }\n\n  if (column.column.kind === 'function' && column.column.function[0] === 'count_unique') {\n    addMenuItem(\n      Actions.DRILLDOWN,\n      <ActionItem\n        key=\"drilldown\"\n        data-test-id=\"per-cell-drilldown\"\n        onClick={() => handleCellAction(Actions.DRILLDOWN, value)}\n      >\n        {t('View Stacks')}\n      </ActionItem>\n    );\n  }\n\n  if (\n    column.column.kind === 'function' &&\n    column.column.function[0] === 'user_misery' &&\n    defined(dataRow.project_threshold_config)\n  ) {\n    addMenuItem(\n      Actions.EDIT_THRESHOLD,\n      <ActionItem\n        key=\"edit_threshold\"\n        data-test-id=\"edit-threshold\"\n        onClick={() => handleCellAction(Actions.EDIT_THRESHOLD, value)}\n      >\n        {tct('Edit threshold ([threshold]ms)', {\n          threshold: dataRow.project_threshold_config[1],\n        })}\n      </ActionItem>\n    );\n  }\n\n  if (actions.length === 0) {\n    return null;\n  }\n\n  return actions;\n}\n\ntype Props = React.PropsWithoutRef<CellActionsOpts>;\n\ntype State = {\n  isHovering: boolean;\n  isOpen: boolean;\n};\n\nclass CellAction extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    let portal = document.getElementById('cell-action-portal');\n    if (!portal) {\n      portal = document.createElement('div');\n      portal.setAttribute('id', 'cell-action-portal');\n      document.body.appendChild(portal);\n    }\n    this.portalEl = portal;\n    this.menuEl = null;\n  }\n\n  state: State = {\n    isHovering: false,\n    isOpen: false,\n  };\n\n  componentDidUpdate(_props: Props, prevState: State) {\n    if (this.state.isOpen && prevState.isOpen === false) {\n      document.addEventListener('click', this.handleClickOutside, true);\n    }\n    if (this.state.isOpen === false && prevState.isOpen) {\n      document.removeEventListener('click', this.handleClickOutside, true);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside, true);\n  }\n\n  private portalEl: Element;\n  private menuEl: Element | null;\n\n  handleClickOutside = (event: MouseEvent) => {\n    if (!this.menuEl) {\n      return;\n    }\n    if (!(event.target instanceof Element)) {\n      return;\n    }\n    if (this.menuEl.contains(event.target)) {\n      return;\n    }\n    this.setState({isOpen: false, isHovering: false});\n  };\n\n  handleMouseEnter = () => {\n    this.setState({isHovering: true});\n  };\n\n  handleMouseLeave = () => {\n    this.setState(state => {\n      // Don't hide the button if the menu is open.\n      if (state.isOpen) {\n        return state;\n      }\n      return {...state, isHovering: false};\n    });\n  };\n\n  handleMenuToggle = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    this.setState({isOpen: !this.state.isOpen});\n  };\n\n  renderMenu() {\n    const {isOpen} = this.state;\n\n    const actions = makeCellActions(this.props);\n\n    if (actions === null) {\n      // do not render the menu if there are no per cell actions\n      return null;\n    }\n\n    const modifiers: PopperProps['modifiers'] = {\n      hide: {\n        enabled: false,\n      },\n      preventOverflow: {\n        padding: 10,\n        enabled: true,\n        boundariesElement: 'viewport',\n      },\n    };\n    let menu: React.ReactPortal | null = null;\n\n    if (isOpen) {\n      menu = createPortal(\n        <Popper placement=\"top\" modifiers={modifiers}>\n          {({ref: popperRef, style, placement, arrowProps}) => (\n            <Menu\n              ref={ref => {\n                (popperRef as Function)(ref);\n                this.menuEl = ref;\n              }}\n              style={style}\n            >\n              <MenuArrow\n                ref={arrowProps.ref}\n                data-placement={placement}\n                style={arrowProps.style}\n              />\n              <MenuButtons onClick={event => event.stopPropagation()}>\n                {actions}\n              </MenuButtons>\n            </Menu>\n          )}\n        </Popper>,\n        this.portalEl\n      );\n    }\n\n    return (\n      <MenuRoot>\n        <Manager>\n          <Reference>\n            {({ref}) => (\n              <MenuButton ref={ref} onClick={this.handleMenuToggle}>\n                <IconEllipsis size=\"sm\" data-test-id=\"cell-action\" color=\"blue300\" />\n              </MenuButton>\n            )}\n          </Reference>\n          {menu}\n        </Manager>\n      </MenuRoot>\n    );\n  }\n\n  render() {\n    const {children} = this.props;\n    const {isHovering} = this.state;\n\n    return (\n      <Container\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {children}\n        {isHovering && this.renderMenu()}\n      </Container>\n    );\n  }\n}\n\nexport default CellAction;\n\nconst Container = styled('div')`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst MenuRoot = styled('div')`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst Menu = styled('div')`\n  margin: ${space(1)} 0;\n\n  z-index: ${p => p.theme.zIndex.tooltip};\n`;\n\nconst MenuButtons = styled('div')`\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: ${p => p.theme.dropShadowHeavy};\n  overflow: hidden;\n`;\n\nconst MenuArrow = styled('span')`\n  position: absolute;\n  width: 18px;\n  height: 9px;\n  /* left and top set by popper */\n\n  &[data-placement*='bottom'] {\n    margin-top: -9px;\n    &::before {\n      border-width: 0 9px 9px 9px;\n      border-color: transparent transparent ${p => p.theme.border} transparent;\n    }\n    &::after {\n      top: 1px;\n      left: 1px;\n      border-width: 0 8px 8px 8px;\n      border-color: transparent transparent ${p => p.theme.background} transparent;\n    }\n  }\n  &[data-placement*='top'] {\n    margin-bottom: -8px;\n    bottom: 0;\n    &::before {\n      border-width: 9px 9px 0 9px;\n      border-color: ${p => p.theme.border} transparent transparent transparent;\n    }\n    &::after {\n      bottom: 1px;\n      left: 1px;\n      border-width: 8px 8px 0 8px;\n      border-color: ${p => p.theme.background} transparent transparent transparent;\n    }\n  }\n\n  &::before,\n  &::after {\n    width: 0;\n    height: 0;\n    content: '';\n    display: block;\n    position: absolute;\n    border-style: solid;\n  }\n`;\n\nconst ActionItem = styled('button')`\n  display: block;\n  width: 100%;\n  padding: ${space(1)} ${space(2)};\n  background: transparent;\n\n  outline: none;\n  border: 0;\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-align: left;\n  line-height: 1.2;\n\n  &:hover {\n    background: ${p => p.theme.backgroundSecondary};\n  }\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst MenuButton = styled('button')`\n  display: flex;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  justify-content: center;\n  align-items: center;\n\n  background: ${p => color(p.theme.background).alpha(0.85).string()};\n  border-radius: ${p => p.theme.borderRadius};\n  border: 1px solid ${p => p.theme.border};\n  cursor: pointer;\n  outline: none;\n`;\n","import styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayModes} from './transactionOverview/charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n"],"names":["SortLink","align","title","canSort","generateSortLink","onClick","direction","target","StyledNonLink","arrow","StyledIconArrow","size","StyledLink","to","props","forwardProps","omit","p","IconArrow","getTransactionDetailsUrl","orgSlug","eventSlug","transaction","query","spanId","locationQuery","defined","pathname","hash","spanTargetHash","undefined","Actions","updateQuery","results","action","column","value","key","name","type","getDuration","Array","isArray","Set","length","ADD","removeFilterValue","addFilterValues","removeFilter","currentFilters","getFilterValues","String","setFilterValues","EXCLUDE","negation","currentNegations","SHOW_GREATER_THAN","SHOW_LESS_THAN","TRANSACTION","RELEASE","DRILLDOWN","Error","CellAction","Component","constructor","super","isHovering","isOpen","event","this","menuEl","Element","contains","setState","state","preventDefault","portal","document","getElementById","createElement","setAttribute","body","appendChild","portalEl","componentDidUpdate","_props","prevState","addEventListener","handleClickOutside","removeEventListener","componentWillUnmount","renderMenu","actions","dataRow","handleCellAction","allowActions","isRelativeSpanOperationBreakdownField","isEquationAlias","getAggregateAlias","kind","field","addMenuItem","menuItem","includes","push","ActionItem","t","function","project_threshold_config","EDIT_THRESHOLD","tct","threshold","makeCellActions","menu","createPortal","placement","modifiers","hide","enabled","preventOverflow","padding","boundariesElement","ref","popperRef","style","arrowProps","Menu","MenuArrow","MenuButtons","stopPropagation","MenuRoot","MenuButton","handleMenuToggle","color","render","children","Container","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","space","theme","zIndex","tooltip","background","border","borderRadius","dropShadowHeavy","innerBorder","fontSizeMedium","backgroundSecondary","alpha","string","TransactionFilterOptions","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","MutableSearch","transactionSummaryRouteWithQuery","projectID","unselectedSeries","display","trendFunction","trendColumn","showTransactions","additionalQuery","generateTransactionSummaryRoute","searchFilter","formatString","project","environment","statsPeriod","start","end","generateTraceLink","dateSelection","organization","tableRow","_query","traceId","trace","getTraceDetailsUrl","generateTransactionLink","transactionName","generateEventSlug","slug","SidebarSpacer"],"sourceRoot":""}