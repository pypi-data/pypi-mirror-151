{"version":3,"file":"chunks/vendors-node_modules_copy-text-to-clipboard_index_js-node_modules_core-js_modules_es_reflect_-6bdf0f.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///../node_modules/copy-text-to-clipboard/index.js","webpack:///../node_modules/core-js/modules/es.reflect.to-string-tag.js","webpack:///../node_modules/lodash/_arrayAggregator.js","webpack:///../node_modules/lodash/_arrayIncludes.js","webpack:///../node_modules/lodash/_arrayIncludesWith.js","webpack:///../node_modules/lodash/_baseAggregator.js","webpack:///../node_modules/lodash/_baseIndexOf.js","webpack:///../node_modules/lodash/_baseIsNaN.js","webpack:///../node_modules/lodash/_baseOrderBy.js","webpack:///../node_modules/lodash/_basePick.js","webpack:///../node_modules/lodash/_basePickBy.js","webpack:///../node_modules/lodash/_baseRest.js","webpack:///../node_modules/lodash/_baseSet.js","webpack:///../node_modules/lodash/_baseSortBy.js","webpack:///../node_modules/lodash/_baseUniq.js","webpack:///../node_modules/lodash/_compareAscending.js","webpack:///../node_modules/lodash/_compareMultiple.js","webpack:///../node_modules/lodash/_createAggregator.js","webpack:///../node_modules/lodash/_createSet.js","webpack:///../node_modules/lodash/_isIterateeCall.js","webpack:///../node_modules/lodash/_strictIndexOf.js","webpack:///../node_modules/lodash/compact.js","webpack:///../node_modules/lodash/flattenDepth.js","webpack:///../node_modules/lodash/isEmpty.js","webpack:///../node_modules/lodash/isNull.js","webpack:///../node_modules/lodash/isNumber.js","webpack:///../node_modules/lodash/noop.js","webpack:///../node_modules/lodash/partition.js","webpack:///../node_modules/lodash/pick.js","webpack:///../node_modules/lodash/pickBy.js","webpack:///../node_modules/lodash/sortBy.js","webpack:///../node_modules/lodash/uniq.js","webpack:///../node_modules/lodash/uniqBy.js"],"sourcesContent":["'use strict';\n\nconst copyTextToClipboard = (input, {target = document.body} = {}) => {\n\tconst element = document.createElement('textarea');\n\tconst previouslyFocusedElement = document.activeElement;\n\n\telement.value = input;\n\n\t// Prevent keyboard from showing on mobile\n\telement.setAttribute('readonly', '');\n\n\telement.style.contain = 'strict';\n\telement.style.position = 'absolute';\n\telement.style.left = '-9999px';\n\telement.style.fontSize = '12pt'; // Prevent zooming on iOS\n\n\tconst selection = document.getSelection();\n\tlet originalRange = false;\n\tif (selection.rangeCount > 0) {\n\t\toriginalRange = selection.getRangeAt(0);\n\t}\n\n\ttarget.append(element);\n\telement.select();\n\n\t// Explicit selection workaround for iOS\n\telement.selectionStart = 0;\n\telement.selectionEnd = input.length;\n\n\tlet isSuccess = false;\n\ttry {\n\t\tisSuccess = document.execCommand('copy');\n\t} catch (_) {}\n\n\telement.remove();\n\n\tif (originalRange) {\n\t\tselection.removeAllRanges();\n\t\tselection.addRange(originalRange);\n\t}\n\n\t// Get the focus back on the previously focused element, if any\n\tif (previouslyFocusedElement) {\n\t\tpreviouslyFocusedElement.focus();\n\t}\n\n\treturn isSuccess;\n};\n\nmodule.exports = copyTextToClipboard;\n// TODO: Remove this for the next major release\nmodule.exports.default = copyTextToClipboard;\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n$({ global: true }, { Reflect: {} });\n\n// Reflect[@@toStringTag] property\n// https://tc39.es/ecma262/#sec-reflect-@@tostringtag\nsetToStringTag(global.Reflect, 'Reflect', true);\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n","var baseFlatten = require('./_baseFlatten'),\n    toInteger = require('./toInteger');\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nmodule.exports = flattenDepth;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nmodule.exports = isNull;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"names":["copyTextToClipboard","input","target","document","body","element","createElement","previouslyFocusedElement","activeElement","value","setAttribute","style","contain","position","left","fontSize","selection","getSelection","originalRange","rangeCount","getRangeAt","append","select","selectionStart","selectionEnd","length","isSuccess","execCommand","_","remove","removeAllRanges","addRange","focus","module","exports","$","global","setToStringTag","Reflect","array","setter","iteratee","accumulator","index","baseIndexOf","comparator","baseEach","collection","key","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","isArray","iteratees","orders","result","object","other","basePickBy","hasIn","paths","path","baseSet","castPath","predicate","overRest","setToString","func","start","assignValue","isIndex","isObject","toKey","customizer","lastIndex","nested","newValue","objValue","undefined","comparer","sort","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","includes","isCommon","seen","set","outer","computed","seenIndex","push","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareAscending","objCriteria","criteria","othCriteria","ordersLength","arrayAggregator","baseAggregator","initializer","Set","noop","values","eq","isArrayLike","type","resIndex","baseFlatten","toInteger","depth","baseKeys","getTag","isArguments","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","splice","tag","size","call","baseGetTag","isObjectLike","partition","createAggregator","basePick","pick","flatRest","getAllKeysIn","props","prop","baseOrderBy","baseRest","isIterateeCall","sortBy","baseUniq"],"sourceRoot":""}