{"version":3,"file":"chunks/app_components_asyncComponent_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/asyncComponentSearchInput.tsx","webpack:///./app/views/permissionDenied.tsx","webpack:///./app/components/asyncComponent.tsx","webpack:///./app/components/list/utils.tsx","webpack:///./app/components/list/index.tsx","webpack:///./app/components/list/listItem.tsx","webpack:///./app/components/loadingError.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/styles/organization.tsx","webpack:///./app/utils/getRouteStringFromRoutes.tsx","webpack:///./app/utils/withProject.tsx","webpack:///./app/views/routeError.tsx"],"sourcesContent":["import {Component} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport Input from 'sentry/components/forms/controls/input';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\n\ntype RenderProps = {\n  busy: boolean;\n  defaultSearchBar: React.ReactNode;\n  handleChange: (value: string) => void;\n  value: string;\n};\n\ntype DefaultProps = {\n  /**\n   * Placeholder text in the search input\n   */\n  placeholder: string;\n  /**\n   * Time in milliseconds to wait before firing off the request\n   */\n  debounceWait?: number; // optional, otherwise app/views/settings/organizationMembers/organizationMembersList.tsx L:191 is not happy\n};\n\ntype Props = WithRouterProps &\n  DefaultProps & {\n    api: Client;\n    onError: () => void;\n    onSuccess: (data: object, resp: ResponseMeta | undefined) => void;\n    /**\n     * URL to make the search request to\n     */\n    url: string;\n\n    /**\n     * A render-prop child may be passed to handle custom rendering of the input.\n     */\n    children?: (otps: RenderProps) => React.ReactNode;\n    className?: string;\n    onSearchSubmit?: (query: string, event: React.FormEvent) => void;\n\n    /**\n     * Updates URL with search query in the URL param: `query`\n     */\n    updateRoute?: boolean;\n  };\n\ntype State = {\n  busy: boolean;\n  query: string;\n};\n\n/**\n * This is a search input that can be easily used in AsyncComponent/Views.\n *\n * It probably doesn't make too much sense outside of an AsyncComponent atm.\n */\nclass AsyncComponentSearchInput extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    placeholder: t('Search...'),\n    debounceWait: 200,\n  };\n\n  state: State = {\n    query: '',\n    busy: false,\n  };\n\n  immediateQuery = async (searchQuery: string) => {\n    const {location, api} = this.props;\n    this.setState({busy: true});\n\n    try {\n      const [data, , resp] = await api.requestPromise(`${this.props.url}`, {\n        includeAllArgs: true,\n        method: 'GET',\n        query: {...location.query, query: searchQuery},\n      });\n      // only update data if the request's query matches the current query\n      if (this.state.query === searchQuery) {\n        this.props.onSuccess(data, resp);\n      }\n    } catch {\n      this.props.onError();\n    }\n\n    this.setState({busy: false});\n  };\n\n  query = debounce(this.immediateQuery, this.props.debounceWait);\n\n  handleChange = (query: string) => {\n    this.query(query);\n    this.setState({query});\n  };\n\n  handleInputChange = (evt: React.ChangeEvent<HTMLInputElement>) =>\n    this.handleChange(evt.target.value);\n\n  /**\n   * This is called when \"Enter\" (more specifically a form \"submit\" event) is pressed.\n   */\n  handleSearch = (evt: React.FormEvent<HTMLFormElement>) => {\n    const {updateRoute, onSearchSubmit} = this.props;\n    evt.preventDefault();\n\n    // Update the URL to reflect search term.\n    if (updateRoute) {\n      const {router, location} = this.props;\n      router.push({\n        pathname: location.pathname,\n        query: {\n          query: this.state.query,\n        },\n      });\n    }\n\n    if (typeof onSearchSubmit !== 'function') {\n      return;\n    }\n    onSearchSubmit(this.state.query, evt);\n  };\n\n  render() {\n    const {placeholder, children, className} = this.props;\n    const {busy, query} = this.state;\n\n    const defaultSearchBar = (\n      <Form onSubmit={this.handleSearch}>\n        <Input\n          value={query}\n          onChange={this.handleInputChange}\n          className={className}\n          placeholder={placeholder}\n        />\n        {busy && <StyledLoadingIndicator size={18} hideMessage mini />}\n      </Form>\n    );\n\n    return children === undefined\n      ? defaultSearchBar\n      : children({defaultSearchBar, busy, value: query, handleChange: this.handleChange});\n  }\n}\n\nconst StyledLoadingIndicator = styled(LoadingIndicator)`\n  position: absolute;\n  right: 25px;\n  top: 50%;\n  transform: translateY(-13px);\n`;\n\nconst Form = styled('form')`\n  position: relative;\n`;\n\nexport default withRouter(AsyncComponentSearchInput);\n","import {Component} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingError from 'sentry/components/loadingError';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t, tct} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization, Project} from 'sentry/types';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProject from 'sentry/utils/withProject';\n\nconst ERROR_NAME = 'Permission Denied';\n\ntype Props = WithRouterProps & {\n  organization: Organization;\n  project?: Project;\n};\n\nclass PermissionDenied extends Component<Props> {\n  componentDidMount() {\n    const {organization, project, routes} = this.props;\n\n    const route = getRouteStringFromRoutes(routes);\n    Sentry.withScope(scope => {\n      scope.setFingerprint([ERROR_NAME, route]);\n      scope.setExtra('route', route);\n      scope.setExtra('orgFeatures', (organization && organization.features) || []);\n      scope.setExtra('orgAccess', (organization && organization.access) || []);\n      scope.setExtra('projectFeatures', (project && project.features) || []);\n      Sentry.captureException(new Error(`${ERROR_NAME}${route ? ` : ${route}` : ''}`));\n    });\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={t('Permission Denied')}>\n        <PageContent>\n          <LoadingError\n            message={tct(\n              `Your role does not have the necessary permissions to access this\n               resource, please read more about [link:organizational roles]`,\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/product/accounts/membership/\" />\n                ),\n              }\n            )}\n          />\n        </PageContent>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default withRouter(withOrganization(withProject(PermissionDenied)));\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport isEqual from 'lodash/isEqual';\nimport * as PropTypes from 'prop-types';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport AsyncComponentSearchInput from 'sentry/components/asyncComponentSearchInput';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport {metric} from 'sentry/utils/analytics';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport PermissionDenied from 'sentry/views/permissionDenied';\nimport RouteError from 'sentry/views/routeError';\n\nexport type AsyncComponentProps = Partial<RouteComponentProps<{}, {}>>;\n\ntype AsyncComponentState = {\n  [key: string]: any;\n  error: boolean;\n  errors: Record<string, ResponseMeta>;\n  loading: boolean;\n  reloading: boolean;\n  remainingRequests?: number;\n};\n\ntype SearchInputProps = React.ComponentProps<typeof AsyncComponentSearchInput>;\n\ntype RenderSearchInputArgs = Omit<\n  SearchInputProps,\n  'api' | 'onSuccess' | 'onError' | 'url' | keyof RouteComponentProps<{}, {}>\n> & {\n  stateKey?: string;\n  url?: SearchInputProps['url'];\n};\n\n/**\n * Wraps methods on the AsyncComponent to catch errors and set the `error`\n * state on error.\n */\nfunction wrapErrorHandling<T extends any[], U>(\n  component: AsyncComponent,\n  fn: (...args: T) => U\n) {\n  return (...args: T): U | null => {\n    try {\n      return fn(...args);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n      window.setTimeout(() => {\n        throw error;\n      });\n      component.setState({error});\n      return null;\n    }\n  };\n}\n\nclass AsyncComponent<\n  P extends AsyncComponentProps = AsyncComponentProps,\n  S extends AsyncComponentState = AsyncComponentState\n> extends Component<P, S> {\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  constructor(props: P, context: any) {\n    super(props, context);\n\n    this.fetchData = wrapErrorHandling(this, this.fetchData.bind(this));\n    this.render = wrapErrorHandling(this, this.render.bind(this));\n\n    this.state = this.getDefaultState() as Readonly<S>;\n\n    this._measurement = {\n      hasMeasured: false,\n    };\n    if (props.routes && props.routes) {\n      metric.mark({name: `async-component-${getRouteStringFromRoutes(props.routes)}`});\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.api = new Client();\n    this.fetchData();\n\n    if (this.reloadOnVisible) {\n      document.addEventListener('visibilitychange', this.visibilityReloader);\n    }\n  }\n\n  componentDidUpdate(prevProps: P, prevContext: any) {\n    const isRouterInContext = !!prevContext.router;\n    const isLocationInProps = prevProps.location !== undefined;\n\n    const currentLocation = isLocationInProps\n      ? this.props.location\n      : isRouterInContext\n      ? this.context.router.location\n      : null;\n    const prevLocation = isLocationInProps\n      ? prevProps.location\n      : isRouterInContext\n      ? prevContext.router.location\n      : null;\n\n    if (!(currentLocation && prevLocation)) {\n      return;\n    }\n\n    // Take a measurement from when this component is initially created until it finishes it's first\n    // set of API requests\n    if (\n      !this._measurement.hasMeasured &&\n      this._measurement.finished &&\n      this.props.routes\n    ) {\n      const routeString = getRouteStringFromRoutes(this.props.routes);\n      metric.measure({\n        name: 'app.component.async-component',\n        start: `async-component-${routeString}`,\n        data: {\n          route: routeString,\n          error: this._measurement.error,\n        },\n      });\n      this._measurement.hasMeasured = true;\n    }\n\n    // Re-fetch data when router params change.\n    if (\n      !isEqual(this.props.params, prevProps.params) ||\n      currentLocation.search !== prevLocation.search ||\n      currentLocation.state !== prevLocation.state\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    document.removeEventListener('visibilitychange', this.visibilityReloader);\n  }\n\n  /**\n   * Override this flag to have the component reload its state when the window\n   * becomes visible again. This will set the loading and reloading state, but\n   * will not render a loading state during reloading.\n   *\n   * eslint-disable-next-line react/sort-comp\n   */\n  reloadOnVisible = false;\n\n  /**\n   * When enabling reloadOnVisible, this flag may be used to turn on and off\n   * the reloading. This is useful if your component only needs to reload when\n   * becoming visible during certain states.\n   *\n   * eslint-disable-next-line react/sort-comp\n   */\n  shouldReloadOnVisible = false;\n\n  /**\n   * This affects how the component behaves when `remountComponent` is called\n   * By default, the component gets put back into a \"loading\" state when re-fetching data.\n   * If this is true, then when we fetch data, the original ready component remains mounted\n   * and it will need to handle any additional \"reloading\" states\n   */\n  shouldReload = false;\n\n  /**\n   * should `renderError` render the `detail` attribute of a 400 error\n   */\n  shouldRenderBadRequests = false;\n\n  /**\n   * If a request fails and is not a bad request, and if `disableErrorReport` is set to false,\n   * the UI will display an error modal.\n   *\n   * It is recommended to enable this property ideally only when the subclass is used by a top level route.\n   */\n  disableErrorReport = true;\n\n  api: Client = new Client();\n  private _measurement: any;\n\n  // XXX: can't call this getInitialState as React whines\n  getDefaultState(): AsyncComponentState {\n    const endpoints = this.getEndpoints();\n    const state = {\n      // has all data finished requesting?\n      loading: true,\n      // is the component reload\n      reloading: false,\n      // is there an error loading ANY data?\n      error: false,\n      errors: {},\n    };\n    endpoints.forEach(([stateKey, _endpoint]) => {\n      state[stateKey] = null;\n    });\n    return state;\n  }\n\n  // Check if we should measure render time for this component\n  markShouldMeasure = ({\n    remainingRequests,\n    error,\n  }: {error?: any; remainingRequests?: number} = {}) => {\n    if (!this._measurement.hasMeasured) {\n      this._measurement.finished = remainingRequests === 0;\n      this._measurement.error = error || this._measurement.error;\n    }\n  };\n\n  remountComponent = () => {\n    if (this.shouldReload) {\n      this.reloadData();\n    } else {\n      this.setState(this.getDefaultState(), this.fetchData);\n    }\n  };\n\n  visibilityReloader = () =>\n    this.shouldReloadOnVisible &&\n    !this.state.loading &&\n    !document.hidden &&\n    this.reloadData();\n\n  reloadData() {\n    this.fetchData({reloading: true});\n  }\n\n  fetchData = (extraState?: object) => {\n    const endpoints = this.getEndpoints();\n\n    if (!endpoints.length) {\n      this.setState({loading: false, error: false});\n      return;\n    }\n\n    // Cancel any in flight requests\n    this.api.clear();\n\n    this.setState({\n      loading: true,\n      error: false,\n      remainingRequests: endpoints.length,\n      ...extraState,\n    });\n\n    endpoints.forEach(([stateKey, endpoint, params, options]) => {\n      options = options || {};\n      // If you're using nested async components/views make sure to pass the\n      // props through so that the child component has access to props.location\n      const locationQuery = (this.props.location && this.props.location.query) || {};\n      let query = (params && params.query) || {};\n      // If paginate option then pass entire `query` object to API call\n      // It should only be expecting `query.cursor` for pagination\n      if ((options.paginate || locationQuery.cursor) && !options.disableEntireQuery) {\n        query = {...locationQuery, ...query};\n      }\n\n      this.api.request(endpoint, {\n        method: 'GET',\n        ...params,\n        query,\n        success: (data, _, resp) => {\n          this.handleRequestSuccess({stateKey, data, resp}, true);\n        },\n        error: error => {\n          // Allow endpoints to fail\n          // allowError can have side effects to handle the error\n          if (options.allowError && options.allowError(error)) {\n            error = null;\n          }\n          this.handleError(error, [stateKey, endpoint, params, options]);\n        },\n      });\n    });\n  };\n\n  onRequestSuccess(_resp /* {stateKey, data, resp} */) {\n    // Allow children to implement this\n  }\n\n  onRequestError(_resp, _args) {\n    // Allow children to implement this\n  }\n\n  onLoadAllEndpointsSuccess() {\n    // Allow children to implement this\n  }\n\n  handleRequestSuccess({stateKey, data, resp}, initialRequest?: boolean) {\n    this.setState(\n      prevState => {\n        const state = {\n          [stateKey]: data,\n          // TODO(billy): This currently fails if this request is retried by SudoModal\n          [`${stateKey}PageLinks`]: resp?.getResponseHeader('Link'),\n        };\n\n        if (initialRequest) {\n          state.remainingRequests = prevState.remainingRequests! - 1;\n          state.loading = prevState.remainingRequests! > 1;\n          state.reloading = prevState.reloading && state.loading;\n          this.markShouldMeasure({remainingRequests: state.remainingRequests});\n        }\n\n        return state;\n      },\n      () => {\n        // if everything is loaded and we don't have an error, call the callback\n        if (this.state.remainingRequests === 0 && !this.state.error) {\n          this.onLoadAllEndpointsSuccess();\n        }\n      }\n    );\n    this.onRequestSuccess({stateKey, data, resp});\n  }\n\n  handleError(error, args) {\n    const [stateKey] = args;\n    if (error && error.responseText) {\n      Sentry.addBreadcrumb({\n        message: error.responseText,\n        category: 'xhr',\n        level: Sentry.Severity.Error,\n      });\n    }\n    this.setState(prevState => {\n      const loading = prevState.remainingRequests! > 1;\n      const state: AsyncComponentState = {\n        [stateKey]: null,\n        errors: {\n          ...prevState.errors,\n          [stateKey]: error,\n        },\n        error: prevState.error || !!error,\n        remainingRequests: prevState.remainingRequests! - 1,\n        loading,\n        reloading: prevState.reloading && loading,\n      };\n      this.markShouldMeasure({remainingRequests: state.remainingRequests, error: true});\n\n      return state;\n    });\n    this.onRequestError(error, args);\n  }\n\n  /**\n   * Return a list of endpoint queries to make.\n   *\n   * return [\n   *   ['stateKeyName', '/endpoint/', {optional: 'query params'}, {options}]\n   * ]\n   */\n  getEndpoints(): Array<[string, string, any?, any?]> {\n    return [];\n  }\n\n  renderSearchInput({stateKey, url, ...props}: RenderSearchInputArgs) {\n    const [firstEndpoint] = this.getEndpoints() || [null];\n    const stateKeyOrDefault = stateKey || (firstEndpoint && firstEndpoint[0]);\n    const urlOrDefault = url || (firstEndpoint && firstEndpoint[1]);\n    return (\n      <AsyncComponentSearchInput\n        url={urlOrDefault}\n        {...props}\n        api={this.api}\n        onSuccess={(data, resp) => {\n          this.handleRequestSuccess({stateKey: stateKeyOrDefault, data, resp});\n        }}\n        onError={() => {\n          this.renderError(new Error('Error with AsyncComponentSearchInput'));\n        }}\n      />\n    );\n  }\n\n  renderLoading(): React.ReactNode {\n    return <LoadingIndicator />;\n  }\n\n  renderError(error?: Error, disableLog = false): React.ReactNode {\n    const {errors} = this.state;\n\n    // 401s are captured by SudoModal, but may be passed back to AsyncComponent if they close the modal without identifying\n    const unauthorizedErrors = Object.values(errors).find(resp => resp?.status === 401);\n\n    // Look through endpoint results to see if we had any 403s, means their role can not access resource\n    const permissionErrors = Object.values(errors).find(resp => resp?.status === 403);\n\n    // If all error responses have status code === 0, then show error message but don't\n    // log it to sentry\n    const shouldLogSentry =\n      !!Object.values(errors).find(resp => resp?.status !== 0) || disableLog;\n\n    if (unauthorizedErrors) {\n      return (\n        <LoadingError message={t('You are not authorized to access this resource.')} />\n      );\n    }\n\n    if (permissionErrors) {\n      return <PermissionDenied />;\n    }\n\n    if (this.shouldRenderBadRequests) {\n      const badRequests = Object.values(errors)\n        .filter(resp => resp?.status === 400 && resp?.responseJSON?.detail)\n        .map(resp => resp.responseJSON.detail);\n\n      if (badRequests.length) {\n        return <LoadingError message={[...new Set(badRequests)].join('\\n')} />;\n      }\n    }\n\n    return (\n      <RouteError\n        error={error}\n        disableLogSentry={!shouldLogSentry}\n        disableReport={this.disableErrorReport}\n      />\n    );\n  }\n\n  get shouldRenderLoading() {\n    return this.state.loading && (!this.shouldReload || !this.state.reloading);\n  }\n\n  renderComponent() {\n    return this.shouldRenderLoading\n      ? this.renderLoading()\n      : this.state.error\n      ? this.renderError(new Error('Unable to load all required endpoints'))\n      : this.renderBody();\n  }\n\n  /**\n   * Renders once all endpoints have been loaded\n   */\n  renderBody(): React.ReactNode {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  render() {\n    return this.renderComponent();\n  }\n}\n\nexport default AsyncComponent;\n","import {css} from '@emotion/react';\n\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\nconst bulletStyle = (theme: Theme) => css`\n  padding-left: ${space(3)};\n  list-style-type: circle;\n  & > li::marker {\n    color: ${theme.subText};\n  }\n`;\n\ntype Options = {\n  // setting initialCounterValue to 0 means the first visible step is 1\n  initialCounterValue?: number;\n  isSolid?: boolean;\n};\n\nconst numericStyle = (\n  theme: Theme,\n  {isSolid = false, initialCounterValue = 0}: Options\n) => css`\n  & > li {\n    padding-left: ${space(4)};\n    :before {\n      border-radius: 50%;\n      position: absolute;\n      counter-increment: numberedList;\n      content: counter(numberedList);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      text-align: center;\n      left: 0;\n      line-height: 1;\n      ${isSolid\n        ? css`\n            width: 24px;\n            height: 24px;\n            font-weight: 500;\n            font-size: ${theme.fontSizeSmall};\n            background-color: ${theme.yellow300};\n            color: ${theme.black};\n          `\n        : css`\n            top: 3px;\n            width: 18px;\n            height: 18px;\n            font-weight: 600;\n            font-size: 10px;\n            border: 1px solid ${theme.gray500};\n          `}\n    }\n  }\n  counter-reset: numberedList ${initialCounterValue};\n`;\n\nexport const listSymbol = {\n  numeric: 'numeric',\n  'colored-numeric': 'colored-numeric',\n  bullet: 'bullet',\n};\n\nexport function getListSymbolStyle(\n  theme: Theme,\n  symbol: keyof typeof listSymbol,\n  initialCounterValue?: number\n) {\n  switch (symbol) {\n    case 'numeric':\n      return numericStyle(theme, {initialCounterValue});\n    case 'colored-numeric':\n      return numericStyle(theme, {isSolid: true, initialCounterValue});\n    default:\n      return bulletStyle(theme);\n  }\n}\n","import {Children, cloneElement, isValidElement} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nimport {getListSymbolStyle, listSymbol} from './utils';\n\ntype Props = {\n  children: React.ReactNode;\n  className?: string;\n  'data-test-id'?: string;\n  initialCounterValue?: number;\n  symbol?: keyof typeof listSymbol | React.ReactElement;\n};\n\nconst List = styled(\n  ({\n    children,\n    className,\n    symbol,\n    initialCounterValue: _initialCounterValue,\n    ...props\n  }: Props) => {\n    const getWrapperComponent = () => {\n      switch (symbol) {\n        case 'numeric':\n        case 'colored-numeric':\n          return 'ol';\n        default:\n          return 'ul';\n      }\n    };\n\n    const Wrapper = getWrapperComponent();\n\n    return (\n      <Wrapper className={className} {...props}>\n        {!symbol || typeof symbol === 'string'\n          ? children\n          : Children.map(children, child => {\n              if (!isValidElement(child)) {\n                return child;\n              }\n              return cloneElement(child as React.ReactElement, {\n                symbol,\n              });\n            })}\n      </Wrapper>\n    );\n  }\n)`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: grid;\n  gap: ${space(0.5)};\n  ${p =>\n    typeof p.symbol === 'string' &&\n    listSymbol[p.symbol] &&\n    getListSymbolStyle(p.theme, p.symbol, p.initialCounterValue)}\n`;\n\nexport default List;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  'aria-label'?: string;\n  children?: React.ReactNode;\n  className?: string;\n  'data-test-id'?: string;\n  onClick?: (event: React.MouseEvent) => void;\n  symbol?: React.ReactElement;\n};\n\nconst ListItem = styled(\n  ({\n    children,\n    className,\n    symbol,\n    onClick,\n    'aria-label': ariaLabel,\n    'data-test-id': dataTestId,\n  }: Props) => (\n    <li\n      className={className}\n      onClick={onClick}\n      role={onClick ? 'button' : undefined}\n      aria-label={onClick ? ariaLabel : undefined}\n      data-test-id={dataTestId}\n    >\n      {symbol && <Symbol>{symbol}</Symbol>}\n      {children}\n    </li>\n  )\n)`\n  position: relative;\n  ${p => p.symbol && `padding-left: ${space(4)};`}\n`;\n\nconst Symbol = styled('div')`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  min-height: 22.5px;\n`;\n\nexport default ListItem;\n","import styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  className?: string;\n  message?: React.ReactNode;\n  onRetry?: () => void;\n};\n\n/**\n * Renders an Alert box of type \"error\". Renders a \"Retry\" button only if a\n * `onRetry` callback is defined.\n */\nfunction LoadingError({\n  className,\n  onRetry,\n  message = t('There was an error loading data.'),\n}: Props) {\n  return (\n    <StyledAlert\n      type=\"error\"\n      showIcon\n      className={className}\n      trailingItems={\n        onRetry && (\n          <Button onClick={onRetry} type=\"button\" priority=\"default\" size=\"small\">\n            {t('Retry')}\n          </Button>\n        )\n      }\n    >\n      {message}\n    </StyledAlert>\n  );\n}\n\nexport default LoadingError;\n\nconst StyledAlert = styled(Alert)`\n  ${/* sc-selector */ Panel} & {\n    border-radius: 0;\n    border-width: 1px 0;\n  }\n`;\n","import DocumentTitle from 'react-document-title';\n\ntype Props = {\n  children?: React.ReactChild;\n  /**\n   * Should the ` - Sentry` suffix be excluded?\n   */\n  noSuffix?: boolean;\n  /**\n   * The organization slug to show in the title\n   */\n  orgSlug?: string;\n  /**\n   * The project slug to show in the title.\n   */\n  projectSlug?: string;\n\n  /**\n   * This string will be shown at the very front of the title\n   */\n  title?: string;\n};\n\n/**\n * Assigns the document title. The deepest nested version of this title will be\n * the one which is assigned.\n */\nfunction SentryDocumentTitle({\n  title = '',\n  orgSlug,\n  projectSlug,\n  noSuffix,\n  children,\n}: Props) {\n  function getPageTitle() {\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    if (projectSlug) {\n      return `${title} - ${projectSlug}`;\n    }\n\n    return title;\n  }\n\n  const pageTitle = getPageTitle();\n\n  const documentTitle = noSuffix\n    ? pageTitle\n    : pageTitle !== ''\n    ? `${pageTitle} - Sentry`\n    : 'Sentry';\n\n  return <DocumentTitle title={documentTitle}>{children}</DocumentTitle>;\n}\n\nexport default SentryDocumentTitle;\n","// Shared styles for the new org level pages with global project/env/time selection\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nexport const PageContent = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: ${space(3)} ${space(4)};\n`;\n\nexport const PageHeader = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${space(2)};\n  min-height: 32px;\n`;\n\nexport const HeaderTitle = styled('h4')`\n  ${p => p.theme.text.pageTitle};\n  color: ${p => p.theme.headingColor};\n  flex: 1;\n  margin: 0;\n`;\n","import {PlainRoute} from 'react-router';\nimport findLastIndex from 'lodash/findLastIndex';\n\ntype RouteWithPath = Omit<PlainRoute, 'path'> & Required<Pick<PlainRoute, 'path'>>;\n\n/**\n * Creates a route string from an array of `routes` from react-router\n *\n * It will look for the last route path that begins with a `/` and\n * concatenate all of the following routes. Skips any routes without a path\n *\n * @param {Array<{}>} routes An array of route objects from react-router\n * @return String Returns a route path\n */\nexport default function getRouteStringFromRoutes(routes?: PlainRoute[]): string {\n  if (!Array.isArray(routes)) {\n    return '';\n  }\n\n  const routesWithPaths = routes.filter((route): route is RouteWithPath => !!route.path);\n\n  const lastAbsolutePathIndex = findLastIndex(routesWithPaths, ({path}) =>\n    path.startsWith('/')\n  );\n\n  return routesWithPaths\n    .slice(lastAbsolutePathIndex)\n    .filter(({path}) => !!path)\n    .map(({path}) => path)\n    .join('');\n}\n","import {Component} from 'react';\n\nimport SentryTypes from 'sentry/sentryTypes';\nimport {Project} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedProjectProps = {\n  project?: Project;\n};\n\n/**\n * Currently wraps component with project from context\n */\nconst withProject = <P extends InjectedProjectProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends Component<\n    Omit<P, keyof InjectedProjectProps> & Partial<InjectedProjectProps>\n  > {\n    static displayName = `withProject(${getDisplayName(WrappedComponent)})`;\n    static contextTypes = {\n      project: SentryTypes.Project,\n    };\n\n    render() {\n      const {project, ...props} = this.props;\n      return (\n        <WrappedComponent\n          {...({project: project ?? this.context.project, ...props} as P)}\n        />\n      );\n    }\n  };\n\nexport default withProject;\n","import {useEffect} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport Alert from 'sentry/components/alert';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t, tct} from 'sentry/locale';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport withProject from 'sentry/utils/withProject';\n\ntype Props = WithRouterProps & {\n  /**\n   * Disable logging to Sentry\n   */\n  disableLogSentry?: boolean;\n  /**\n   * Disable the report dialog\n   */\n  disableReport?: boolean;\n  error?: Error;\n  project?: Project;\n};\n\nfunction RouteError({error, disableLogSentry, disableReport, project, routes}: Props) {\n  const {organization} = useLegacyStore(OrganizationStore);\n\n  useEffect(() => {\n    if (disableLogSentry) {\n      return undefined;\n    }\n    if (!error) {\n      return undefined;\n    }\n\n    const route = getRouteStringFromRoutes(routes);\n    const enrichScopeContext = (scope: Sentry.Scope) => {\n      scope.setExtra('route', route);\n      scope.setExtra('orgFeatures', organization?.features ?? []);\n      scope.setExtra('orgAccess', organization?.access ?? []);\n      scope.setExtra('projectFeatures', project?.features ?? []);\n      return scope;\n    };\n\n    if (route) {\n      // Unexpectedly, error.message would sometimes not have a setter\n      // property, causing another exception to be thrown, and losing the\n      // original error in the process. Wrapping the mutation in a try-catch in\n      // an attempt to preserve the original error for logging.\n      //\n      // See https://github.com/getsentry/sentry/issues/16314 for more details.\n      try {\n        error.message = `${error.message}: ${route}`;\n      } catch (e) {\n        Sentry.withScope(scope => {\n          enrichScopeContext(scope);\n          Sentry.captureException(e);\n        });\n      }\n    }\n\n    // TODO(dcramer): show something in addition to embed (that contains it?)\n    // throw this in a timeout so if it errors we don't fall over\n    const reportDialogTimeout = window.setTimeout(() => {\n      Sentry.withScope(scope => {\n        enrichScopeContext(scope);\n        Sentry.captureException(error);\n      });\n\n      if (!disableReport) {\n        Sentry.showReportDialog();\n      }\n    });\n\n    return function cleanup() {\n      window.clearTimeout(reportDialogTimeout);\n    };\n  }, [error, disableLogSentry]);\n\n  // Remove the report dialog on unmount\n  useEffect(() => () => document.querySelector('.sentry-error-embed-wrapper')?.remove());\n\n  // TODO(dcramer): show additional resource links\n  return (\n    <Alert type=\"error\">\n      <Heading>{t('Oops! Something went wrong')}</Heading>\n      <p>\n        {t(`\n          It looks like you've hit an issue in our client application. Don't worry though!\n          We use Sentry to monitor Sentry and it's likely we're already looking into this!\n          `)}\n      </p>\n      <p>{t(\"If you're daring, you may want to try the following:\")}</p>\n      <List symbol=\"bullet\">\n        {window && window.adblockSuspected && (\n          <ListItem>\n            {t(\n              \"We detected something AdBlock-like. Try disabling it, as it's known to cause issues.\"\n            )}\n          </ListItem>\n        )}\n        <ListItem>\n          {tct(`Give it a few seconds and [link:reload the page].`, {\n            link: (\n              <a\n                onClick={() => {\n                  window.location.href = window.location.href;\n                }}\n              />\n            ),\n          })}\n        </ListItem>\n        <ListItem>\n          {tct(`If all else fails, [link:contact us] with more details.`, {\n            link: <a href=\"https://github.com/getsentry/sentry/issues/new/choose\" />,\n          })}\n        </ListItem>\n      </List>\n    </Alert>\n  );\n}\n\nconst Heading = styled('h1')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  line-height: 1.4;\n  margin-bottom: ${space(1)};\n`;\n\nexport default withRouter(withProject(RouteError));\n"],"names":["AsyncComponentSearchInput","Component","query","busy","async","location","api","this","props","setState","data","resp","requestPromise","url","includeAllArgs","method","searchQuery","state","onSuccess","onError","debounce","immediateQuery","debounceWait","evt","handleChange","target","value","updateRoute","onSearchSubmit","preventDefault","router","push","pathname","render","placeholder","children","className","defaultSearchBar","Form","onSubmit","handleSearch","onChange","handleInputChange","StyledLoadingIndicator","size","hideMessage","mini","undefined","t","LoadingIndicator","withRouter","ERROR_NAME","PermissionDenied","componentDidMount","organization","project","routes","route","getRouteStringFromRoutes","Sentry","scope","setFingerprint","setExtra","features","access","Error","title","message","tct","link","href","withOrganization","withProject","wrapErrorHandling","component","fn","error","console","window","setTimeout","AsyncComponent","constructor","context","super","Client","remainingRequests","_measurement","hasMeasured","finished","shouldReload","reloadData","getDefaultState","fetchData","shouldReloadOnVisible","loading","document","hidden","extraState","endpoints","getEndpoints","length","clear","forEach","stateKey","endpoint","params","options","locationQuery","paginate","cursor","disableEntireQuery","request","success","_","handleRequestSuccess","allowError","handleError","bind","metric","name","UNSAFE_componentWillMount","reloadOnVisible","addEventListener","visibilityReloader","componentDidUpdate","prevProps","prevContext","isRouterInContext","isLocationInProps","currentLocation","prevLocation","routeString","start","isEqual","search","remountComponent","componentWillUnmount","removeEventListener","reloading","errors","_endpoint","onRequestSuccess","_resp","onRequestError","_args","onLoadAllEndpointsSuccess","initialRequest","prevState","getResponseHeader","markShouldMeasure","args","responseText","category","level","renderSearchInput","firstEndpoint","stateKeyOrDefault","urlOrDefault","renderError","renderLoading","disableLog","unauthorizedErrors","Object","values","find","status","permissionErrors","shouldLogSentry","shouldRenderBadRequests","badRequests","filter","responseJSON","detail","map","Set","join","disableLogSentry","disableReport","disableErrorReport","shouldRenderLoading","renderComponent","renderBody","PropTypes","numericStyle","theme","isSolid","initialCounterValue","css","space","fontSizeSmall","yellow300","black","gray500","listSymbol","numeric","bullet","symbol","_initialCounterValue","Wrapper","getWrapperComponent","Children","child","isValidElement","cloneElement","p","subText","bulletStyle","getListSymbolStyle","ListItem","onClick","ariaLabel","dataTestId","role","Symbol","LoadingError","onRetry","StyledAlert","type","showIcon","trailingItems","priority","Alert","Panel","SentryDocumentTitle","orgSlug","projectSlug","noSuffix","pageTitle","documentTitle","PageContent","PageHeader","HeaderTitle","text","headingColor","Array","isArray","routesWithPaths","path","lastAbsolutePathIndex","findLastIndex","startsWith","slice","WrappedComponent","getDisplayName","SentryTypes","RouteError","useLegacyStore","OrganizationStore","useEffect","enrichScopeContext","e","reportDialogTimeout","clearTimeout","querySelector","remove","Heading","adblockSuspected","fontSizeLarge"],"sourceRoot":""}