{"version":3,"file":"chunks/app_components_modals_createOwnershipRuleModal_tsx-app_components_panels_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"2vBA+BA,MAAMA,UAA8BC,EAAAA,EAClCC,eACE,MAAM,aAACC,EAAD,QAAeC,EAAf,QAAwBC,GAAWC,KAAKC,MAC9C,MAAO,CACL,CAAC,YAAc,aAAYJ,EAAaK,QAAQJ,EAAQI,mBACxD,CACE,aACC,WAAUH,cACX,GACA,CACEI,WAAYC,GAEO,MAAjBA,EAAMC,SAGZ,CAAC,YAAc,WAAUN,qBAI7BO,aACE,MAAM,UAACC,EAAD,WAAYC,EAAZ,UAAwBC,GAAaT,KAAKU,MAChD,IAAKH,IAAcC,IAAeC,EAChC,OAAO,KAET,MAAME,EAAOH,EACTA,EAAWI,UACRC,MAAK,CAACC,EAAGC,IAAMD,EAAEE,MAAQD,EAAEC,QAC3BC,KAAIC,GAAKA,EAAEC,QACXC,MAAM,EAAG,GACZ,GAGEC,GAASZ,MAAAA,OAAD,EAACA,EAAWa,SAAoBC,MAAK,QAAC,KAACC,GAAF,QACjD,CAAC,YAAa,cAAcC,SAASD,MAGvC,IAAIE,EAAkB,GACW,cAGC,IAHd,eAAhBL,MAAAA,OAAA,EAAAA,EAAOG,QACTE,EAAM,UAAGL,MAAAA,GAAH,UAAGA,EAAOM,YAAV,iBAAG,EAAaC,cAAhB,iBAAG,EAAsB,UAAzB,iBAAG,EAA0BC,kBAA7B,aAAG,EAAsCH,cAAzC,QAAmD,IAEvC,gBAAhBL,MAAAA,OAAA,EAAAA,EAAOG,QACTE,EAAM,UAAGL,MAAAA,GAAH,UAAGA,EAAOM,YAAV,aAAG,EAAaD,cAAhB,QAA0B,IAIlC,MAAMI,EAAcJ,EAAOK,QAAOC,GAASA,EAAMC,QAC7CH,EAAYI,OAAS,IACvBR,EAASI,GAGX,MAAMK,EAAQC,GAAAA,CAAKV,EAAOT,KAAIe,GAASA,EAAMK,UAAYL,EAAMM,SAAW,MACvEP,QAAOb,GAAKA,IACZE,MAAM,EAAG,IAEZ,OACE,QAAC,EAAAmB,SAAD,YACE,uBAAIC,EAAAA,EAAAA,GAAE,iEACN,QAAC,IAAD,IACMxC,KAAKC,MACTwC,aAAalC,MAAAA,OAAA,EAAAA,EAAWmC,MAAO,GAC/B/B,KAAMA,EACNwB,MAAOA,QAOjB,UCtFMQ,EAA2B,IAAiD,IAAhD,KAACC,EAAD,OAAOC,EAAP,WAAeC,KAAe7C,GAAkB,EAChF,MAAM8C,GAAuBC,EAAAA,EAAAA,aAA2BC,IAExDC,EAAAA,EAAAA,YAAU,IACD,KACLC,OAAOC,cAAcL,EAAqBM,WAE3C,IAEH,MAAMC,GAAgBC,EAAAA,EAAAA,cAAY,KAAM,MACtC,UAAAtD,EAAMuD,eAAN,cAAAvD,GACAkD,OAAOM,aAAaV,EAAqBM,SACzCN,EAAqBM,QAAUF,OAAOO,WAAWZ,EAAY,OAC5D,CAAC7C,EAAMuD,UAEV,OACE,QAAC,EAAAjB,SAAD,YACE,QAACM,EAAD,CAAQc,aAAW,EAAnB,UAAqBnB,EAAAA,EAAAA,GAAE,4BACvB,QAACI,EAAD,WACE,QAAC,EAAD,IAA2B3C,EAAO2D,OAAQN,UAnB5CX,EAAAA,YAAAA,2BAyBC,MAAMkB,GAAWC,EAAAA,EAAAA,IAAH,sBACEC,EAAAA,GAAAA,YAAAA,GADF,wDASrB,K,kmBC7CA,MAAMC,EAAc,mBAAO,MAAP,oBAAH,yBACSC,GAAKA,EAAEF,MAAMG,QADtB,WAEND,GAAKA,EAAEF,MAAMI,SAFP,oBAAjB,KAMA,EAAeH,OAAAA,EAAAA,EAAAA,EAAf","sources":["webpack:///./app/views/settings/project/projectOwnership/modal.tsx","webpack:///./app/components/modals/createOwnershipRuleModal.tsx","webpack:///./app/components/panels/panelFooter.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport uniq from 'lodash/uniq';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {t} from 'sentry/locale';\nimport {Frame, Organization, Project, TagWithTopValues} from 'sentry/types';\nimport {Entry, EventError} from 'sentry/types/event';\nimport OwnerInput from 'sentry/views/settings/project/projectOwnership/ownerInput';\n\ntype IssueOwnershipResponse = {\n  autoAssignment: boolean;\n  dateCreated: string;\n  fallthrough: boolean;\n  isActive: boolean;\n  lastUpdated: string;\n  raw: string;\n};\n\ntype Props = AsyncComponent['props'] & {\n  issueId: string;\n  onSave: () => void;\n  organization: Organization;\n  project: Project;\n};\n\ntype State = {\n  eventData: null | EventError;\n  ownership: null | IssueOwnershipResponse;\n  urlTagData: null | TagWithTopValues;\n} & AsyncComponent['state'];\n\nclass ProjectOwnershipModal extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, project, issueId} = this.props;\n    return [\n      ['ownership', `/projects/${organization.slug}/${project.slug}/ownership/`],\n      [\n        'urlTagData',\n        `/issues/${issueId}/tags/url/`,\n        {},\n        {\n          allowError: error =>\n            // Allow for 404s\n            error.status === 404,\n        },\n      ],\n      ['eventData', `/issues/${issueId}/events/latest/`],\n    ];\n  }\n\n  renderBody() {\n    const {ownership, urlTagData, eventData} = this.state;\n    if (!ownership && !urlTagData && !eventData) {\n      return null;\n    }\n    const urls = urlTagData\n      ? urlTagData.topValues\n          .sort((a, b) => a.count - b.count)\n          .map(i => i.value)\n          .slice(0, 5)\n      : [];\n\n    // pull frame data out of exception or the stacktrace\n    const entry = (eventData?.entries as Entry[]).find(({type}) =>\n      ['exception', 'stacktrace'].includes(type)\n    );\n\n    let frames: Frame[] = [];\n    if (entry?.type === 'exception') {\n      frames = entry?.data?.values?.[0]?.stacktrace?.frames ?? [];\n    }\n    if (entry?.type === 'stacktrace') {\n      frames = entry?.data?.frames ?? [];\n    }\n\n    // filter frames by inApp unless there would be 0\n    const inAppFrames = frames.filter(frame => frame.inApp);\n    if (inAppFrames.length > 0) {\n      frames = inAppFrames;\n    }\n\n    const paths = uniq(frames.map(frame => frame.filename || frame.absPath || ''))\n      .filter(i => i)\n      .slice(0, 30);\n\n    return (\n      <Fragment>\n        <p>{t('Match against Issue Data: (globbing syntax *, ? supported)')}</p>\n        <OwnerInput\n          {...this.props}\n          initialText={ownership?.raw || ''}\n          urls={urls}\n          paths={paths}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default ProjectOwnershipModal;\n","import {Fragment, useCallback, useEffect, useRef} from 'react';\nimport {css} from '@emotion/react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {t} from 'sentry/locale';\nimport theme from 'sentry/utils/theme';\nimport ProjectOwnershipModal from 'sentry/views/settings/project/projectOwnership/modal';\n\ntype Props = ModalRenderProps &\n  Pick<ProjectOwnershipModal['props'], 'organization' | 'project' | 'issueId'> & {\n    onClose?: () => void;\n  };\n\nconst CreateOwnershipRuleModal = ({Body, Header, closeModal, ...props}: Props) => {\n  const closeModalTimeoutRef = useRef<number | undefined>(undefined);\n\n  useEffect(() => {\n    return () => {\n      window.clearInterval(closeModalTimeoutRef.current);\n    };\n  }, []);\n\n  const handleSuccess = useCallback(() => {\n    props.onClose?.();\n    window.clearTimeout(closeModalTimeoutRef.current);\n    closeModalTimeoutRef.current = window.setTimeout(closeModal, 2000);\n  }, [props.onClose]);\n\n  return (\n    <Fragment>\n      <Header closeButton>{t('Create Ownership Rule')}</Header>\n      <Body>\n        <ProjectOwnershipModal {...props} onSave={handleSuccess} />\n      </Body>\n    </Fragment>\n  );\n};\n\nexport const modalCss = css`\n  @media (min-width: ${theme.breakpoints[0]}) {\n    width: 80%;\n  }\n  [role='document'] {\n    overflow: initial;\n  }\n`;\n\nexport default CreateOwnershipRuleModal;\n","import styled from '@emotion/styled';\n\nconst PanelFooter = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  color: ${p => p.theme.subText};\n  font-size: 14px;\n`;\n\nexport default PanelFooter;\n"],"names":["ProjectOwnershipModal","AsyncComponent","getEndpoints","organization","project","issueId","this","props","slug","allowError","error","status","renderBody","ownership","urlTagData","eventData","state","urls","topValues","sort","a","b","count","map","i","value","slice","entry","entries","find","type","includes","frames","data","values","stacktrace","inAppFrames","filter","frame","inApp","length","paths","uniq","filename","absPath","Fragment","t","initialText","raw","CreateOwnershipRuleModal","Body","Header","closeModal","closeModalTimeoutRef","useRef","undefined","useEffect","window","clearInterval","current","handleSuccess","useCallback","onClose","clearTimeout","setTimeout","closeButton","onSave","modalCss","css","theme","PanelFooter","p","border","subText"],"sourceRoot":""}