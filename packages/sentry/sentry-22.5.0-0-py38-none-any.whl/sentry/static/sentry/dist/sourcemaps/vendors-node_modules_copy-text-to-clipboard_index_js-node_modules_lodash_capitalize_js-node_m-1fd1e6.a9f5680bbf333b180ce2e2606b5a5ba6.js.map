{"version":3,"file":"chunks/vendors-node_modules_copy-text-to-clipboard_index_js-node_modules_lodash_capitalize_js-node_m-1fd1e6.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///../node_modules/copy-text-to-clipboard/index.js","webpack:///../node_modules/lodash/capitalize.js","webpack:///../node_modules/lodash/omit.js","webpack:///../node_modules/lodash/round.js","webpack:///../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","webpack:///../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js"],"sourcesContent":["'use strict';\n\nconst copyTextToClipboard = (input, {target = document.body} = {}) => {\n\tconst element = document.createElement('textarea');\n\tconst previouslyFocusedElement = document.activeElement;\n\n\telement.value = input;\n\n\t// Prevent keyboard from showing on mobile\n\telement.setAttribute('readonly', '');\n\n\telement.style.contain = 'strict';\n\telement.style.position = 'absolute';\n\telement.style.left = '-9999px';\n\telement.style.fontSize = '12pt'; // Prevent zooming on iOS\n\n\tconst selection = document.getSelection();\n\tlet originalRange = false;\n\tif (selection.rangeCount > 0) {\n\t\toriginalRange = selection.getRangeAt(0);\n\t}\n\n\ttarget.append(element);\n\telement.select();\n\n\t// Explicit selection workaround for iOS\n\telement.selectionStart = 0;\n\telement.selectionEnd = input.length;\n\n\tlet isSuccess = false;\n\ttry {\n\t\tisSuccess = document.execCommand('copy');\n\t} catch (_) {}\n\n\telement.remove();\n\n\tif (originalRange) {\n\t\tselection.removeAllRanges();\n\t\tselection.addRange(originalRange);\n\t}\n\n\t// Get the focus back on the previously focused element, if any\n\tif (previouslyFocusedElement) {\n\t\tpreviouslyFocusedElement.focus();\n\t}\n\n\treturn isSuccess;\n};\n\nmodule.exports = copyTextToClipboard;\n// TODO: Remove this for the next major release\nmodule.exports.default = copyTextToClipboard;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","var createRound = require('./_createRound');\n\n/**\n * Computes `number` rounded to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round.\n * @param {number} [precision=0] The precision to round to.\n * @returns {number} Returns the rounded number.\n * @example\n *\n * _.round(4.006);\n * // => 4\n *\n * _.round(4.006, 2);\n * // => 4.01\n *\n * _.round(4060, -2);\n * // => 4100\n */\nvar round = createRound('round');\n\nmodule.exports = round;\n","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";"],"names":["copyTextToClipboard","input","target","document","body","element","createElement","previouslyFocusedElement","activeElement","value","setAttribute","style","contain","position","left","fontSize","selection","getSelection","originalRange","rangeCount","getRangeAt","append","select","selectionStart","selectionEnd","length","isSuccess","execCommand","_","remove","removeAllRanges","addRange","focus","module","exports","toString","upperFirst","string","toLowerCase","arrayMap","baseClone","baseUnset","castPath","copyObject","customOmitClone","flatRest","getAllKeysIn","omit","object","paths","result","isDeep","path","CLONE_DEEP_FLAG","round","createRound","_class","_temp","CellMeasurer","_React$PureComponent","_getPrototypeOf2","_this","this","_len","arguments","args","Array","_key","call","apply","concat","_this$props","props","cache","_this$props$columnInd","columnIndex","parent","_this$props$rowIndex","rowIndex","index","_this$_getCellMeasure","_getCellMeasurements","height","width","getHeight","getWidth","set","recomputeGridSize","Element","console","warn","_child","_maybeMeasureCell","key","children","measure","_measure","registerChild","_registerChild","node","findDOMNode","ownerDocument","defaultView","HTMLElement","styleWidth","styleHeight","hasFixedWidth","hasFixedHeight","Math","ceil","offsetHeight","offsetWidth","_this$props2","_this$props2$columnIn","_this$props2$rowIndex","has","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","params","undefined","_ref","_keyMapper","_columnWidthCache","_defaultWidth","_ref2","_rowHeightCache","_defaultHeight","defaultHeight","defaultWidth","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","max","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnWidth","i","columnKey","rowHeight","_i","rowKey","get"],"sourceRoot":""}