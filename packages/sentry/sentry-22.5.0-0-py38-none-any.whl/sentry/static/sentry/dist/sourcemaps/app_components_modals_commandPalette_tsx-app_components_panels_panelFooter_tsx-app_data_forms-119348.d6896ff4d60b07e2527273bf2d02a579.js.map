{"version":3,"file":"chunks/app_components_modals_commandPalette_tsx-app_components_panels_panelFooter_tsx-app_data_forms-119348.xxxxxxxxxxxxxxxxxxxx.js","mappings":"i0BAWA,SAASA,EAAT,GAAkD,IAA1B,KAACC,GAAyB,EAChD,MAAMC,GAAQC,EAAAA,EAAAA,KAId,OAFAC,EAAAA,EAAAA,YAAU,MAAWC,EAAAA,EAAAA,IAAU,kBAAmB,MAAK,KAGrD,QAACJ,EAAD,WACE,QAAC,KAAD,UACG,QAAEK,IAAKC,GAAP,SACC,QAAC,IAAD,CACEC,WAAW,kBACXC,UAAW,EACXC,WAAY,GACZC,kBAAmBJ,CAAY;;;;;;;wCAOHL,EAAMU;gBAElCC,YAAa,QAAC,cAACC,GAAF,SACX,QAACC,EAAD,WACE,QAACC,EAAD,CACEC,WAAS,KACLH,EAAc,CAChBI,KAAM,OACNC,aAAaC,EAAAA,EAAAA,GAAE,8DA5B1BpB,EAAAA,YAAAA,iBAwCT,UAEaqB,EAAW,CAAH,uDAMfN,GAAe,OAAO,MAAP,sBAAH,YACLO,EAAAA,EAAAA,GAAM,KADD,KAIZN,GAAc,OAAOO,EAAAA,EAAP,sBAAH,uBAEJD,EAAAA,EAAAA,GAAM,GAFF,iI,6JC7DjB,MAAME,EAAc,mBAAO,MAAP,oBAAH,yBACSC,GAAKA,EAAEvB,MAAMU,QADtB,WAENa,GAAKA,EAAEvB,MAAMwB,SAFP,oBAAjB,KAMA,EAAeF,OAAAA,EAAAA,EAAAA,EAAf,M,yFCLO,MAAMG,EAAQ,4BAqBrB,EAnBqC,CACnC,CAEEC,MAAO,uBACPC,OAAQ,CACN,CACEC,KAAM,QACNZ,KAAM,SAGNa,MAAO,mBACPZ,YAAa,6BACba,KAAM,kDACNC,kBAAkB,O,mQChBnB,MAAMC,EAA4B,CACvC,aACA,mBACA,oBACA,gBACA,SACA,eACA,aACA,eACA,cACA,OACA,mBACA,SACA,oBACA,SACA,KACA,MACA,OACA,OACA,eACA,qBACA,iBACA,UACA,YACA,UACA,gBAGWC,EAAW,CACtB,OACA,aACA,mBACA,qBACA,uBACA,sBACA,mBACA,oBACA,iBACA,qBAGWC,EAAS,CACpB,UACA,YACA,UACA,YACA,qBACA,uBACA,eACA,UACA,eACA,QACA,iBAEA,eACA,aACA,eAGWC,EAAU,CACrB,SACA,oBACA,gBACA,SACA,KACA,UACA,OACA,iBACA,aACA,cACA,eACA,eACA,cACA,mBACA,SACA,OACA,eACA,WACA,eACA,OACA,MACA,cACA,cACA,eACA,SACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,iBACA,iBACA,YACA,OACA,aACA,YACA,OACA,UAGWC,EAAa,CACxB,mBACA,wBACA,sBACA,iBACA,sBACA,oBACA,mBACA,uBAGWC,EAAU,CACrB,cACA,SACA,kBACA,aACA,OACA,WACA,sBACA,SACA,kBACA,kBACA,kBACA,YACA,WACA,QACA,UACA,UAGIC,EAAe,CACnB,CAACC,GAAI,UAAWX,MAAMV,EAAAA,EAAAA,GAAE,WAAYsB,UAAWR,GAC/C,CAACO,GAAI,UAAWX,MAAMV,EAAAA,EAAAA,GAAE,WAAYsB,UAAWP,GAC/C,CAACM,GAAI,SAAUX,MAAMV,EAAAA,EAAAA,GAAE,UAAWsB,UAAWL,GAC7C,CAACI,GAAI,SAAUX,MAAMV,EAAAA,EAAAA,GAAE,UAAWsB,UAAWN,GAC7C,CAACK,GAAI,UAAWX,MAAMV,EAAAA,EAAAA,GAAE,WAAYsB,UAAWH,GAC/C,CAACE,GAAI,aAAcX,MAAMV,EAAAA,EAAAA,GAAE,cAAesB,UAAWJ,IAG1CK,EAA4B,IACpCR,EACH,eACA,UACA,YAGWS,EAAU,CACrB,iBACA,eACA,wBAGWC,EAA6B,YACxC,aACA,mBACA,mBACA,iBACA,MACA,cACA,SACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,iBACA,iBACA,YACA,OACA,eACA,WACA,gBApBK,KAuBMC,EAA+B,YAE1C,aACA,mBACA,qBACA,uBACA,sBACA,mBACA,oBACA,iBACA,oBAEA,UACA,YACA,UACA,qBACA,eACA,UACA,eAEA,SACA,OACA,eACA,WACA,eACA,SACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,iBACA,iBACA,YACA,OAGA,cACA,SACA,kBACA,kBACA,aA1CK,KAgDMC,EAAwD,CACnEC,OAAQ,CAAC,MAAO,QAalB,EAAeR,OAAAA,EAAAA,EAAAA,EAAf,M,2oBCxNA,MAAMS,EA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","sources":["webpack:///./app/components/modals/commandPalette.tsx","webpack:///./app/components/panels/panelFooter.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/data/platformCategories.tsx","webpack:///./app/utils/analytics/trackAdvancedAnalyticsEvent.tsx","webpack:///./app/utils/callIfFunction.tsx","webpack:///./app/utils/events.tsx","webpack:///./app/utils/platform.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport {ClassNames, css, useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Input from 'sentry/components/forms/controls/input';\nimport {Search} from 'sentry/components/search';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {analytics} from 'sentry/utils/analytics';\n\nfunction CommandPalette({Body}: ModalRenderProps) {\n  const theme = useTheme();\n\n  useEffect(() => void analytics('omnisearch.open', {}), []);\n\n  return (\n    <Body>\n      <ClassNames>\n        {({css: injectedCss}) => (\n          <Search\n            entryPoint=\"command_palette\"\n            minSearch={1}\n            maxResults={10}\n            dropdownClassName={injectedCss`\n                width: 100%;\n                border: transparent;\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n                position: initial;\n                box-shadow: none;\n                border-top: 1px solid ${theme.border};\n              `}\n            renderInput={({getInputProps}) => (\n              <InputWrapper>\n                <StyledInput\n                  autoFocus\n                  {...getInputProps({\n                    type: 'text',\n                    placeholder: t('Search for projects, teams, settings, etc...'),\n                  })}\n                />\n              </InputWrapper>\n            )}\n          />\n        )}\n      </ClassNames>\n    </Body>\n  );\n}\n\nexport default CommandPalette;\n\nexport const modalCss = css`\n  [role='document'] {\n    padding: 0;\n  }\n`;\n\nconst InputWrapper = styled('div')`\n  padding: ${space(0.25)};\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  padding: ${space(1)};\n  border-radius: 8px;\n\n  outline: none;\n  border: none;\n  box-shadow: none;\n\n  :focus,\n  :active,\n  :hover {\n    outline: none;\n    border: none;\n    box-shadow: none;\n  }\n`;\n","import styled from '@emotion/styled';\n\nconst PanelFooter = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  color: ${p => p.theme.subText};\n  font-size: 14px;\n`;\n\nexport default PanelFooter;\n","import {JsonFormObject} from 'sentry/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Add Secondary Emails',\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Additional Email',\n        placeholder: 'e.g. secondary@example.com',\n        help: 'Designate an alternative email for this account',\n        showReturnButton: true,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import {t} from 'sentry/locale';\n\nexport const popularPlatformCategories = [\n  'javascript',\n  'javascript-react',\n  'javascript-nextjs',\n  'python-django',\n  'python',\n  'python-flask',\n  'ruby-rails',\n  'node-express',\n  'php-laravel',\n  'java',\n  'java-spring-boot',\n  'dotnet',\n  'dotnet-aspnetcore',\n  'csharp',\n  'go',\n  'php',\n  'ruby',\n  'node',\n  'react-native',\n  'javascript-angular',\n  'javascript-vue',\n  'android',\n  'apple-ios',\n  'flutter',\n  'dart-flutter',\n] as const;\n\nexport const frontend = [\n  'dart',\n  'javascript',\n  'javascript-react',\n  'javascript-angular',\n  'javascript-angularjs',\n  'javascript-backbone',\n  'javascript-ember',\n  'javascript-gatsby',\n  'javascript-vue',\n  'javascript-nextjs',\n] as const;\n\nexport const mobile = [\n  'android',\n  'apple-ios',\n  'cordova',\n  'capacitor',\n  'javascript-cordova',\n  'javascript-capacitor',\n  'react-native',\n  'flutter',\n  'dart-flutter',\n  'unity',\n  'dotnet-xamarin',\n  // Old platforms\n  'java-android',\n  'cocoa-objc',\n  'cocoa-swift',\n] as const;\n\nexport const backend = [\n  'dotnet',\n  'dotnet-aspnetcore',\n  'dotnet-aspnet',\n  'elixir',\n  'go',\n  'go-http',\n  'java',\n  'java-appengine',\n  'java-log4j',\n  'java-log4j2',\n  'java-logback',\n  'java-logging',\n  'java-spring',\n  'java-spring-boot',\n  'native',\n  'node',\n  'node-express',\n  'node-koa',\n  'node-connect',\n  'perl',\n  'php',\n  'php-laravel',\n  'php-monolog',\n  'php-symfony2',\n  'python',\n  'python-django',\n  'python-flask',\n  'python-sanic',\n  'python-celery',\n  'python-bottle',\n  'python-pylons',\n  'python-pyramid',\n  'python-tornado',\n  'python-rq',\n  'ruby',\n  'ruby-rails',\n  'ruby-rack',\n  'rust',\n  'kotlin',\n] as const;\n\nexport const serverless = [\n  'python-awslambda',\n  'python-azurefunctions',\n  'python-gcpfunctions',\n  'node-awslambda',\n  'node-azurefunctions',\n  'node-gcpfunctions',\n  'dotnet-awslambda',\n  'dotnet-gcpfunctions',\n] as const;\n\nexport const desktop = [\n  'apple-macos',\n  'dotnet',\n  'dotnet-winforms',\n  'dotnet-wpf',\n  'java',\n  'electron',\n  'javascript-electron',\n  'native',\n  'native-crashpad',\n  'native-breakpad',\n  'native-minidump',\n  'native-qt',\n  'minidump',\n  'unity',\n  'flutter',\n  'kotlin',\n] as const;\n\nconst categoryList = [\n  {id: 'popular', name: t('Popular'), platforms: popularPlatformCategories},\n  {id: 'browser', name: t('Browser'), platforms: frontend},\n  {id: 'server', name: t('Server'), platforms: backend},\n  {id: 'mobile', name: t('Mobile'), platforms: mobile},\n  {id: 'desktop', name: t('Desktop'), platforms: desktop},\n  {id: 'serverless', name: t('Serverless'), platforms: serverless},\n] as const;\n\nexport const sourceMaps: PlatformKey[] = [\n  ...frontend,\n  'react-native',\n  'cordova',\n  'electron',\n];\n\nexport const tracing = [\n  'python-tracing',\n  'node-tracing',\n  'react-native-tracing',\n] as const;\n\nexport const performance: PlatformKey[] = [\n  'javascript',\n  'javascript-ember',\n  'javascript-react',\n  'javascript-vue',\n  'php',\n  'php-laravel',\n  'python',\n  'python-django',\n  'python-flask',\n  'python-sanic',\n  'python-celery',\n  'python-bottle',\n  'python-pylons',\n  'python-pyramid',\n  'python-tornado',\n  'python-rq',\n  'node',\n  'node-express',\n  'node-koa',\n  'node-connect',\n];\n\nexport const releaseHealth: PlatformKey[] = [\n  // frontend\n  'javascript',\n  'javascript-react',\n  'javascript-angular',\n  'javascript-angularjs',\n  'javascript-backbone',\n  'javascript-ember',\n  'javascript-gatsby',\n  'javascript-vue',\n  'javascript-nextjs',\n  // mobile\n  'android',\n  'apple-ios',\n  'cordova',\n  'javascript-cordova',\n  'react-native',\n  'flutter',\n  'dart-flutter',\n  // backend\n  'native',\n  'node',\n  'node-express',\n  'node-koa',\n  'node-connect',\n  'python',\n  'python-django',\n  'python-flask',\n  'python-sanic',\n  'python-celery',\n  'python-bottle',\n  'python-pylons',\n  'python-pyramid',\n  'python-tornado',\n  'python-rq',\n  'rust',\n  // serverless\n  // desktop\n  'apple-macos',\n  'native',\n  'native-crashpad',\n  'native-breakpad',\n  'native-qt',\n];\n\n/**\n * Additional aliases used for filtering in the platform picker\n */\nexport const filterAliases: Partial<Record<PlatformKey, string[]>> = {\n  native: ['cpp', 'c++'],\n};\n\nexport type PlatformKey =\n  | typeof popularPlatformCategories[number]\n  | typeof frontend[number]\n  | typeof mobile[number]\n  | typeof backend[number]\n  | typeof desktop[number]\n  | typeof tracing[number]\n  | typeof serverless[number]\n  | 'other';\n\nexport default categoryList;\n","import {coreUIEventMap, CoreUIEventParameters} from './coreuiAnalyticsEvents';\nimport {dashboardsEventMap, DashboardsEventParameters} from './dashboardsAnalyticsEvents';\nimport {discoverEventMap, DiscoverEventParameters} from './discoverAnalyticsEvents';\nimport {growthEventMap, GrowthEventParameters} from './growthAnalyticsEvents';\nimport {issueEventMap, IssueEventParameters} from './issueAnalyticsEvents';\nimport makeAnalyticsFunction from './makeAnalyticsFunction';\nimport {\n  performanceEventMap,\n  PerformanceEventParameters,\n} from './performanceAnalyticsEvents';\nimport {searchEventMap, SearchEventParameters} from './searchAnalyticsEvents';\nimport {settingsEventMap, SettingsEventParameters} from './settingsAnalyticsEvents';\nimport {TeamInsightsEventParameters, workflowEventMap} from './workflowAnalyticsEvents';\n\ntype EventParameters = GrowthEventParameters &\n  IssueEventParameters &\n  PerformanceEventParameters &\n  DashboardsEventParameters &\n  DiscoverEventParameters &\n  TeamInsightsEventParameters &\n  SearchEventParameters &\n  SettingsEventParameters &\n  CoreUIEventParameters;\n\nconst allEventMap = {\n  ...growthEventMap,\n  ...issueEventMap,\n  ...performanceEventMap,\n  ...dashboardsEventMap,\n  ...discoverEventMap,\n  ...workflowEventMap,\n  ...searchEventMap,\n  ...settingsEventMap,\n  ...coreUIEventMap,\n};\n\n/**\n * Generic typed analytics function for growth, issue, and performance events.\n * Can split up analytics functions to a smaller set of events like we do for trackIntegrationAnalytics\n */\nconst trackAdvancedAnalyticsEvent = makeAnalyticsFunction<EventParameters>(allEventMap);\n\nexport default trackAdvancedAnalyticsEvent;\n","// Checks if `fn` is a function and calls it with `args`\nexport function callIfFunction(fn: any, ...args: any[]): any {\n  return typeof fn === 'function' && fn(...args);\n}\n","import {\n  BaseGroup,\n  EventMetadata,\n  EventOrGroupType,\n  GroupTombstone,\n  TreeLabelPart,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {isMobilePlatform, isNativePlatform} from 'sentry/utils/platform';\n\nfunction isTombstone(maybe: BaseGroup | Event | GroupTombstone): maybe is GroupTombstone {\n  return !maybe.hasOwnProperty('type');\n}\n\n/**\n * Extract the display message from an event.\n */\nexport function getMessage(\n  event: Event | BaseGroup | GroupTombstone\n): string | undefined {\n  if (isTombstone(event)) {\n    return event.culprit || '';\n  }\n\n  const {metadata, type, culprit} = event;\n\n  switch (type) {\n    case EventOrGroupType.ERROR:\n      return metadata.value;\n    case EventOrGroupType.CSP:\n      return metadata.message;\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      return '';\n    default:\n      return culprit || '';\n  }\n}\n\n/**\n * Get the location from an event.\n */\nexport function getLocation(event: Event | BaseGroup | GroupTombstone) {\n  if (isTombstone(event)) {\n    return undefined;\n  }\n\n  if (event.type === EventOrGroupType.ERROR && isNativePlatform(event.platform)) {\n    return event.metadata.filename || undefined;\n  }\n\n  return undefined;\n}\n\nexport function getTreeLabelPartDetails(part: TreeLabelPart) {\n  // Note: This function also exists in Python in eventtypes/base.py, to make\n  // porting efforts simpler it's recommended to keep both variants\n  // structurally similar.\n  if (typeof part === 'string') {\n    return part;\n  }\n\n  const label = part?.function || part?.package || part?.filebase || part?.type;\n  const classbase = part?.classbase;\n\n  if (classbase) {\n    return label ? `${classbase}.${label}` : classbase;\n  }\n\n  return label || '<unknown>';\n}\n\nfunction computeTitleWithTreeLabel(metadata: EventMetadata) {\n  const {type, current_tree_label, finest_tree_label} = metadata;\n\n  const treeLabel = current_tree_label || finest_tree_label;\n\n  const formattedTreeLabel = treeLabel\n    ? treeLabel.map(labelPart => getTreeLabelPartDetails(labelPart)).join(' | ')\n    : undefined;\n\n  if (!type) {\n    return {\n      title: formattedTreeLabel || metadata.function || '<unknown>',\n      treeLabel,\n    };\n  }\n\n  if (!formattedTreeLabel) {\n    return {title: type, treeLabel: undefined};\n  }\n\n  return {\n    title: `${type} | ${formattedTreeLabel}`,\n    treeLabel: [{type}, ...(treeLabel ?? [])],\n  };\n}\n\nexport function getTitle(\n  event: Event | BaseGroup,\n  features: string[] = [],\n  grouping = false\n) {\n  const {metadata, type, culprit} = event;\n\n  const customTitle =\n    features.includes('custom-event-title') && metadata?.title\n      ? metadata.title\n      : undefined;\n\n  switch (type) {\n    case EventOrGroupType.ERROR: {\n      if (customTitle) {\n        return {\n          title: customTitle,\n          subtitle: culprit,\n          treeLabel: undefined,\n        };\n      }\n\n      const displayTitleWithTreeLabel =\n        features.includes('grouping-title-ui') &&\n        (grouping ||\n          isNativePlatform(event.platform) ||\n          isMobilePlatform(event.platform));\n\n      if (displayTitleWithTreeLabel) {\n        return {\n          subtitle: culprit,\n          ...computeTitleWithTreeLabel(metadata),\n        };\n      }\n\n      return {\n        subtitle: culprit,\n        title: metadata.type || metadata.function || '<unknown>',\n        treeLabel: undefined,\n      };\n    }\n    case EventOrGroupType.CSP:\n      return {\n        title: customTitle ?? metadata.directive ?? '',\n        subtitle: metadata.uri ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      // Due to a regression some reports did not have message persisted\n      // (https://github.com/getsentry/sentry/pull/19794) so we need to fall\n      // back to the computed title for these.\n      return {\n        title: customTitle ?? (metadata.message || event.title),\n        subtitle: metadata.origin ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.DEFAULT:\n      return {\n        title: customTitle ?? metadata.title ?? '',\n        subtitle: '',\n        treeLabel: undefined,\n      };\n    default:\n      return {\n        title: customTitle ?? event.title,\n        subtitle: '',\n        treeLabel: undefined,\n      };\n  }\n}\n\n/**\n * Returns a short eventId with only 8 characters\n */\nexport function getShortEventId(eventId: string) {\n  return eventId.substring(0, 8);\n}\n","import {mobile} from 'sentry/data/platformCategories';\n\nexport function isNativePlatform(platform: string | undefined) {\n  switch (platform) {\n    case 'cocoa':\n    case 'objc':\n    case 'native':\n    case 'swift':\n    case 'c':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isMobilePlatform(platform: string | undefined) {\n  if (!platform) {\n    return false;\n  }\n\n  return ([...mobile] as string[]).includes(platform);\n}\n"],"names":["CommandPalette","Body","theme","useTheme","useEffect","analytics","css","injectedCss","entryPoint","minSearch","maxResults","dropdownClassName","border","renderInput","getInputProps","InputWrapper","StyledInput","autoFocus","type","placeholder","t","modalCss","space","Input","PanelFooter","p","subText","route","title","fields","name","label","help","showReturnButton","popularPlatformCategories","frontend","mobile","backend","serverless","desktop","categoryList","id","platforms","sourceMaps","tracing","performance","releaseHealth","filterAliases","native","allEventMap","growthEventMap","issueEventMap","performanceEventMap","dashboardsEventMap","discoverEventMap","workflowEventMap","searchEventMap","settingsEventMap","coreUIEventMap","makeAnalyticsFunction","callIfFunction","fn","args","isTombstone","maybe","hasOwnProperty","getMessage","event","culprit","metadata","EventOrGroupType","value","message","getLocation","isNativePlatform","platform","filename","getTreeLabelPartDetails","part","function","package","filebase","classbase","computeTitleWithTreeLabel","current_tree_label","finest_tree_label","treeLabel","formattedTreeLabel","map","labelPart","join","undefined","getTitle","features","grouping","customTitle","includes","subtitle","isMobilePlatform","directive","uri","origin","getShortEventId","eventId","substring"],"sourceRoot":""}