{"version":3,"file":"chunks/app_components_dropdownButton_tsx-app_components_forms_booleanField_tsx-app_components_forms_-3e918b.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/dropdownButton.tsx","webpack:///./app/components/forms/booleanField.tsx","webpack:///./app/components/forms/controls/rangeSlider/sliderAndInputWrapper.tsx","webpack:///./app/components/forms/controls/rangeSlider/sliderLabel.tsx","webpack:///./app/components/forms/controls/rangeSlider/index.tsx","webpack:///./app/components/forms/controls/rangeSlider/slider.tsx","webpack:///./app/components/switchButton.tsx","webpack:///./app/utils/analytics/integrationAnalyticsEvents.tsx","webpack:///./app/utils/handleXhrErrorResponse.tsx","webpack:///./app/utils/marked.tsx"],"sourcesContent":["import {forwardRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport {IconChevron} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\ninterface DropdownButtonProps extends Omit<ButtonProps, 'prefix'> {\n  /**\n   * Whether the menu associated with this button is visually detached.\n   */\n  detached?: boolean;\n  /**\n   * Forward a ref to the button's root\n   */\n  forwardedRef?: React.Ref<typeof Button>;\n  /**\n   * Should the bottom border become transparent when open?\n   */\n  hideBottomBorder?: boolean;\n  /**\n   * Whether or not the button should render as open\n   */\n  isOpen?: boolean;\n  /**\n   * The fixed prefix text to show in the button eg: 'Sort By'\n   */\n  prefix?: React.ReactNode;\n  /**\n   * Button color\n   */\n  priority?: 'default' | 'primary' | 'form';\n  /**\n   * Align chevron to the right of dropdown button\n   */\n  rightAlignChevron?: boolean;\n  /**\n   * Should a chevron icon be shown?\n   */\n  showChevron?: boolean;\n}\n\nconst DropdownButton = ({\n  children,\n  forwardedRef,\n  prefix,\n  isOpen = false,\n  showChevron = false,\n  hideBottomBorder = true,\n  detached = false,\n  disabled = false,\n  priority = 'form',\n  rightAlignChevron = false,\n  ...props\n}: DropdownButtonProps) => {\n  return (\n    <StyledButton\n      {...props}\n      type=\"button\"\n      aria-haspopup=\"listbox\"\n      aria-expanded={detached ? isOpen : undefined}\n      disabled={disabled}\n      priority={priority}\n      isOpen={isOpen}\n      hideBottomBorder={hideBottomBorder}\n      detached={detached}\n      ref={forwardedRef}\n    >\n      {prefix && <LabelText>{prefix}</LabelText>}\n      {children}\n      {showChevron && (\n        <StyledChevron\n          rightAlignChevron={rightAlignChevron}\n          size=\"xs\"\n          direction={isOpen ? 'up' : 'down'}\n        />\n      )}\n    </StyledButton>\n  );\n};\n\nDropdownButton.defaultProps = {\n  showChevron: true,\n};\n\nconst StyledChevron = styled(IconChevron, {\n  shouldForwardProp: prop => prop !== 'rightAlignChevron',\n})<{\n  rightAlignChevron: boolean;\n}>`\n  margin-left: 0.33em;\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    position: ${p => p.rightAlignChevron && 'absolute'};\n    right: ${p => p.rightAlignChevron && `${space(2)}`};\n  }\n`;\n\nconst StyledButton = styled(Button)<\n  Required<\n    Pick<\n      DropdownButtonProps,\n      'isOpen' | 'disabled' | 'hideBottomBorder' | 'detached' | 'priority'\n    >\n  >\n>`\n  border-bottom-right-radius: ${p =>\n    p.isOpen && !p.detached ? 0 : p.theme.borderRadius};\n  border-bottom-left-radius: ${p => (p.isOpen && !p.detached ? 0 : p.theme.borderRadius)};\n  position: relative;\n  z-index: 2;\n\n  ${p => (p.isOpen || p.disabled) && 'box-shadow: none'};\n\n  &,\n  &:active,\n  &:focus,\n  &:hover {\n    ${p =>\n      p.isOpen &&\n      p.hideBottomBorder &&\n      !p.detached &&\n      `border-bottom-color: transparent;`}\n  }\n`;\n\nconst LabelText = styled('span')`\n  font-weight: 400;\n  padding-right: ${space(0.75)};\n  &:after {\n    content: ':';\n  }\n`;\n\nexport default forwardRef<typeof Button, DropdownButtonProps>((props, ref) => (\n  <DropdownButton forwardedRef={ref} {...props} />\n));\n","import {Component} from 'react';\n\nimport Confirm from 'sentry/components/confirm';\nimport InputField, {InputFieldProps, onEvent} from 'sentry/components/forms/inputField';\nimport Switch from 'sentry/components/switchButton';\n\nexport interface BooleanFieldProps extends InputFieldProps {\n  confirm?: {\n    false?: React.ReactNode;\n    true?: React.ReactNode;\n  };\n}\n\nexport default class BooleanField extends Component<BooleanFieldProps> {\n  coerceValue(value: any) {\n    return !!value;\n  }\n\n  handleChange = (\n    value: any,\n    onChange: onEvent,\n    onBlur: onEvent,\n    e: React.FormEvent<HTMLInputElement>\n  ) => {\n    // We need to toggle current value because Switch is not an input\n    const newValue = this.coerceValue(!value);\n    onChange(newValue, e);\n    onBlur(newValue, e);\n  };\n\n  render() {\n    const {confirm, ...fieldProps} = this.props;\n\n    return (\n      <InputField\n        {...fieldProps}\n        resetOnError\n        field={({\n          onChange,\n          onBlur,\n          value,\n          disabled,\n          ...props\n        }: {\n          disabled: boolean;\n          onBlur: onEvent;\n          onChange: onEvent;\n          value: any;\n        }) => {\n          // Create a function with required args bound\n          const handleChange = this.handleChange.bind(this, value, onChange, onBlur);\n\n          const switchProps = {\n            ...props,\n            size: 'lg' as React.ComponentProps<typeof Switch>['size'],\n            isActive: !!value,\n            isDisabled: disabled,\n            toggle: handleChange,\n          };\n\n          if (confirm) {\n            return (\n              <Confirm\n                renderMessage={() => confirm[(!value).toString()]}\n                onConfirm={() => handleChange({})}\n              >\n                {({open}) => (\n                  <Switch\n                    {...switchProps}\n                    toggle={(e: React.MouseEvent) => {\n                      // If we have a `confirm` prop and enabling switch\n                      // Then show confirm dialog, otherwise propagate change as normal\n                      if (confirm[(!value).toString()]) {\n                        // Open confirm modal\n                        open();\n                        return;\n                      }\n\n                      handleChange(e);\n                    }}\n                  />\n                )}\n              </Confirm>\n            );\n          }\n\n          return <Switch {...switchProps} />;\n        }}\n      />\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nconst SliderAndInputWrapper = styled('div')<{showCustomInput?: boolean}>`\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  grid-template-columns: 4fr ${p => p.showCustomInput && '1fr'};\n  gap: ${space(1)};\n`;\n\nexport default SliderAndInputWrapper;\n","import styled from '@emotion/styled';\n\nconst SliderLabel = styled('label')`\n  font-size: 14px;\n  margin-bottom: ${p => p.theme.grid}px;\n  color: ${p => p.theme.subText};\n`;\n\nexport default SliderLabel;\n","import {forwardRef as reactFowardRef, useEffect, useState} from 'react';\n\nimport Input from 'sentry/components/forms/controls/input';\nimport {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\n\nimport Slider from './slider';\nimport SliderAndInputWrapper from './sliderAndInputWrapper';\nimport SliderLabel from './sliderLabel';\n\ntype SliderProps = {\n  name: string;\n\n  /**\n   * String is a valid type here only for empty string\n   * Otherwise react complains:\n   * \"`value` prop on `input` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\"\n   *\n   * And we want this to be a controlled input when value is empty\n   */\n  value: number | '';\n\n  /**\n   * Array of allowed values. Make sure `value` is in this list.\n   * THIS NEEDS TO BE SORTED\n   */\n  allowedValues?: number[];\n\n  className?: string;\n\n  disabled?: boolean;\n  /**\n   * Render prop for slider's label\n   * Is passed the value as an argument\n   */\n  formatLabel?: (value: number | '') => React.ReactNode;\n\n  forwardRef?: React.Ref<HTMLDivElement>;\n\n  /**\n   * max allowed value, not needed if using `allowedValues`\n   */\n  max?: number;\n\n  /**\n   * min allowed value, not needed if using `allowedValues`\n   */\n  min?: number;\n  /**\n   * This is called when *any* MouseUp or KeyUp event happens.\n   * Used for \"smart\" Fields to trigger a \"blur\" event. `onChange` can\n   * be triggered quite frequently\n   */\n  onBlur?: (\n    event: React.MouseEvent<HTMLInputElement> | React.KeyboardEvent<HTMLInputElement>\n  ) => void;\n\n  onChange?: (\n    value: SliderProps['value'],\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n\n  /**\n   * Placeholder for custom input\n   */\n  placeholder?: string;\n  /**\n   * Show input control for custom values\n   */\n  showCustomInput?: boolean;\n  /**\n   * Show label with current value\n   */\n  showLabel?: boolean;\n  step?: number;\n};\n\nfunction RangeSlider({\n  value,\n  allowedValues,\n  showCustomInput,\n  name,\n  disabled,\n  placeholder,\n  formatLabel,\n  className,\n  onBlur,\n  onChange,\n  forwardRef,\n  showLabel = true,\n  ...props\n}: SliderProps) {\n  const [sliderValue, setSliderValue] = useState(\n    allowedValues ? allowedValues.indexOf(Number(value || 0)) : value\n  );\n\n  useEffect(() => {\n    updateSliderValue();\n  }, [value]);\n\n  function updateSliderValue() {\n    if (!defined(value)) {\n      return;\n    }\n\n    const newSliderValueIndex = allowedValues?.indexOf(Number(value || 0)) ?? -1;\n\n    // If `allowedValues` is defined, then `sliderValue` represents index to `allowedValues`\n    if (newSliderValueIndex > -1) {\n      setSliderValue(newSliderValueIndex);\n      return;\n    }\n\n    setSliderValue(value);\n  }\n\n  function getActualValue(newSliderValue: SliderProps['value']): SliderProps['value'] {\n    if (!allowedValues) {\n      return newSliderValue;\n    }\n\n    // If `allowedValues` is defined, then `sliderValue` represents index to `allowedValues`\n    return allowedValues[newSliderValue];\n  }\n\n  function handleInput(e: React.ChangeEvent<HTMLInputElement>) {\n    const newSliderValue = parseInt(e.target.value, 10);\n    setSliderValue(newSliderValue);\n    onChange?.(getActualValue(newSliderValue), e);\n  }\n\n  function handleCustomInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setSliderValue(parseInt(e.target.value, 10) || 0);\n  }\n\n  function handleBlur(\n    e: React.MouseEvent<HTMLInputElement> | React.KeyboardEvent<HTMLInputElement>\n  ) {\n    if (typeof onBlur !== 'function') {\n      return;\n    }\n\n    onBlur(e);\n  }\n\n  function getSliderData() {\n    if (!allowedValues) {\n      const {min, max, step} = props;\n      return {\n        min,\n        max,\n        step,\n        actualValue: sliderValue,\n        displayValue: sliderValue,\n      };\n    }\n\n    const actualValue = allowedValues[sliderValue];\n\n    return {\n      step: 1,\n      min: 0,\n      max: allowedValues.length - 1,\n      actualValue,\n      displayValue: defined(actualValue) ? actualValue : t('Invalid value'),\n    };\n  }\n\n  const {min, max, step, actualValue, displayValue} = getSliderData();\n\n  return (\n    <div className={className} ref={forwardRef}>\n      {!showCustomInput && showLabel && (\n        <SliderLabel htmlFor={name}>\n          {formatLabel?.(actualValue) ?? displayValue}\n        </SliderLabel>\n      )}\n      <SliderAndInputWrapper showCustomInput={showCustomInput}>\n        <Slider\n          type=\"range\"\n          name={name}\n          min={min}\n          max={max}\n          step={step}\n          disabled={disabled}\n          onInput={handleInput}\n          onMouseUp={handleBlur}\n          onKeyUp={handleBlur}\n          value={sliderValue}\n          hasLabel={!showCustomInput}\n        />\n        {showCustomInput && (\n          <Input\n            placeholder={placeholder}\n            value={sliderValue}\n            onChange={handleCustomInputChange}\n            onBlur={handleInput}\n          />\n        )}\n      </SliderAndInputWrapper>\n    </div>\n  );\n}\n\nconst RangeSliderContainer = reactFowardRef(function RangeSliderContainer(\n  props: SliderProps,\n  ref: React.Ref<any>\n) {\n  return <RangeSlider {...props} forwardRef={ref} />;\n});\n\nexport default RangeSliderContainer;\n\nexport type {SliderProps};\n","import styled from '@emotion/styled';\n\nconst Slider = styled('input')<{hasLabel: boolean}>`\n  /* stylelint-disable-next-line property-no-vendor-prefix */\n  -webkit-appearance: none;\n  width: 100%;\n  background: transparent;\n  margin: ${p => p.theme.grid}px 0 ${p => p.theme.grid * (p.hasLabel ? 2 : 1)}px;\n\n  &::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 3px;\n    cursor: pointer;\n    background: ${p => p.theme.border};\n    border-radius: 3px;\n    border: 0;\n  }\n\n  &::-moz-range-track {\n    width: 100%;\n    height: 3px;\n    cursor: pointer;\n    background: ${p => p.theme.border};\n    border-radius: 3px;\n    border: 0;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    height: 3px;\n    cursor: pointer;\n    background: ${p => p.theme.border};\n    border-radius: 3px;\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    box-shadow: 0 0 0 3px ${p => p.theme.background};\n    height: 17px;\n    width: 17px;\n    border-radius: 50%;\n    background: ${p => p.theme.active};\n    cursor: pointer;\n    /* stylelint-disable-next-line property-no-vendor-prefix */\n    -webkit-appearance: none;\n    margin-top: -7px;\n    border: 0;\n    transition: background 0.1s, box-shadow 0.1s;\n  }\n\n  &::-moz-range-thumb {\n    box-shadow: 0 0 0 3px ${p => p.theme.background};\n    height: 17px;\n    width: 17px;\n    border-radius: 50%;\n    background: ${p => p.theme.active};\n    cursor: pointer;\n    /* stylelint-disable-next-line property-no-vendor-prefix */\n    -webkit-appearance: none;\n    margin-top: -7px;\n    border: 0;\n    transition: background 0.1s, box-shadow 0.1s;\n  }\n\n  &::-ms-thumb {\n    box-shadow: 0 0 0 3px ${p => p.theme.background};\n    height: 17px;\n    width: 17px;\n    border-radius: 50%;\n    background: ${p => p.theme.active};\n    cursor: pointer;\n    /* stylelint-disable-next-line property-no-vendor-prefix */\n    -webkit-appearance: none;\n    margin-top: -7px;\n    border: 0;\n    transition: background 0.1s, box-shadow 0.1s;\n  }\n\n  &::-ms-fill-lower {\n    background: ${p => p.theme.border};\n    border: 0;\n    border-radius: 50%;\n  }\n\n  &::-ms-fill-upper {\n    background: ${p => p.theme.border};\n    border: 0;\n    border-radius: 50%;\n  }\n\n  &:focus {\n    outline: none;\n\n    &::-webkit-slider-runnable-track {\n      background: ${p => p.theme.border};\n    }\n\n    &::-ms-fill-upper {\n      background: ${p => p.theme.border};\n    }\n\n    &::-ms-fill-lower {\n      background: ${p => p.theme.border};\n    }\n  }\n\n  &[disabled] {\n    &::-webkit-slider-thumb {\n      background: ${p => p.theme.border};\n      cursor: default;\n    }\n\n    &::-moz-range-thumb {\n      background: ${p => p.theme.border};\n      cursor: default;\n    }\n\n    &::-ms-thumb {\n      background: ${p => p.theme.border};\n      cursor: default;\n    }\n\n    &::-webkit-slider-runnable-track {\n      cursor: default;\n    }\n\n    &::-moz-range-track {\n      cursor: default;\n    }\n\n    &::-ms-track {\n      cursor: default;\n    }\n  }\n\n  &:not([disabled])::-webkit-slider-runnable-track:hover {\n    background: ${p => p.theme.activeHover};\n  }\n  &:not([disabled])::-moz-range-thumb:hover {\n    background: ${p => p.theme.activeHover};\n  }\n  &:not([disabled])::-ms-thumb:hover {\n    background: ${p => p.theme.activeHover};\n  }\n\n  &:focus::-webkit-slider-thumb,\n  &.focus-visible::-webkit-slider-thumb {\n    box-shadow: ${p => p.theme.background} 0 0 0 3px, ${p => p.theme.focus} 0 0 0 6px;\n  }\n  &:focus::-moz-range-thumb,\n  &.focus-visible::-moz-range-thumb {\n    box-shadow: ${p => p.theme.background} 0 0 0 3px, ${p => p.theme.focus} 0 0 0 6px;\n  }\n  &:focus::-ms-thumb,\n  &.focus-visible::-ms-thumb {\n    box-shadow: ${p => p.theme.background} 0 0 0 3px, ${p => p.theme.focus} 0 0 0 6px;\n  }\n`;\n\nexport default Slider;\n","import {forwardRef} from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  toggle: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n  /**\n   * Toggle color is always active.\n   */\n  forceActiveColor?: boolean;\n  forwardedRef?: React.Ref<HTMLButtonElement>;\n  id?: string;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n  name?: string;\n  size?: 'sm' | 'lg';\n};\n\nconst Switch = ({\n  forwardedRef,\n  size = 'sm',\n  isActive,\n  forceActiveColor,\n  isLoading,\n  isDisabled,\n  toggle,\n  id,\n  name,\n  className,\n}: Props) => (\n  <SwitchButton\n    ref={forwardedRef}\n    id={id}\n    name={name}\n    type=\"button\"\n    className={className}\n    onClick={isDisabled ? undefined : toggle}\n    role=\"checkbox\"\n    aria-checked={isActive}\n    isLoading={isLoading}\n    disabled={isDisabled}\n    isActive={isActive}\n    size={size}\n    data-test-id=\"switch\"\n  >\n    <Toggle\n      isDisabled={isDisabled}\n      isActive={isActive}\n      forceActiveColor={forceActiveColor}\n      size={size}\n    />\n  </SwitchButton>\n);\n\ntype StyleProps = Partial<Props>;\n\nconst getSize = (p: StyleProps) => (p.size === 'sm' ? 16 : 24);\nconst getToggleSize = (p: StyleProps) => getSize(p) - (p.size === 'sm' ? 4 : 8);\nconst getToggleTop = (p: StyleProps) => (p.size === 'sm' ? 1 : 3);\nconst getTranslateX = (p: StyleProps) =>\n  p.isActive ? getToggleTop(p) + getSize(p) * 0.875 : getToggleTop(p);\n\nconst SwitchButton = styled('button')<StyleProps>`\n  display: inline-block;\n  background: none;\n  padding: 0;\n  border: 1px solid ${p => p.theme.border};\n  position: relative;\n  box-shadow: inset ${p => p.theme.dropShadowLight};\n  height: ${getSize}px;\n  width: ${p => getSize(p) * 1.875}px;\n  border-radius: ${getSize}px;\n  transition: border 0.1s, box-shadow 0.1s;\n\n  &[disabled] {\n    cursor: not-allowed;\n  }\n\n  &:focus,\n  &.focus-visible {\n    outline: none;\n    border-color: ${p => p.theme.focusBorder};\n    box-shadow: ${p => p.theme.focusBorder} 0 0 0 1px;\n  }\n`;\n\nconst Toggle = styled('span')<StyleProps>`\n  display: block;\n  position: absolute;\n  border-radius: 50%;\n  transition: 0.25s all ease;\n  top: ${getToggleTop}px;\n  transform: translateX(${getTranslateX}px);\n  width: ${getToggleSize}px;\n  height: ${getToggleSize}px;\n  background: ${p =>\n    p.isActive || p.forceActiveColor ? p.theme.active : p.theme.border};\n  opacity: ${p => (p.isDisabled ? 0.4 : null)};\n`;\n\nexport default forwardRef<HTMLButtonElement, Props>((props, ref) => (\n  <Switch {...props} forwardedRef={ref} />\n));\n","import {StacktraceErrorMessage} from 'sentry/components/events/interfaces/frame/stacktraceLink';\nimport {IntegrationType, PlatformType, SentryAppStatus} from 'sentry/types';\n\n// define the various event payloads\ntype View = {\n  view?:\n    | 'external_install'\n    | 'legacy_integrations'\n    | 'plugin_details'\n    | 'integrations_directory'\n    | 'integrations_directory_integration_detail'\n    | 'stacktrace_issue_details'\n    | 'integration_configuration_detail'\n    | 'onboarding'\n    | 'project_creation';\n};\n\ntype SingleIntegrationEventParams = {\n  integration: string; // the slug\n  integration_type: IntegrationType;\n  already_installed?: boolean;\n  // include the status since people might do weird things testing unpublished integrations\n  integration_status?: SentryAppStatus;\n  integration_tab?: 'configurations' | 'overview';\n  plan?: string;\n} & View;\n\ntype MultipleIntegrationsEventParams = {\n  integrations_installed: number;\n} & View;\n\ntype IntegrationSearchEventParams = {\n  num_results: number;\n  search_term: string;\n} & View;\n\ntype IntegrationCategorySelectEventParams = {\n  category: string;\n} & View;\n\ntype IntegrationStacktraceLinkEventParams = {\n  error_reason?: StacktraceErrorMessage;\n  platform?: PlatformType;\n  provider?: string;\n  setup_type?: 'automatic' | 'manual';\n} & View;\n\ntype IntegrationServerlessFunctionsViewedParams = {\n  num_functions: number;\n} & SingleIntegrationEventParams;\n\ntype IntegrationServerlessFunctionActionParams = {\n  action: 'enable' | 'disable' | 'updateVersion';\n} & SingleIntegrationEventParams;\n\ntype IntegrationInstallationInputValueChangeEventParams = {\n  field_name: string;\n} & SingleIntegrationEventParams;\n\ntype IntegrationCodeOwnersEventParams = {\n  project_id: string;\n} & View;\n// define the event key to payload mappings\nexport type IntegrationEventParameters = {\n  'integrations.cloudformation_link_clicked': SingleIntegrationEventParams;\n  'integrations.code_mappings_viewed': SingleIntegrationEventParams;\n  'integrations.code_owners_cta_docs_clicked': IntegrationCodeOwnersEventParams;\n  'integrations.code_owners_cta_setup_clicked': IntegrationCodeOwnersEventParams;\n  'integrations.config_saved': SingleIntegrationEventParams;\n  'integrations.details_viewed': SingleIntegrationEventParams;\n  'integrations.directory_category_selected': IntegrationCategorySelectEventParams;\n  'integrations.directory_item_searched': IntegrationSearchEventParams;\n  'integrations.disabled': SingleIntegrationEventParams;\n  'integrations.dismissed_code_owners_prompt': IntegrationCodeOwnersEventParams;\n  'integrations.enabled': SingleIntegrationEventParams;\n  // for an individual configuration\n  'integrations.index_viewed': MultipleIntegrationsEventParams;\n  'integrations.install_modal_opened': SingleIntegrationEventParams;\n  'integrations.installation_complete': SingleIntegrationEventParams;\n  'integrations.installation_input_value_changed': IntegrationInstallationInputValueChangeEventParams;\n  'integrations.installation_start': SingleIntegrationEventParams;\n  'integrations.integration_tab_clicked': SingleIntegrationEventParams;\n  'integrations.integration_viewed': SingleIntegrationEventParams;\n  'integrations.plugin_add_to_project_clicked': SingleIntegrationEventParams;\n  'integrations.reconfigure_stacktrace_setup': IntegrationStacktraceLinkEventParams;\n  'integrations.request_install': SingleIntegrationEventParams;\n  'integrations.resolve_now_clicked': SingleIntegrationEventParams;\n  'integrations.serverless_function_action': IntegrationServerlessFunctionActionParams;\n  'integrations.serverless_functions_viewed': IntegrationServerlessFunctionsViewedParams;\n  'integrations.show_code_owners_prompt': IntegrationCodeOwnersEventParams;\n  'integrations.stacktrace_complete_setup': IntegrationStacktraceLinkEventParams;\n  'integrations.stacktrace_docs_clicked': IntegrationStacktraceLinkEventParams;\n  'integrations.stacktrace_link_clicked': IntegrationStacktraceLinkEventParams;\n  'integrations.stacktrace_link_cta_dismissed': IntegrationStacktraceLinkEventParams;\n  'integrations.stacktrace_manual_option_clicked': IntegrationStacktraceLinkEventParams;\n  'integrations.stacktrace_start_setup': IntegrationStacktraceLinkEventParams;\n  'integrations.stacktrace_submit_config': IntegrationStacktraceLinkEventParams;\n  'integrations.switch_manual_sdk_setup': SingleIntegrationEventParams;\n  'integrations.uninstall_clicked': SingleIntegrationEventParams;\n  'integrations.uninstall_completed': SingleIntegrationEventParams;\n  'integrations.upgrade_plan_modal_opened': SingleIntegrationEventParams;\n};\n\nexport type IntegrationAnalyticsKey = keyof IntegrationEventParameters;\n\n// define the event key to event name mappings\nexport const integrationEventMap: Record<IntegrationAnalyticsKey, string> = {\n  'integrations.upgrade_plan_modal_opened': 'Integrations: Upgrade Plan Modal Opened',\n  'integrations.install_modal_opened': 'Integrations: Install Modal Opened',\n  'integrations.integration_viewed': 'Integrations: Integration Viewed',\n  'integrations.installation_start': 'Integrations: Installation Start',\n  'integrations.installation_complete': 'Integrations: Installation Complete',\n  'integrations.uninstall_clicked': 'Integrations: Uninstall Clicked',\n  'integrations.uninstall_completed': 'Integrations: Uninstall Completed',\n  'integrations.enabled': 'Integrations: Enabled',\n  'integrations.disabled': 'Integrations: Disabled',\n  'integrations.config_saved': 'Integrations: Config Saved',\n  'integrations.integration_tab_clicked': 'Integrations: Integration Tab Clicked',\n  'integrations.plugin_add_to_project_clicked':\n    'Integrations: Plugin Add to Project Clicked',\n  'integrations.resolve_now_clicked': 'Integrations: Resolve Now Clicked',\n  'integrations.request_install': 'Integrations: Request Install',\n  'integrations.code_mappings_viewed': 'Integrations: Code Mappings Viewed',\n  'integrations.details_viewed': 'Integrations: Details Viewed',\n  'integrations.index_viewed': 'Integrations: Index Page Viewed',\n  'integrations.directory_item_searched': 'Integrations: Directory Item Searched',\n  'integrations.directory_category_selected': 'Integrations: Directory Category Selected',\n  'integrations.stacktrace_link_cta_dismissed':\n    'Integrations: Stacktrace Link CTA Dismissed',\n  'integrations.stacktrace_start_setup': 'Integrations: Stacktrace Start Setup',\n  'integrations.stacktrace_submit_config': 'Integrations: Stacktrace Submit Config',\n  'integrations.stacktrace_complete_setup': 'Integrations: Stacktrace Complete Setup',\n  'integrations.stacktrace_manual_option_clicked':\n    'Integrations: Stacktrace Manual Option Clicked',\n  'integrations.stacktrace_link_clicked': 'Integrations: Stacktrace Link Clicked',\n  'integrations.reconfigure_stacktrace_setup':\n    'Integrations: Reconfigure Stacktrace Setup',\n  'integrations.stacktrace_docs_clicked': 'Integrations: Stacktrace Docs Clicked',\n\n  'integrations.serverless_functions_viewed': 'Integrations: Serverless Functions Viewed',\n  'integrations.installation_input_value_changed':\n    'Integrations: Installation Input Value Changed',\n  'integrations.serverless_function_action': 'Integrations: Serverless Function Action',\n  'integrations.cloudformation_link_clicked': 'Integrations: CloudFormation Link Clicked',\n  'integrations.switch_manual_sdk_setup': 'Integrations: Switch Manual SDK Setup',\n  'integrations.code_owners_cta_setup_clicked':\n    'Integrations: Code Owners CTA Setup Clicked',\n  'integrations.code_owners_cta_docs_clicked':\n    'Integrations: Code Owners CTA Setup Clicked',\n  'integrations.show_code_owners_prompt': 'Integrations: Show Code Owners Prompt',\n  'integrations.dismissed_code_owners_prompt':\n    'Integrations: Dismissed Code Owners Prompt',\n};\n","import * as Sentry from '@sentry/react';\n\nimport {ResponseMeta} from 'sentry/api';\n\nexport default function handleXhrErrorResponse(message: string) {\n  return (resp: ResponseMeta) => {\n    if (!resp) {\n      return;\n    }\n    if (!resp.responseJSON) {\n      return;\n    }\n\n    const {responseJSON} = resp;\n\n    // If this is a string then just capture it as error\n    if (typeof responseJSON.detail === 'string') {\n      Sentry.withScope(scope => {\n        scope.setExtra('status', resp.status);\n        scope.setExtra('detail', responseJSON.detail);\n        Sentry.captureException(new Error(message));\n      });\n      return;\n    }\n\n    // Ignore sudo-required errors\n    if (responseJSON.detail && responseJSON.detail.code === 'sudo-required') {\n      return;\n    }\n\n    if (responseJSON.detail && typeof responseJSON.detail.message === 'string') {\n      Sentry.withScope(scope => {\n        scope.setExtra('status', resp.status);\n        scope.setExtra('detail', responseJSON.detail);\n        scope.setExtra('code', responseJSON.detail.code);\n        Sentry.captureException(new Error(message));\n      });\n      return;\n    }\n  };\n}\n","import dompurify from 'dompurify';\nimport marked from 'marked'; // eslint-disable-line no-restricted-imports\n\nimport {IS_ACCEPTANCE_TEST, NODE_ENV} from 'sentry/constants';\n\n// Only https and mailto, (e.g. no javascript, vbscript, data protocols)\nconst safeLinkPattern = /^(https?:|mailto:)/i;\n\nconst safeImagePattern = /^https?:\\/\\/./i;\n\nfunction isSafeHref(href: string, pattern: RegExp) {\n  try {\n    return pattern.test(decodeURIComponent(unescape(href)));\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Implementation of marked.Renderer which additonally sanitizes URLs.\n */\nclass SafeRenderer extends marked.Renderer {\n  link(href: string, title: string, text: string) {\n    // For a bad link, just return the plain text href\n    if (!isSafeHref(href, safeLinkPattern)) {\n      return href;\n    }\n\n    const out = `<a href=\"${href}\"${title ? ` title=\"${title}\"` : ''}>${text}</a>`;\n    return dompurify.sanitize(out);\n  }\n\n  image(href: string, title: string, text: string) {\n    // For a bad image, return an empty string\n    if (this.options.sanitize && !isSafeHref(href, safeImagePattern)) {\n      return '';\n    }\n\n    return `<img src=\"${href}\" alt=\"${text}\"${title ? ` title=\"${title}\"` : ''} />`;\n  }\n}\n\nclass NoParagraphRenderer extends SafeRenderer {\n  paragraph(text: string) {\n    return text;\n  }\n}\n\nmarked.setOptions({\n  renderer: new SafeRenderer(),\n  sanitize: true,\n\n  // Silence sanitize deprecation warning in test / ci (CI sets NODE_NV\n  // to production, but specifies `CI`).\n  //\n  // [!!] This has the side effect of causing failed markdown content to render\n  //      as a html error, instead of throwing an exception, however none of\n  //      our tests are rendering failed markdown so this is likely a safe\n  //      tradeoff to turn off off the deprecation warning.\n  silent: !!IS_ACCEPTANCE_TEST || NODE_ENV === 'test',\n});\n\nconst sanitizedMarked = (...args: Parameters<typeof marked>) =>\n  dompurify.sanitize(marked(...args));\n\nconst singleLineRenderer = (text: string, options: marked.MarkedOptions = {}) =>\n  sanitizedMarked(text, {...options, renderer: new NoParagraphRenderer()});\n\nexport {singleLineRenderer};\nexport default sanitizedMarked;\n"],"names":["DropdownButton","children","forwardedRef","prefix","isOpen","showChevron","hideBottomBorder","detached","disabled","priority","rightAlignChevron","props","StyledButton","type","undefined","ref","LabelText","StyledChevron","size","direction","defaultProps","IconChevron","shouldForwardProp","prop","p","theme","breakpoints","space","Button","borderRadius","forwardRef","BooleanField","Component","value","onChange","onBlur","e","newValue","this","coerceValue","render","confirm","fieldProps","resetOnError","field","handleChange","bind","switchProps","isActive","isDisabled","toggle","renderMessage","toString","onConfirm","open","showCustomInput","grid","subText","RangeSlider","allowedValues","name","placeholder","formatLabel","className","showLabel","sliderValue","setSliderValue","useState","indexOf","Number","handleInput","newSliderValue","parseInt","target","getActualValue","handleBlur","useEffect","defined","newSliderValueIndex","updateSliderValue","min","max","step","actualValue","displayValue","length","t","getSliderData","htmlFor","onInput","onMouseUp","onKeyUp","hasLabel","reactFowardRef","border","background","active","activeHover","focus","Switch","forceActiveColor","isLoading","id","SwitchButton","onClick","role","Toggle","getSize","getToggleSize","getToggleTop","getTranslateX","dropShadowLight","focusBorder","integrationEventMap","handleXhrErrorResponse","message","resp","responseJSON","detail","code","Sentry","scope","setExtra","status","Error","safeLinkPattern","safeImagePattern","isSafeHref","href","pattern","test","decodeURIComponent","unescape","SafeRenderer","marked","link","title","text","out","dompurify","image","options","sanitize","NoParagraphRenderer","paragraph","renderer","silent","IS_ACCEPTANCE_TEST","NODE_ENV","sanitizedMarked","singleLineRenderer"],"sourceRoot":""}