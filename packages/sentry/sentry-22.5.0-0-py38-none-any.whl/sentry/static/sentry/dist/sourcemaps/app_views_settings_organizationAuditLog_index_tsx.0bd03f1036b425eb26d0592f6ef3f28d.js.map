{"version":3,"file":"chunks/app_views_settings_organizationAuditLog_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationAuditLog/auditLogList.tsx","webpack:///./app/views/settings/organizationAuditLog/index.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport DateTime from 'sentry/components/dateTime';\nimport SelectField from 'sentry/components/deprecatedforms/selectField';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport overflowEllipsis from 'sentry/styles/overflowEllipsis';\nimport space from 'sentry/styles/space';\nimport {AuditLog} from 'sentry/types';\nimport {shouldUse24Hours} from 'sentry/utils/dates';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nconst avatarStyle = {\n  width: 36,\n  height: 36,\n  marginRight: 8,\n};\n\ntype Props = {\n  entries: AuditLog[] | null;\n  eventType: string;\n  eventTypes: string[];\n  isLoading: boolean;\n  onEventSelect: (value: string) => void;\n  pageLinks: string | null;\n};\n\nconst AuditLogList = ({\n  isLoading,\n  pageLinks,\n  entries,\n  eventType,\n  eventTypes,\n  onEventSelect,\n}: Props) => {\n  const is24Hours = shouldUse24Hours();\n  const hasEntries = entries && entries.length > 0;\n  const ipv4Length = 15;\n  const options = [\n    {value: '', label: t('Any action'), clearableVaue: false},\n    ...eventTypes.map(type => ({label: type, value: type, clearableValue: false})),\n  ];\n\n  const action = (\n    <form>\n      <SelectField\n        name=\"event\"\n        onChange={onEventSelect as SelectField['props']['onChange']}\n        value={eventType}\n        style={{width: 250}}\n        options={options}\n      />\n    </form>\n  );\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('Audit Log')} action={action} />\n      <PanelTable\n        headers={[t('Member'), t('Action'), t('IP'), t('Time')]}\n        isEmpty={!hasEntries}\n        emptyMessage={t('No audit entries available')}\n        isLoading={isLoading}\n      >\n        {entries?.map(entry => (\n          <Fragment key={entry.id}>\n            <UserInfo>\n              <div>\n                {entry.actor.email && (\n                  <UserAvatar style={avatarStyle} user={entry.actor} />\n                )}\n              </div>\n              <NameContainer>\n                <Name data-test-id=\"actor-name\">\n                  {entry.actor.isSuperuser\n                    ? t('%s (Sentry Staff)', entry.actor.name)\n                    : entry.actor.name}\n                </Name>\n                <Note>{entry.note}</Note>\n              </NameContainer>\n            </UserInfo>\n            <FlexCenter>\n              <MonoDetail>{entry.event}</MonoDetail>\n            </FlexCenter>\n            <FlexCenter>\n              {entry.ipAddress && (\n                <IpAddressOverflow>\n                  <Tooltip\n                    title={entry.ipAddress}\n                    disabled={entry.ipAddress.length <= ipv4Length}\n                  >\n                    <MonoDetail>{entry.ipAddress}</MonoDetail>\n                  </Tooltip>\n                </IpAddressOverflow>\n              )}\n            </FlexCenter>\n            <TimestampInfo>\n              <DateTime dateOnly date={entry.dateCreated} />\n              <DateTime\n                timeOnly\n                format={is24Hours ? 'HH:mm zz' : 'LT zz'}\n                date={entry.dateCreated}\n              />\n            </TimestampInfo>\n          </Fragment>\n        ))}\n      </PanelTable>\n      {pageLinks && <Pagination pageLinks={pageLinks} />}\n    </div>\n  );\n};\n\nconst UserInfo = styled('div')`\n  display: flex;\n  align-items: center;\n  line-height: 1.2;\n  font-size: 13px;\n  min-width: 250px;\n`;\n\nconst NameContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Name = styled('div')`\n  font-weight: 600;\n  font-size: 15px;\n`;\n\nconst Note = styled('div')`\n  font-size: 13px;\n  word-break: break-word;\n`;\n\nconst FlexCenter = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst IpAddressOverflow = styled('div')`\n  ${overflowEllipsis};\n  min-width: 90px;\n`;\n\nconst MonoDetail = styled('code')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  white-space: no-wrap;\n`;\n\nconst TimestampInfo = styled('div')`\n  display: grid;\n  grid-template-rows: auto auto;\n  gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nexport default AuditLogList;\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {t} from 'sentry/locale';\nimport {AuditLog, Organization} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport AuditLogList from './auditLogList';\n\n// Please keep this list sorted\nconst EVENT_TYPES = [\n  'member.invite',\n  'member.add',\n  'member.accept-invite',\n  'member.remove',\n  'member.edit',\n  'member.join-team',\n  'member.leave-team',\n  'member.pending',\n  'team.create',\n  'team.edit',\n  'team.remove',\n  'project.create',\n  'project.edit',\n  'project.remove',\n  'project.set-public',\n  'project.set-private',\n  'project.request-transfer',\n  'project.accept-transfer',\n  'org.create',\n  'org.edit',\n  'org.remove',\n  'org.restore',\n  'tagkey.remove',\n  'projectkey.create',\n  'projectkey.edit',\n  'projectkey.remove',\n  'projectkey.enable',\n  'projectkey.disable',\n  'sso.enable',\n  'sso.disable',\n  'sso.edit',\n  'sso-identity.link',\n  'api-key.create',\n  'api-key.edit',\n  'api-key.remove',\n  'alertrule.create',\n  'alertrule.edit',\n  'alertrule.remove',\n  'rule.create',\n  'rule.edit',\n  'rule.remove',\n  'servicehook.create',\n  'servicehook.edit',\n  'servicehook.remove',\n  'servicehook.enable',\n  'servicehook.disable',\n  'integration.add',\n  'integration.edit',\n  'integration.remove',\n  'ondemand.edit',\n  'trial.started',\n  'plan.changed',\n  'plan.cancelled',\n];\n\ntype Props = RouteComponentProps<{orgId: string}, {}> &\n  AsyncView['props'] & {\n    organization: Organization;\n  };\n\ntype State = AsyncView['state'] & {\n  entryList: AuditLog[] | null;\n  entryListPageLinks: string | null;\n};\n\nclass OrganizationAuditLog extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      [\n        'entryList',\n        `/organizations/${this.props.params.orgId}/audit-logs/`,\n        {\n          query: this.props.location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Audit Log'), this.props.organization.slug, false);\n  }\n\n  handleEventSelect = (value: string) => {\n    // Dont update if event has not changed\n    if (this.props.location.query.event === value) {\n      return;\n    }\n\n    browserHistory.push({\n      pathname: this.props.location.pathname,\n      search: `?event=${value}`,\n    });\n  };\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {entryList, entryListPageLinks, loading, reloading} = this.state;\n    const currentEventType = this.props.location.query.event;\n    return (\n      <AuditLogList\n        entries={entryList}\n        pageLinks={entryListPageLinks}\n        eventType={currentEventType}\n        eventTypes={EVENT_TYPES}\n        onEventSelect={this.handleEventSelect}\n        isLoading={loading || reloading}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default withOrganization(OrganizationAuditLog);\n"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","avatarStyle","width","height","marginRight","AuditLogList","isLoading","pageLinks","entries","eventType","eventTypes","onEventSelect","is24Hours","shouldUse24Hours","hasEntries","length","options","value","label","t","clearableVaue","map","type","clearableValue","action","name","onChange","style","headers","isEmpty","emptyMessage","entry","Fragment","UserInfo","actor","email","user","NameContainer","Name","isSuperuser","Note","note","FlexCenter","MonoDetail","event","ipAddress","IpAddressOverflow","disabled","TimestampInfo","dateOnly","date","dateCreated","timeOnly","format","id","overflowEllipsis","p","theme","fontSizeMedium","space","EVENT_TYPES","OrganizationAuditLog","props","location","query","browserHistory","pathname","search","getEndpoints","params","orgId","routeTitleGen","organization","slug","renderLoading","renderBody","entryList","entryListPageLinks","loading","reloading","state","currentEventType","handleEventSelect","withOrganization"],"sourceRoot":""}