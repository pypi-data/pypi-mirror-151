{"version":3,"file":"chunks/app_components_modals_reprocessEventModal_tsx-app_components_panels_panel_tsx-app_utils_isRen-e96ca0.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/forms/numberField.tsx","webpack:///./app/components/forms/radioField.tsx","webpack:///./app/components/list/utils.tsx","webpack:///./app/components/list/index.tsx","webpack:///./app/components/list/listItem.tsx","webpack:///./app/components/modals/reprocessEventModal.tsx","webpack:///./app/components/panels/panel.tsx","webpack:///./app/utils/isRenderFunc.tsx"],"sourcesContent":["import InputField, {InputFieldProps} from './inputField';\n\nexport interface NumberFieldProps extends Omit<InputFieldProps, 'type'> {}\n\nexport default function NumberField(props) {\n  return <InputField {...props} type=\"number\" />;\n}\n","import {Component} from 'react';\n\nimport RadioGroup, {RadioGroupProps} from 'sentry/components/forms/controls/radioGroup';\nimport InputField, {InputFieldProps, onEvent} from 'sentry/components/forms/inputField';\n\nexport interface RadioFieldProps extends Omit<InputFieldProps, 'type'> {\n  choices?: RadioGroupProps<any>['choices'];\n  orientInline?: RadioGroupProps<any>['orientInline'];\n}\n\nclass RadioField extends Component<RadioFieldProps> {\n  onChange = (\n    id: string,\n    onChange: onEvent,\n    onBlur: onEvent,\n    e: React.FormEvent<HTMLInputElement>\n  ) => {\n    onChange(id, e);\n    onBlur(id, e);\n  };\n\n  render() {\n    return (\n      <InputField\n        {...this.props}\n        field={({onChange, onBlur, value, disabled, orientInline, ...props}) => (\n          <RadioGroup\n            choices={props.choices}\n            disabled={disabled}\n            orientInline={orientInline}\n            value={value === '' ? null : value}\n            label={props.label}\n            onChange={(id, e) => this.onChange(id, onChange, onBlur, e)}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default RadioField;\n","import {css} from '@emotion/react';\n\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\nconst bulletStyle = (theme: Theme) => css`\n  padding-left: ${space(3)};\n  list-style-type: circle;\n  & > li::marker {\n    color: ${theme.subText};\n  }\n`;\n\ntype Options = {\n  // setting initialCounterValue to 0 means the first visible step is 1\n  initialCounterValue?: number;\n  isSolid?: boolean;\n};\n\nconst numericStyle = (\n  theme: Theme,\n  {isSolid = false, initialCounterValue = 0}: Options\n) => css`\n  & > li {\n    padding-left: ${space(4)};\n    :before {\n      border-radius: 50%;\n      position: absolute;\n      counter-increment: numberedList;\n      content: counter(numberedList);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      text-align: center;\n      left: 0;\n      line-height: 1;\n      ${isSolid\n        ? css`\n            width: 24px;\n            height: 24px;\n            font-weight: 500;\n            font-size: ${theme.fontSizeSmall};\n            background-color: ${theme.yellow300};\n            color: ${theme.black};\n          `\n        : css`\n            top: 3px;\n            width: 18px;\n            height: 18px;\n            font-weight: 600;\n            font-size: 10px;\n            border: 1px solid ${theme.gray500};\n          `}\n    }\n  }\n  counter-reset: numberedList ${initialCounterValue};\n`;\n\nexport const listSymbol = {\n  numeric: 'numeric',\n  'colored-numeric': 'colored-numeric',\n  bullet: 'bullet',\n};\n\nexport function getListSymbolStyle(\n  theme: Theme,\n  symbol: keyof typeof listSymbol,\n  initialCounterValue?: number\n) {\n  switch (symbol) {\n    case 'numeric':\n      return numericStyle(theme, {initialCounterValue});\n    case 'colored-numeric':\n      return numericStyle(theme, {isSolid: true, initialCounterValue});\n    default:\n      return bulletStyle(theme);\n  }\n}\n","import {Children, cloneElement, isValidElement} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nimport {getListSymbolStyle, listSymbol} from './utils';\n\ntype Props = {\n  children: React.ReactNode;\n  className?: string;\n  'data-test-id'?: string;\n  initialCounterValue?: number;\n  symbol?: keyof typeof listSymbol | React.ReactElement;\n};\n\nconst List = styled(\n  ({\n    children,\n    className,\n    symbol,\n    initialCounterValue: _initialCounterValue,\n    ...props\n  }: Props) => {\n    const getWrapperComponent = () => {\n      switch (symbol) {\n        case 'numeric':\n        case 'colored-numeric':\n          return 'ol';\n        default:\n          return 'ul';\n      }\n    };\n\n    const Wrapper = getWrapperComponent();\n\n    return (\n      <Wrapper className={className} {...props}>\n        {!symbol || typeof symbol === 'string'\n          ? children\n          : Children.map(children, child => {\n              if (!isValidElement(child)) {\n                return child;\n              }\n              return cloneElement(child as React.ReactElement, {\n                symbol,\n              });\n            })}\n      </Wrapper>\n    );\n  }\n)`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: grid;\n  gap: ${space(0.5)};\n  ${p =>\n    typeof p.symbol === 'string' &&\n    listSymbol[p.symbol] &&\n    getListSymbolStyle(p.theme, p.symbol, p.initialCounterValue)}\n`;\n\nexport default List;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  'aria-label'?: string;\n  children?: React.ReactNode;\n  className?: string;\n  'data-test-id'?: string;\n  onClick?: (event: React.MouseEvent) => void;\n  symbol?: React.ReactElement;\n};\n\nconst ListItem = styled(\n  ({\n    children,\n    className,\n    symbol,\n    onClick,\n    'aria-label': ariaLabel,\n    'data-test-id': dataTestId,\n  }: Props) => (\n    <li\n      className={className}\n      onClick={onClick}\n      role={onClick ? 'button' : undefined}\n      aria-label={onClick ? ariaLabel : undefined}\n      data-test-id={dataTestId}\n    >\n      {symbol && <Symbol>{symbol}</Symbol>}\n      {children}\n    </li>\n  )\n)`\n  position: relative;\n  ${p => p.symbol && `padding-left: ${space(4)};`}\n`;\n\nconst Symbol = styled('div')`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  min-height: 22.5px;\n`;\n\nexport default ListItem;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Form from 'sentry/components/forms/form';\nimport NumberField from 'sentry/components/forms/numberField';\nimport RadioField from 'sentry/components/forms/radioField';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group, Organization} from 'sentry/types';\n\nconst impacts = [\n  tct(\n    \"[strong:Quota applies.] Every event you choose to reprocess counts against your plan's quota. Rate limits and spike protection do not apply.\",\n    {strong: <strong />}\n  ),\n  tct(\n    '[strong:Attachment storage required.] If your events come from minidumps or unreal crash reports, you must have [link:attachment storage] enabled.',\n    {\n      strong: <strong />,\n      link: (\n        <ExternalLink href=\"https://docs.sentry.io/platforms/native/enriching-events/attachments/#crash-reports-and-privacy\" />\n      ),\n    }\n  ),\n  t(\n    'Please wait one hour after upload before attempting to reprocess missing debug files.'\n  ),\n];\n\nconst remainingEventsChoices: [string, string][] = [\n  ['keep', t('Keep')],\n  ['delete', t('Delete')],\n];\n\nexport type ReprocessEventModalOptions = {\n  groupId: Group['id'];\n  organization: Organization;\n};\n\ntype Props = ModalRenderProps & ReprocessEventModalOptions;\n\ntype State = {\n  maxEvents?: number;\n};\n\nclass ReprocessingEventModal extends Component<Props, State> {\n  state: State = {maxEvents: undefined};\n\n  handleSuccess = () => {\n    const {closeModal} = this.props;\n\n    closeModal();\n    window.location.reload();\n  };\n\n  handleError() {\n    addErrorMessage(t('Failed to reprocess. Please check your input.'));\n  }\n\n  handleMaxEventsChange = (maxEvents: string) => {\n    this.setState({maxEvents: Number(maxEvents) || undefined});\n  };\n\n  render() {\n    const {organization, Header, Body, closeModal, groupId} = this.props;\n    const {maxEvents} = this.state;\n    const orgSlug = organization.slug;\n    const endpoint = `/organizations/${orgSlug}/issues/${groupId}/reprocessing/`;\n    const title = t('Reprocess Events');\n\n    return (\n      <Fragment>\n        <Header closeButton>{title}</Header>\n        <Body>\n          <Introduction>\n            {t(\n              'Reprocessing applies new debug files and grouping enhancements to this Issue. Please consider these impacts:'\n            )}\n          </Introduction>\n          <StyledList symbol=\"bullet\">\n            {impacts.map((impact, index) => (\n              <ListItem key={index}>{impact}</ListItem>\n            ))}\n          </StyledList>\n          <Introduction>\n            {tct('For more information, please refer to [link:the documentation.]', {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/reprocessing/\" />\n              ),\n            })}\n          </Introduction>\n          <Form\n            submitLabel={title}\n            apiEndpoint={endpoint}\n            apiMethod=\"POST\"\n            initialData={{maxEvents: undefined, remainingEvents: 'keep'}}\n            onSubmitSuccess={this.handleSuccess}\n            onSubmitError={this.handleError}\n            onCancel={closeModal}\n            footerClass=\"modal-footer\"\n          >\n            <NumberField\n              name=\"maxEvents\"\n              label={t('Number of events to be reprocessed')}\n              help={t('If you set a limit, we will reprocess your most recent events.')}\n              placeholder={t('Reprocess all events')}\n              onChange={this.handleMaxEventsChange}\n              min={1}\n            />\n\n            <RadioField\n              orientInline\n              label={t('Remaining events')}\n              help={t('What to do with the events that are not reprocessed.')}\n              name=\"remainingEvents\"\n              choices={remainingEventsChoices}\n              disabled={maxEvents === undefined}\n            />\n          </Form>\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\nexport default ReprocessingEventModal;\n\nconst Introduction = styled('p')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst StyledList = styled(List)`\n  gap: ${space(1)};\n  margin-bottom: ${space(4)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  dashedBorder?: boolean;\n  'data-test-id'?: string;\n};\n\nconst Panel = styled('div')<Props>`\n  background: ${p => (p.dashedBorder ? p.theme.backgroundSecondary : p.theme.background)};\n  border-radius: ${p => p.theme.borderRadius};\n  border: 1px\n    ${p => (p.dashedBorder ? 'dashed' + p.theme.gray300 : 'solid ' + p.theme.border)};\n  box-shadow: ${p => (p.dashedBorder ? 'none' : p.theme.dropShadowLight)};\n  margin-bottom: ${space(2)};\n  position: relative;\n`;\n\nexport default Panel;\n","/**\n * Generic type guard for children as a function patterns.\n */\nexport function isRenderFunc<T>(func: React.ReactNode | Function): func is T {\n  return typeof func === 'function';\n}\n"],"names":["NumberField","props","type","RadioField","Component","id","onChange","onBlur","e","render","this","field","value","disabled","orientInline","choices","label","numericStyle","theme","isSolid","initialCounterValue","css","space","fontSizeSmall","yellow300","black","gray500","listSymbol","numeric","bullet","children","className","symbol","_initialCounterValue","Wrapper","getWrapperComponent","Children","child","isValidElement","cloneElement","p","subText","bulletStyle","getListSymbolStyle","ListItem","onClick","ariaLabel","dataTestId","role","undefined","Symbol","impacts","tct","strong","link","href","t","remainingEventsChoices","ReprocessingEventModal","maxEvents","closeModal","window","location","reload","setState","Number","handleError","addErrorMessage","organization","Header","Body","groupId","state","endpoint","slug","title","Fragment","closeButton","Introduction","StyledList","map","impact","index","submitLabel","apiEndpoint","apiMethod","initialData","remainingEvents","onSubmitSuccess","handleSuccess","onSubmitError","onCancel","footerClass","name","help","placeholder","handleMaxEventsChange","min","fontSizeLarge","List","fontSizeMedium","dashedBorder","backgroundSecondary","background","borderRadius","gray300","border","dropShadowLight","isRenderFunc","func"],"sourceRoot":""}