{"version":3,"file":"chunks/app_components_modals_createNewIntegrationModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"qsBAgBA,SAASA,EAAT,GAAkF,IAApD,KAACC,EAAD,OAAOC,EAAP,OAAeC,EAAf,WAAuBC,EAAvB,QAAmCC,GAAiB,EAChF,MAAOC,EAAQC,IAAgBC,EAAAA,EAAAA,UAAS,YAClCC,EAAU,CACd,CACE,YACA,QAACC,EAAD,CAAmB,eAAa,uBAAhC,UACGC,EAAAA,EAAAA,GAAE,yBADsD,oBAG3D,QAACC,EAAD,WACGC,EAAAA,EAAAA,IACC,oHACA,CACEC,UACE,QAAC,IAAD,CAAcC,KAAK,0FAAnB,UACGJ,EAAAA,EAAAA,GAAE,8BANe,yBAa9B,CACE,UACA,QAACD,EAAD,CAAmB,eAAa,qBAAhC,UACGC,EAAAA,EAAAA,GAAE,uBADoD,kBAGzD,QAACC,EAAD,WACGC,EAAAA,EAAAA,IACC,6GACA,CACEC,UACE,QAAC,IAAD,CAAcC,KAAK,wFAAnB,UACGJ,EAAAA,EAAAA,GAAE,4BANe,wBAehC,OACE,QAAC,EAAAK,SAAD,YACE,QAACd,EAAD,WACE,wBAAKS,EAAAA,EAAAA,GAAE,gCAET,QAACV,EAAD,WACE,QAACgB,EAAD,CACER,QAASA,EACTS,OAAOP,EAAAA,EAAAA,GAAE,eACTQ,SAAUC,GAASb,EAAaa,GAChCA,MAAOd,OAGX,QAACH,EAAD,YACE,QAAC,KAAD,CAAQkB,KAAK,QAAQC,QAAS,IAAMlB,IAAcmB,MAAO,CAACC,aAAaC,EAAAA,EAAAA,GAAM,IAA7E,UACGd,EAAAA,EAAAA,GAAE,aAEL,QAAC,KAAD,CACEe,SAAS,UACTL,KAAK,QACLM,GAAK,aAAYtB,wBACJ,WAAXC,EAAsB,aAAe,kBAJzC,UAOGK,EAAAA,EAAAA,GAAE,gBAjEJX,EAAAA,YAAAA,uBAwET,MAAMiB,GAAmB,OAAOW,EAAAA,EAAP,sBAAH,oFAGAH,EAAAA,EAAAA,GAAM,GAHN,MAMhBf,GAAoB,OAAO,KAAP,sBAAH,mCAIjBE,GAAyB,OAAO,MAAP,sBAAH,UACjBiB,GAAKA,EAAEC,MAAMC,SADI,eAEbF,GAAKA,EAAEC,MAAME,gBAFA,uBAK5B","sources":["webpack:///./app/components/modals/createNewIntegrationModal.tsx"],"sourcesContent":["import {Fragment, ReactNode, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport RadioGroup from 'sentry/components/forms/controls/radioGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nexport type CreateNewIntegrationModalOptions = {\n  orgSlug: string;\n};\n\ntype Props = ModalRenderProps & CreateNewIntegrationModalOptions;\n\nfunction CreateNewIntegration({Body, Header, Footer, closeModal, orgSlug}: Props) {\n  const [option, selectOption] = useState('internal');\n  const choices = [\n    [\n      'internal',\n      <RadioChoiceHeader data-test-id=\"internal-integration\" key=\"header-internal\">\n        {t('Internal Integration')}\n      </RadioChoiceHeader>,\n      <RadioChoiceDescription key=\"description-internal\">\n        {tct(\n          'Internal integrations are meant for custom integrations unique to your organization. See more info on [docsLink].',\n          {\n            docsLink: (\n              <ExternalLink href=\"https://docs.sentry.io/product/integrations/integration-platform/#internal-integrations\">\n                {t('Internal Integrations')}\n              </ExternalLink>\n            ),\n          }\n        )}\n      </RadioChoiceDescription>,\n    ],\n    [\n      'public',\n      <RadioChoiceHeader data-test-id=\"public-integration\" key=\"header-public\">\n        {t('Public Integration')}\n      </RadioChoiceHeader>,\n      <RadioChoiceDescription key=\"description-public\">\n        {tct(\n          'A public integration will be available for all Sentry users for installation. See more info on [docsLink].',\n          {\n            docsLink: (\n              <ExternalLink href=\"https://docs.sentry.io/product/integrations/integration-platform/#public-integrations\">\n                {t('Public Integrations')}\n              </ExternalLink>\n            ),\n          }\n        )}\n      </RadioChoiceDescription>,\n    ],\n  ] as [string, ReactNode, ReactNode][];\n\n  return (\n    <Fragment>\n      <Header>\n        <h3>{t('Choose Integration Type')}</h3>\n      </Header>\n      <Body>\n        <StyledRadioGroup\n          choices={choices}\n          label={t('Avatar Type')}\n          onChange={value => selectOption(value)}\n          value={option}\n        />\n      </Body>\n      <Footer>\n        <Button size=\"small\" onClick={() => closeModal()} style={{marginRight: space(1)}}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          priority=\"primary\"\n          size=\"small\"\n          to={`/settings/${orgSlug}/developer-settings/${\n            option === 'public' ? 'new-public' : 'new-internal'\n          }/`}\n        >\n          {t('Next')}\n        </Button>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst StyledRadioGroup = styled(RadioGroup)`\n  grid-auto-columns: auto;\n  & > label:not(:last-child) > div:last-child > * {\n    padding-bottom: ${space(1)};\n  }\n`;\nconst RadioChoiceHeader = styled('h6')`\n  margin: 0;\n`;\n\nconst RadioChoiceDescription = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1.6em;\n`;\nexport default CreateNewIntegration;\n"],"names":["CreateNewIntegration","Body","Header","Footer","closeModal","orgSlug","option","selectOption","useState","choices","RadioChoiceHeader","t","RadioChoiceDescription","tct","docsLink","href","Fragment","StyledRadioGroup","label","onChange","value","size","onClick","style","marginRight","space","priority","to","RadioGroup","p","theme","gray400","fontSizeMedium"],"sourceRoot":""}