language: python 
sudo: false

env:
  - TESTPART=IPYTHON1
  - TESTPART=IPYTHON2

python:
  - "2.7"
  - "3.5"

before_install:
  - if [ ${TRAVIS_PYTHON_VERSION:0:3} == "2.7" ]; then wget http://repo.continuum.io/miniconda/Miniconda-3.5.5-Linux-x86_64.sh -O miniconda.sh; else wget http://repo.continuum.io/miniconda/Miniconda3-3.5.5-Linux-x86_64.sh -O miniconda.sh; fi
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p /home/travis/mc
  - export PATH=/home/travis/mc/bin:$PATH

install:
  - conda update --yes conda
  - if [[ ${TRAVIS_PYTHON_VERSION:0:3} == "2.7" ]]; then conda create -n testenv --yes -c anaconda libgfortran=1.0 numpy=1.9 scipy=0.16 matplotlib=1.4 mpmath=1.0.0 sympy=1.1.1 setuptools python=$TRAVIS_PYTHON_VERSION; fi
  - if [[ ${TRAVIS_PYTHON_VERSION:0:3} == "3.5" ]]; then conda create -n testenv --yes -c anaconda libgfortran=1.0 numpy=1.9 scipy=0.16 matplotlib=1.4 mpmath=1.0.0 sympy=1.1.1 setuptools python=$TRAVIS_PYTHON_VERSION; fi
  - source activate testenv
  - pip install rebound
  - cd $TRAVIS_BUILD_DIR/ && python setup.py install

script:
  - if [[ $TESTPART == "IPYTHON1" ]]; then cd $TRAVIS_BUILD_DIR/ && python setup.py test; fi
  #- if [[ $TESTPART == "IPYTHON1" ]]; then cd $TRAVIS_BUILD_DIR/jupyter_examples/ && python ipynb2py.py Andoyer_Resonance_Models.ipynb; fi
  #- if [[ $TESTPART == "IPYTHON2" ]]; then cd $TRAVIS_BUILD_DIR/jupyter_examples/ && python ipynb2py.py Basic_Poincare_Integration.ipynb; fi
  #- if [[ $TESTPART == "IPYTHON2" ]]; then cd $TRAVIS_BUILD_DIR/jupyter_examples/ && python ipynb2py.py ResonanceWidths_And_Intersections.ipynb; fi
  #- if [[ $TESTPART == "IPYTHON2" ]]; then cd $TRAVIS_BUILD_DIR/jupyter_examples/ && python ipynb2py.py Secular_System_Integration.ipynb; fi

