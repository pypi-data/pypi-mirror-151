Metadata-Version: 2.1
Name: stactools-noaa-c-cap
Version: 0.2.2
Summary: Create STAC Items and Collections for NOAA C-CAP data
Home-page: https://github.com/stactools-packages/noaa-c-cap
Author: stac-utils
Author-email: stac@radiant.earth
Project-URL: Documentation, https://stactools-noaa-c-cap.readthedocs.io/en/latest/
Project-URL: Issues, https://github.com/stactools-packages/noaa-c-cap/issues
Keywords: stactools,pystac,catalog,STAC
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown
License-File: LICENSE

# stactools-noaa-c-cap

- Name: noaa-c-cap
- Package: `stactools.noaa_c_cap`
- PyPI: https://pypi.org/project/stactools-noaa-c-cap/
- Owner: @gadomski
- Dataset homepage: http://github.com/stactools-packages/noaa-c-cap
- STAC extensions used:
  - [classification](https://github.com/stac-extensions/classification)
  - [item-assets](https://github.com/stac-extensions/item-assets)
  - [proj](https://github.com/stac-extensions/projection)
  - [raster](https://github.com/stac-extensions/raster)
  - [scientific](https://github.com/stac-extensions/scientific)
- Extra fields: None

Create STAC Items and Collections for NOAA C-CAP data.

[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/stactools-packages/noaa-c-cap/main?filepath=docs/installation_and_basic_usage.ipynb)

## Examples

### STAC objects

- [Collection](examples/collection.json)
- [Item](examples/conus_2016_ccap_landcover_20200311/conus_2016_ccap_landcover_20200311.json)

### Command-line usage

Create a single item

```bash
$ stac noaa-c-cap create-item conus_2016_ccap_landcover_20200311.tif item.json
```

Create the entire collection from the remote data sources:

```bash
$ stac noaa-c-ccap create-collection destination-directory
```

Creating the `examples/` directory

```bash
$ stac noaa-c-cap create-collection --catalog-type SELF_CONTAINED examples
```
