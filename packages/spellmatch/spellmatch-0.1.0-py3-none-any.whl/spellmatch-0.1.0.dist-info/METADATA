Metadata-Version: 2.1
Name: spellmatch
Version: 0.1.0
Summary: Spatial cell representation matching
Home-page: https://github.com/BodenmillerGroup/spellmatch
Author: Jonas Windhager
Author-email: jonas.windhager@uzh.ch
License: MIT
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Scientific/Engineering :: Image Processing
Requires-Python: <3.10,>=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click
Requires-Dist: click-log
Requires-Dist: napari[all] (>=0.4.15)
Requires-Dist: numpy
Requires-Dist: opencv-python-headless
Requires-Dist: pandas
Requires-Dist: pluggy
Requires-Dist: probreg
Requires-Dist: pydantic
Requires-Dist: pyqtgraph
Requires-Dist: PyYaml
Requires-Dist: qtpy
Requires-Dist: scikit-image (>=0.19.0)
Requires-Dist: scikit-learn
Requires-Dist: scipy (>=1.8.0)
Requires-Dist: shapely
Requires-Dist: SimpleITK
Requires-Dist: tifffile
Requires-Dist: xarray
Provides-Extra: cuda
Requires-Dist: cupy ; extra == 'cuda'
Provides-Extra: nonfree
Requires-Dist: opencv-contrib-python-headless ; extra == 'nonfree'

# spellmatch

![Python](https://img.shields.io/pypi/pyversions/spellmatch)
![PyPI](https://img.shields.io/pypi/v/spellmatch)
![Build](https://img.shields.io/github/workflow/status/BodenmillerGroup/spellmatch/build_and_deploy)
![Coverage](https://img.shields.io/codecov/c/github/BodenmillerGroup/spellmatch)
![Issues](https://img.shields.io/github/issues/BodenmillerGroup/spellmatch)
![Pull requests](https://img.shields.io/github/issues-pr/BodenmillerGroup/spellmatch)
![License](https://img.shields.io/github/license/BodenmillerGroup/spellmatch)

Spatial cell representation matching

Documentation is available at https://bodenmillergroup.github.io/spellmatch

# Contributing

Pull requests are welcome. For major changes, please open an issue first to discuss what
you would like to change. Please make sure to update tests as appropriate.

## Extending spellmatch

Spellmatch uses [pluggy](https://pluggy.readthedocs.io) to discover and interface with
plugins.

Currently, spellmatch supports the addition of custom mask matching algorithms. To add
your mask matching algorithm to spellmatch, create a Python package named
`spellmatch-youralgorithm`, configure your setuptools entrypoint for pluggy, and
implement the `spellmatch.hookspecs.spellmatch_get_mask_matching_algorithm` hook.

Please refer to the spellmatch reference documentation for further details.

# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [0.1.0] - 2022-05-19

Initial release

[0.1.0]: https://github.com/BodenmillerGroup/spellmatch/releases/tag/v0.1.0

MIT License

Copyright (c) 2022 University of Zurich

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
