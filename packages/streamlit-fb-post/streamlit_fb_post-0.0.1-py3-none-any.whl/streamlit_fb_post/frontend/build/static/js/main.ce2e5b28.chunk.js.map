{"version":3,"sources":["stPost.tsx","index.tsx"],"names":["Post","hasUpdated","componentDidUpdate","Streamlit","setFrameHeight","componentDidMount","render","props","args","text","picture","link","legend","Avatar","styled","div","border","borderRadius","height","width","margin","MessageDiv","padding","fontFamily","flexFlow","backgroundColor","DivProfile","display","alignItems","flexDirection","DivProfileContainer","marginLeft","ProfileName","span","fontSize","fontWeight","ProfileDate","color","AnswerBtn","a","cursor","BtnContainer","justifyContent","ImgContainer","marginRight","marginBottom","Img","img","pic","className","Array","isArray","map","index","key","src","alt","onLoad","forceUpdate","href","target","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"wQASMA,E,4MACIC,YAAsB,E,EAEvBC,mBAAqB,WAC1BC,IAAUC,kB,EAGLC,kBAAoB,WACzBF,IAAUC,kB,EAGLE,OAAS,WACd,MAAwC,EAAKC,MAAMC,KAA3CC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,OAEvBC,EAASC,IAAOC,IAAI,CACxBC,OAAO,wBACPC,aAAc,MACdC,OAAQ,SACRC,MAAO,SACPC,OAAQ,IAEJC,EAAaP,IAAOC,IAAI,CAC5BO,QAAS,SAELtB,EAAOc,IAAOC,IAAI,CACtBQ,WAAW,mCACXL,OAAQ,OACRE,OAAQ,EACRD,MAAO,OACPK,SAAU,SACVP,aAAc,SACdD,OAAO,oBACPS,gBAAiB,YAEbC,EAAaZ,IAAOC,IAAI,CAC5BY,QAAS,OACTL,QAAS,OACTM,WAAY,aACZC,cAAe,QAEXC,EAAsBhB,IAAOC,IAAI,CACrCY,QAAS,OACTE,cAAe,SACfE,WAAY,WAERC,EAAclB,IAAOmB,KAAK,CAC9BC,SAAU,SACVC,WAAY,SAERC,EAActB,IAAOmB,KAAK,CAC9BC,SAAU,SACVG,MAAO,YAEHC,EAAYxB,IAAOyB,EAAE,CACzBd,gBAAiB,UACjBT,OAAQ,oBACRqB,MAAO,QACPf,QAAS,cACTL,aAAc,SACdiB,SAAU,SACVC,WAAY,OACZK,OAAQ,YAIJC,EAAe3B,IAAOC,IAAI,CAC9BY,QAAS,OACTE,cAAe,MACfa,eAAgB,WAChBd,WAAY,SACZN,QAAS,gBAELqB,EAAe7B,IAAOC,IAAI,CAC9BY,QAAS,OACTE,cAAe,MACfa,eAAgB,aAChBd,WAAY,SACZG,WAAY,OACZa,YAAa,OACbC,aAAc,SAEVC,EAAMhC,IAAOiC,IAAI,CACrB5B,MAAO,OACPH,OAAQ,sBAGNgC,EAAMtC,GAAW,GAErB,OACE,kBAAC,EAAD,KACE,kBAACgB,EAAD,KACE,kBAACb,EAAD,CAAQoC,UAAU,WAElB,kBAACnB,EAAD,KACE,6BACE,kBAACE,EAAD,8CAGF,yBAAKiB,UAAU,SACb,kBAACb,EAAD,KAAcxB,MAKpB,kBAACS,EAAD,KACGZ,GAGFuC,GACC,kBAACL,EAAD,KACGO,MAAMC,QAAQH,IAAQA,EAAII,KAAI,SAACL,EAAaM,GAAd,OAC7B,kBAACP,EAAD,CAAKQ,IAAKD,EAAOE,IAAKR,EAAKS,IAAI,OAAOC,OAAQ,YACpB,IAApB,EAAKxD,aACP,EAAKA,YAAa,EAClB,EAAKyD,sBAGL,kBAACZ,EAAD,CAAKS,IAAKP,EAAKQ,IAAI,OAAOC,OAAQ,YACd,IAApB,EAAKxD,aACP,EAAKA,YAAa,EAClB,EAAKyD,mBAMjB,kBAACjB,EAAD,KACM,kBAACH,EAAD,CAAWqB,KAAMhD,EAAMiD,OAAO,UAA9B,8B,yBA/HSC,KAsIJC,cAAwB9D,GC3IvC+D,IAASzD,OACP,kBAAC,IAAM0D,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ce2e5b28.chunk.js","sourcesContent":["import {\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  Streamlit\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport styled from '@emotion/styled'\n\n\nclass Post extends StreamlitComponentBase {\n  private hasUpdated: boolean = false\n\n  public componentDidUpdate = () => {\n    Streamlit.setFrameHeight()\n  }\n\n  public componentDidMount = () => {\n    Streamlit.setFrameHeight()\n  }\n\n  public render = (): ReactNode => {\n    const { text, picture, link, legend } = this.props.args;\n\n    const Avatar = styled.div({\n      border: `1px solid transparent`,\n      borderRadius: '50%',\n      height: '2.8rem',\n      width: '2.8rem',\n      margin: 0,\n    })\n    const MessageDiv = styled.div({\n      padding: '1rem',\n    })\n    const Post = styled.div({\n      fontFamily: `'Segoe UI', 'Roboto', sans-serif`, \n      height: 'auto',\n      margin: 0,\n      width: '100%',\n      flexFlow: 'column',\n      borderRadius: '0.5rem',\n      border: `1px solid #e6e6e6`,\n      backgroundColor: '#f5f5f5',\n    })\n    const DivProfile = styled.div({\n      display: 'flex',\n      padding: '1rem',\n      alignItems: 'flex-start',\n      flexDirection: 'row',\n    })\n    const DivProfileContainer = styled.div({\n      display: 'flex',\n      flexDirection: 'column',\n      marginLeft: '0.5rem',\n    })\n    const ProfileName = styled.span({\n      fontSize: '0.9rem',\n      fontWeight: 'bold',\n    })\n    const ProfileDate = styled.span({\n      fontSize: '0.8rem',\n      color: '#828282',\n    })\n    const AnswerBtn = styled.a({\n      backgroundColor: '#3b5998',\n      border: '1px solid #3b5998',\n      color: 'white',\n      padding: '0.5rem 1rem',\n      borderRadius: '0.5rem',\n      fontSize: '0.8rem',\n      fontWeight: 'bold',\n      cursor: 'pointer',\n    })\n    // the container for the buttons\n    // will be aligned to the right\n    const BtnContainer = styled.div({\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      padding: '0 1rem 1rem',\n    })\n    const ImgContainer = styled.div({\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      marginLeft: '-2px',\n      marginRight: '-2px',\n      marginBottom: '1rem',\n    })\n    const Img = styled.img({\n      width: '100%',\n      border: '1px solid #f5f5f5',\n    })\n\n    let pic = picture || []\n\n    return (\n      <Post>\n        <DivProfile>\n          <Avatar className=\"avatar\" />\n\n          <DivProfileContainer>\n            <div>\n              <ProfileName>Le profile Facebook est caché.</ProfileName>\n            </div>\n\n            <div className=\"mt--5\">\n              <ProfileDate>{legend}</ProfileDate>\n            </div>\n          </DivProfileContainer>\n        </DivProfile>\n\n        <MessageDiv>\n          {text}\n        </MessageDiv>\n\n        {pic && (\n          <ImgContainer>\n            {Array.isArray(pic) && pic.map((img: string, index: number) => (\n              <Img key={index} src={img} alt=\"post\" onLoad={() => {\n                if (this.hasUpdated === false) {\n                  this.hasUpdated = true\n                  this.forceUpdate()\n                }\n              }} />\n            )) || <Img src={pic} alt=\"post\" onLoad={() => {\n              if (this.hasUpdated === false) {\n                this.hasUpdated = true\n                this.forceUpdate()\n              }\n            }} />}\n          </ImgContainer>\n        )}\n\n\t\t\t\t<BtnContainer>\n          <AnswerBtn href={link} target=\"_blank\">Voir les réponses</AnswerBtn>\n        </BtnContainer>\n      </Post>\n    )\n  }\n}\n\nexport default withStreamlitConnection(Post);\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Post from \"./stPost\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Post />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}