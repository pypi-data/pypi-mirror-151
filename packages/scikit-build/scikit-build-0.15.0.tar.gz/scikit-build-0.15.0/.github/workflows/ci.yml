name: CI

on:
  pull_request:
  push:
    branches:
    - master
    - main

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "3"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
    - uses: pre-commit/action@v2.0.3

  tests:
    runs-on: ${{ matrix.runs-on }}
    needs: [lint]
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-2019, windows-2022]

    name: Tests on ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set environment for available GHA MSVCs
      if: runner.os == 'Windows'
      shell: bash
      run: |
        echo "SKBUILD_TEST_FIND_VS2008_INSTALLATION_EXPECTED=0" >> $GITHUB_ENV
        echo "SKBUILD_TEST_FIND_VS2010_INSTALLATION_EXPECTED=0" >> $GITHUB_ENV
        echo "SKBUILD_TEST_FIND_VS2012_INSTALLATION_EXPECTED=0" >> $GITHUB_ENV

    - name: Set environment for available GHA MSVCs
      if: matrix.runs-on == 'windows-2019'
      shell: bash
      run: |
        echo "SKBUILD_TEST_FIND_VS2015_INSTALLATION_EXPECTED=1" >> $GITHUB_ENV
        echo "SKBUILD_TEST_FIND_VS2017_INSTALLATION_EXPECTED=0" >> $GITHUB_ENV
        echo "SKBUILD_TEST_FIND_VS2019_INSTALLATION_EXPECTED=1" >> $GITHUB_ENV
        echo "SKBUILD_TEST_FIND_VS2022_INSTALLATION_EXPECTED=0" >> $GITHUB_ENV

    - name: Set environment for available GHA MSVCs
      if: matrix.runs-on == 'windows-2022'
      shell: bash
      run: |
        echo "SKBUILD_TEST_FIND_VS2015_INSTALLATION_EXPECTED=0" >> $GITHUB_ENV
        echo "SKBUILD_TEST_FIND_VS2017_INSTALLATION_EXPECTED=0" >> $GITHUB_ENV
        echo "SKBUILD_TEST_FIND_VS2019_INSTALLATION_EXPECTED=0" >> $GITHUB_ENV
        echo "SKBUILD_TEST_FIND_VS2022_INSTALLATION_EXPECTED=1" >> $GITHUB_ENV

    - name: Setup nox
      uses: ./.github/actions/setup-nox

    # We check all Python's on Linux, because it's fast.
    # We check Python 2.7 on Linux and macOS, it's not supported on Windows.
    # We check minimum Python 3, and maximum Python 3 on all OS's.

    - name: Test on 🐍 2.7
      if: runner.os != 'Windows'
      run: nox -s tests-2.7
    - name: Test on 🐍 3.5
      if: matrix.runs-on != 'windows-2022'
      run: nox -s tests-3.5
    - name: Test on 🐍 3.6
      if: runner.os == 'Linux'
      run: nox -s tests-3.6
    - name: Test on 🐍 3.7
      if: runner.os == 'Linux' || matrix.runs-on == 'windows-2022'
      run: nox -s tests-3.7
    - name: Test on 🐍 3.8
      if: runner.os == 'Linux'
      run: nox -s tests-3.8
    - name: Test on 🐍 3.9
      if: runner.os == 'Linux'
      run: nox -s tests-3.9
    - name: Test on 🐍 3.10
      run: nox -s tests-3.10

  cygwin:
    name: Tests on 🐍 3.9 • cygwin
    runs-on: windows-latest
    needs: [lint]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: cygwin/cygwin-install-action@v2
      with:
        platform: x86_64
        packages: cmake ninja git make gcc-g++ gcc-fortran python39 python39-devel python39-pip

    - name: Install nox
      run: python3.9 -m pip install nox

    - name: Run tests
      env:
        TMP: /tmp
        TEMP: /tmp
        SETUPTOOLS_SCM_PRETEND_VERSION: "0.15"
      run: python3.9 -m nox -s tests-3.9


  tests-pypy:
    runs-on: ${{ matrix.runs-on }}
    needs: [lint]
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest]
    name: Tests on 🐍 PyPy • ${{ matrix.runs-on }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup nox
      uses: ./.github/actions/setup-nox

    - name: Test on 🐍 PyPy 3.8
      run: nox -s tests-pypy3.8


  dist:
    name: Distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build SDist and wheel
      run: pipx run build

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*

    - name: Check metadata
      run: pipx run twine check dist/*
