[tool.poetry]
name = "uzi"
version = "0.3.2"
description = "Dependency injection library"
authors = ["David Kyalo <davidmkyalo@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/pyuzi/uzi"
documentation = "https://pyuzi.github.io/uzi"
keywords = [
    "dependency-injection",
    "inversion-of-control",
    "inversion-of-control-container",
    "IoC-Container",
    "service-injector",
    "injector",
    "IoC",
    "DI",
    "Uzi",
]
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.dependencies]
python = "^3.9"
typing-extensions = "^4.1.1"
attrs = "^21.4.0"
blinker = "^1.4"


[tool.poetry.dev-dependencies]
pytest = "^7.1.1"
pytest-asyncio = "^0.18.3"
pytest-cov = {extras = ["toml"], version = "^3.0.0"}
pip = "^22.0.4"
mkdocs = "^1.3.0"
mkdocs-material = "^8.2.8"
mike = "^1.1.2"
coverage-conditional-plugin = "^0.5.0"
black = {version = "^22.3.0", allow-prereleases = true}
mkdocstrings = {version = "^0.18.1", extras = ["python"]}



[tool.pytest.ini_options]
addopts = "--cov=uzi --cov-report html --cov-config pyproject.toml"
asyncio_mode="auto"


# log_level = INFO
log_level = "DEBUG"

# Glob-style pattern(s) for matching the test modules.
python_files = "tests/**/test.py tests/**/tests.py tests/**/*_test.py tests/**/*_tests.py"

#Pattern for matching test classes
python_classes = "*Test *Tests"

#Test markers


[tool.coverage.run]
# Here we specify plugins for coverage to be used:
plugins = [
    "coverage_conditional_plugin"
]

[tool.coverage.coverage_conditional_plugin.rules]
# Here we specify our pragma rules:
py-gt-39 = "sys_version_info > (3, 9)"
py-lt-39 = "sys_version_info < (3, 9)"
py-lt-310 = "sys_version_info < (3, 10)"
has-mypy = "is_installed('mypy')"
no-cover = "True"