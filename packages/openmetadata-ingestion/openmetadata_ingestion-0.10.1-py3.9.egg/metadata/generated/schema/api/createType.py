# generated by datamodel-codegen:
#   filename:  schema/api/createType.json
#   timestamp: 2022-05-16T11:29:27+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Extra, Field

from ..type import basic


class CreateType(BaseModel):
    class Config:
        extra = Extra.forbid

    name: basic.EntityName = Field(
        ..., description='Unique name that identifies a Type.'
    )
    nameSpace: str = Field(
        ..., description='Namespace or group to which this type belongs to.'
    )
    displayName: Optional[str] = Field(
        None, description='Display Name that identifies this Type.'
    )
    description: str = Field(..., description='Optional description of the type.')
    schema_: basic.JsonSchema = Field(
        ...,
        alias='schema',
        description='JSON schema encoded as string. This will be used to validate the type values.',
    )
