name: Test

on: [push, pull_request, workflow_dispatch]

env:
  FORCE_COLOR: 1

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["pypy-3.8", "3.7", "3.8", "3.9", "3.10", "3.11-dev"]
        os: [ubuntu-20.04, ubuntu-18.04, macos-latest, windows-2019]
        exclude:
          - { python-version: "pypy-3.8", os: macos-latest }

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: "setup.py"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U pytest
          python -m pip install .
        env:
          CFLAGS: '-DDEBUG'

      - name: Tests
        run: |
          python -m pytest --capture=no

      - name: Test without debug mode
        run: |
          git clean -Xfd
          python -m pip install --force-reinstall .
          python -m pytest

      - name: Test with coverage
        if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.python-version == '3.9' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          pip install -e .
          pip install coverage
          CFLAGS="--coverage -O0" python setup.py -q build_ext --inplace -f
          coverage run -m pytest
          ./scripts/coverage.sh
          bash <(curl -s https://codecov.io/bash) -X gcov
