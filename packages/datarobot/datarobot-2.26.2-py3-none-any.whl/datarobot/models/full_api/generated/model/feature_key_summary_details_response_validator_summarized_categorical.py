#
# Copyright 2021 DataRobot, Inc. and its affiliates.
#
# All rights reserved.
#
# DataRobot, Inc.
#
# This is proprietary source code of DataRobot, Inc. and its
# affiliates.
#
# Released under the terms of DataRobot Tool and Utility Agreement.
"""
Autogenerated DataRobot python client file.  Please don't modify.
"""

import trafaret as t
from datarobot.models.api_object import APIObject

class FeatureKeySummaryDetailsResponseValidatorSummarizedCategorical(APIObject):
    """
    Attributes
    ----------
    data_qualities:str
         The indicator of data quality assessment of the feature.
    max:float
         Maximum value of the key.
    mean:float
         Mean value of the key.
    median:float
         Median value of the key.
    min:float
         Minimum value of the key.
    pct_rows:float
         Percentage occurrence of key in the EDA sample of the feature.
    std_dev:float
         Standard deviation of the key.
    """
    _converter = t.Dict(
        {
            t.Key("data_qualities"):  t.String(),
            t.Key("max"):  t.Float(),
            t.Key("mean"):  t.Float(),
            t.Key("median"):  t.Float(),
            t.Key("min"):  t.Float(),
            t.Key("pct_rows"):  t.Float(),
            t.Key("std_dev"):  t.Float(),
        }
    ).ignore_extra("*")

    def __init__(
        self,
        data_qualities,
        max,
        mean,
        median,
        min,
        pct_rows,
        std_dev,
    ):
        self.data_qualities = data_qualities
        self.max = max
        self.mean = mean
        self.median = median
        self.min = min
        self.pct_rows = pct_rows
        self.std_dev = std_dev

    def __repr__(self):
        return (
            "FeatureKeySummaryDetailsResponseValidatorSummarizedCategorical("
            "data_qualities={0.data_qualities}, "
            "max={0.max}, "
            "mean={0.mean}, "
            "median={0.median}, "
            "min={0.min}, "
            "pct_rows={0.pct_rows}, "
            "std_dev={0.std_dev}, "
        ).format(self)
