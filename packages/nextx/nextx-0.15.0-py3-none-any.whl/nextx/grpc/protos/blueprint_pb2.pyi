"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ItemMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    PATTERN_FIELD_NUMBER: builtins.int
    name: typing.Text
    type: typing.Text
    description: typing.Text
    pattern: typing.Text
    def __init__(self,
        *,
        name: typing.Text = ...,
        type: typing.Text = ...,
        description: typing.Optional[typing.Text] = ...,
        pattern: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_pattern",b"_pattern","description",b"description","pattern",b"pattern"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_pattern",b"_pattern","description",b"description","name",b"name","pattern",b"pattern","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pattern",b"_pattern"]) -> typing.Optional[typing_extensions.Literal["pattern"]]: ...
global___ItemMetadata = ItemMetadata

class ItemNomenclature(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    type: typing.Text
    name: typing.Text
    description: typing.Text
    def __init__(self,
        *,
        type: typing.Text = ...,
        name: typing.Text = ...,
        description: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","description",b"description"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","description",b"description","name",b"name","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
global___ItemNomenclature = ItemNomenclature

class CheckItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    ORDER_FIELD_NUMBER: builtins.int
    MIN_FIELD_NUMBER: builtins.int
    MAX_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    ALIAS_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    name: typing.Text
    order: builtins.float
    min: builtins.float
    max: builtins.float
    date: builtins.int
    alias: typing.Text
    active: builtins.bool
    @property
    def metadata(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ItemMetadata]: ...
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ItemNomenclature]: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        order: typing.Optional[builtins.float] = ...,
        min: typing.Optional[builtins.float] = ...,
        max: typing.Optional[builtins.float] = ...,
        date: typing.Optional[builtins.int] = ...,
        alias: typing.Optional[typing.Text] = ...,
        active: typing.Optional[builtins.bool] = ...,
        metadata: typing.Optional[typing.Iterable[global___ItemMetadata]] = ...,
        items: typing.Optional[typing.Iterable[global___ItemNomenclature]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_active",b"_active","_alias",b"_alias","_date",b"_date","_max",b"_max","_min",b"_min","_order",b"_order","active",b"active","alias",b"alias","date",b"date","max",b"max","min",b"min","order",b"order"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_active",b"_active","_alias",b"_alias","_date",b"_date","_max",b"_max","_min",b"_min","_order",b"_order","active",b"active","alias",b"alias","date",b"date","items",b"items","max",b"max","metadata",b"metadata","min",b"min","name",b"name","order",b"order"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active",b"_active"]) -> typing.Optional[typing_extensions.Literal["active"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_alias",b"_alias"]) -> typing.Optional[typing_extensions.Literal["alias"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_date",b"_date"]) -> typing.Optional[typing_extensions.Literal["date"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max",b"_max"]) -> typing.Optional[typing_extensions.Literal["max"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min",b"_min"]) -> typing.Optional[typing_extensions.Literal["min"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order",b"_order"]) -> typing.Optional[typing_extensions.Literal["order"]]: ...
global___CheckItem = CheckItem

class DayPart(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    name: typing.Text
    start: builtins.int
    end: builtins.int
    def __init__(self,
        *,
        name: typing.Text = ...,
        start: builtins.int = ...,
        end: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end",b"end","name",b"name","start",b"start"]) -> None: ...
global___DayPart = DayPart

class State(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    name: typing.Text
    description: typing.Text
    def __init__(self,
        *,
        name: typing.Text = ...,
        description: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","description",b"description"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","description",b"description","name",b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
global___State = State

class Blueprint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VERSION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    OWNER_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    PUBLISHED_AT_FIELD_NUMBER: builtins.int
    PUBLISHED_PILOT_AT_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    TEMPERATURE_UNIT_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    DAY_PART_INFO_FIELD_NUMBER: builtins.int
    CHECK_ITEMS_FIELD_NUMBER: builtins.int
    version: typing.Text
    name: typing.Text
    owner: typing.Text
    description: typing.Text
    output: typing.Text
    published_at: builtins.int
    published_pilot_at: builtins.int
    active: builtins.bool
    temperature_unit: typing.Text
    @property
    def state(self) -> global___State: ...
    @property
    def day_part_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DayPart]: ...
    @property
    def check_items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CheckItem]: ...
    def __init__(self,
        *,
        version: typing.Text = ...,
        name: typing.Text = ...,
        owner: typing.Optional[typing.Text] = ...,
        description: typing.Optional[typing.Text] = ...,
        output: typing.Optional[typing.Text] = ...,
        published_at: typing.Optional[builtins.int] = ...,
        published_pilot_at: typing.Optional[builtins.int] = ...,
        active: typing.Optional[builtins.bool] = ...,
        temperature_unit: typing.Optional[typing.Text] = ...,
        state: typing.Optional[global___State] = ...,
        day_part_info: typing.Optional[typing.Iterable[global___DayPart]] = ...,
        check_items: typing.Optional[typing.Iterable[global___CheckItem]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_active",b"_active","_description",b"_description","_output",b"_output","_owner",b"_owner","_published_at",b"_published_at","_published_pilot_at",b"_published_pilot_at","_state",b"_state","_temperature_unit",b"_temperature_unit","active",b"active","description",b"description","output",b"output","owner",b"owner","published_at",b"published_at","published_pilot_at",b"published_pilot_at","state",b"state","temperature_unit",b"temperature_unit"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_active",b"_active","_description",b"_description","_output",b"_output","_owner",b"_owner","_published_at",b"_published_at","_published_pilot_at",b"_published_pilot_at","_state",b"_state","_temperature_unit",b"_temperature_unit","active",b"active","check_items",b"check_items","day_part_info",b"day_part_info","description",b"description","name",b"name","output",b"output","owner",b"owner","published_at",b"published_at","published_pilot_at",b"published_pilot_at","state",b"state","temperature_unit",b"temperature_unit","version",b"version"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active",b"_active"]) -> typing.Optional[typing_extensions.Literal["active"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_output",b"_output"]) -> typing.Optional[typing_extensions.Literal["output"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_owner",b"_owner"]) -> typing.Optional[typing_extensions.Literal["owner"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_published_at",b"_published_at"]) -> typing.Optional[typing_extensions.Literal["published_at"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_published_pilot_at",b"_published_pilot_at"]) -> typing.Optional[typing_extensions.Literal["published_pilot_at"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_temperature_unit",b"_temperature_unit"]) -> typing.Optional[typing_extensions.Literal["temperature_unit"]]: ...
global___Blueprint = Blueprint

class BusinessUnitActiveBlueprintRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___BusinessUnitActiveBlueprintRequest = BusinessUnitActiveBlueprintRequest

class BusinessUnitActiveBlueprintResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACTIVE_PROJECT_FIELD_NUMBER: builtins.int
    @property
    def active_project(self) -> global___Blueprint: ...
    def __init__(self,
        *,
        active_project: typing.Optional[global___Blueprint] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_active_project",b"_active_project","active_project",b"active_project"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_active_project",b"_active_project","active_project",b"active_project"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active_project",b"_active_project"]) -> typing.Optional[typing_extensions.Literal["active_project"]]: ...
global___BusinessUnitActiveBlueprintResponse = BusinessUnitActiveBlueprintResponse

class BusinessUnitBlueprintsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___BusinessUnitBlueprintsRequest = BusinessUnitBlueprintsRequest

class BusinessUnitBlueprintsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROJECTS_FIELD_NUMBER: builtins.int
    @property
    def projects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Blueprint]: ...
    def __init__(self,
        *,
        projects: typing.Optional[typing.Iterable[global___Blueprint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["projects",b"projects"]) -> None: ...
global___BusinessUnitBlueprintsResponse = BusinessUnitBlueprintsResponse
