{"version":3,"file":"52e2457a.js","mappings":";AAkEA;;AAGA;;;AAGA;;;AAKA;AACA;;AAIA;AACA;;AAIA;AACA;;;AAzBA;;;;AAvCA","sources":["webpack://home-assistant-frontend/./src/panels/config/devices/device-detail/integration-elements/zwave_js/ha-device-actions-zwave_js.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { DeviceRegistryEntry } from \"../../../../../../data/device_registry\";\nimport {\n  fetchZwaveNodeStatus,\n  getZwaveJsIdentifiersFromDevice,\n  ZWaveJSNodeIdentifiers,\n  ZWaveJSNodeStatus,\n} from \"../../../../../../data/zwave_js\";\nimport { haStyle } from \"../../../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../../../types\";\nimport { showZWaveJSReinterviewNodeDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-reinterview-node\";\nimport { showZWaveJSHealNodeDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-heal-node\";\nimport { showZWaveJSRemoveFailedNodeDialog } from \"../../../../integrations/integration-panels/zwave_js/show-dialog-zwave_js-remove-failed-node\";\n\n@customElement(\"ha-device-actions-zwave_js\")\nexport class HaDeviceActionsZWaveJS extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public device!: DeviceRegistryEntry;\n\n  @state() private _entryId?: string;\n\n  @state() private _nodeId?: number;\n\n  @state() private _node?: ZWaveJSNodeStatus;\n\n  protected updated(changedProperties: PropertyValues) {\n    if (changedProperties.has(\"device\")) {\n      const identifiers: ZWaveJSNodeIdentifiers | undefined =\n        getZwaveJsIdentifiersFromDevice(this.device);\n      if (!identifiers) {\n        return;\n      }\n      this._nodeId = identifiers.node_id;\n      this._entryId = this.device.config_entries[0];\n\n      this._fetchNodeDetails();\n    }\n  }\n\n  protected async _fetchNodeDetails() {\n    if (!this._nodeId || !this._entryId) {\n      return;\n    }\n\n    this._node = await fetchZwaveNodeStatus(\n      this.hass,\n      this._entryId,\n      this._nodeId\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this._node) {\n      return html``;\n    }\n    return html`\n      ${!this._node.is_controller_node\n        ? html`\n            <a\n              .href=${`/config/zwave_js/node_config/${this.device.id}?config_entry=${this._entryId}`}\n            >\n              <mwc-button>\n                ${this.hass.localize(\n                  \"ui.panel.config.zwave_js.device_info.device_config\"\n                )}\n              </mwc-button>\n            </a>\n            <mwc-button @click=${this._reinterviewClicked}>\n              ${this.hass.localize(\n                \"ui.panel.config.zwave_js.device_info.reinterview_device\"\n              )}\n            </mwc-button>\n            <mwc-button @click=${this._healNodeClicked}>\n              ${this.hass.localize(\n                \"ui.panel.config.zwave_js.device_info.heal_node\"\n              )}\n            </mwc-button>\n            <mwc-button @click=${this._removeFailedNode}>\n              ${this.hass.localize(\n                \"ui.panel.config.zwave_js.device_info.remove_failed\"\n              )}\n            </mwc-button>\n          `\n        : \"\"}\n    `;\n  }\n\n  private async _reinterviewClicked() {\n    if (!this._nodeId || !this._entryId) {\n      return;\n    }\n    showZWaveJSReinterviewNodeDialog(this, {\n      entry_id: this._entryId,\n      node_id: this._nodeId,\n    });\n  }\n\n  private async _healNodeClicked() {\n    if (!this._nodeId || !this._entryId) {\n      return;\n    }\n    showZWaveJSHealNodeDialog(this, {\n      entry_id: this._entryId,\n      node_id: this._nodeId,\n      device: this.device,\n    });\n  }\n\n  private async _removeFailedNode() {\n    if (!this._nodeId || !this._entryId) {\n      return;\n    }\n    showZWaveJSRemoveFailedNodeDialog(this, {\n      entry_id: this._entryId,\n      node_id: this._nodeId,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        a {\n          text-decoration: none;\n        }\n      `,\n    ];\n  }\n}\n"],"names":[],"sourceRoot":""}