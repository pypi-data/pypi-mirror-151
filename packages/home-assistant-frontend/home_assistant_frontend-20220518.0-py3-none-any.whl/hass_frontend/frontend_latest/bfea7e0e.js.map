{"version":3,"file":"bfea7e0e.js","mappings":";;AA0FA;;AAEA;;AAGA;AACA;;AAEA;;AAGA;AACA;;AAEA;;AAGA;AAGA;;;AAOA;AAGA;;;AAKA;AAGA;;;AAeA;AAGA;;;AA5DA;;;;;;;;AA5DA","sources":["webpack://home-assistant-frontend/./src/panels/config/devices/device-detail/integration-elements/zwave_js/ha-device-info-zwave_js.ts"],"sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { DeviceRegistryEntry } from \"../../../../../../data/device_registry\";\nimport {\n  ConfigEntry,\n  getConfigEntries,\n} from \"../../../../../../data/config_entries\";\nimport {\n  fetchZwaveNodeStatus,\n  getZwaveJsIdentifiersFromDevice,\n  nodeStatus,\n  ZWaveJSNodeStatus,\n  ZWaveJSNodeIdentifiers,\n  SecurityClass,\n} from \"../../../../../../data/zwave_js\";\nimport { haStyle } from \"../../../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../../../types\";\n\n@customElement(\"ha-device-info-zwave_js\")\nexport class HaDeviceInfoZWaveJS extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public device!: DeviceRegistryEntry;\n\n  @state() private _entryId?: string;\n\n  @state() private _configEntry?: ConfigEntry;\n\n  @state() private _multipleConfigEntries = false;\n\n  @state() private _nodeId?: number;\n\n  @state() private _node?: ZWaveJSNodeStatus;\n\n  protected updated(changedProperties: PropertyValues) {\n    if (changedProperties.has(\"device\")) {\n      const identifiers: ZWaveJSNodeIdentifiers | undefined =\n        getZwaveJsIdentifiersFromDevice(this.device);\n      if (!identifiers) {\n        return;\n      }\n      this._nodeId = identifiers.node_id;\n      this._entryId = this.device.config_entries[0];\n\n      this._fetchNodeDetails();\n    }\n  }\n\n  protected async _fetchNodeDetails() {\n    if (!this._nodeId || !this._entryId) {\n      return;\n    }\n\n    const configEntries = await getConfigEntries(this.hass, {\n      domain: \"zwave_js\",\n    });\n    let zwaveJsConfEntries = 0;\n    for (const entry of configEntries) {\n      if (zwaveJsConfEntries) {\n        this._multipleConfigEntries = true;\n      }\n      if (entry.entry_id === this._entryId) {\n        this._configEntry = entry;\n      }\n      if (this._configEntry && this._multipleConfigEntries) {\n        break;\n      }\n      zwaveJsConfEntries++;\n    }\n\n    this._node = await fetchZwaveNodeStatus(\n      this.hass,\n      this._entryId,\n      this._nodeId\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this._node) {\n      return html``;\n    }\n    return html`\n      <h4>\n        ${this.hass.localize(\"ui.panel.config.zwave_js.device_info.zwave_info\")}\n      </h4>\n      ${this._multipleConfigEntries\n        ? html`\n            <div>\n              ${this.hass.localize(\"ui.panel.config.zwave_js.common.source\")}:\n              ${this._configEntry!.title}\n            </div>\n          `\n        : \"\"}\n      <div>\n        ${this.hass.localize(\"ui.panel.config.zwave_js.common.node_id\")}:\n        ${this._node.node_id}\n      </div>\n      ${!this._node.is_controller_node\n        ? html`\n            <div>\n              ${this.hass.localize(\n                \"ui.panel.config.zwave_js.device_info.node_status\"\n              )}:\n              ${this.hass.localize(\n                `ui.panel.config.zwave_js.node_status.${\n                  nodeStatus[this._node.status]\n                }`\n              )}\n            </div>\n            <div>\n              ${this.hass.localize(\n                \"ui.panel.config.zwave_js.device_info.node_ready\"\n              )}:\n              ${this._node.ready\n                ? this.hass.localize(\"ui.common.yes\")\n                : this.hass.localize(\"ui.common.no\")}\n            </div>\n            <div>\n              ${this.hass.localize(\n                \"ui.panel.config.zwave_js.device_info.highest_security\"\n              )}:\n              ${this._node.highest_security_class !== null\n                ? this.hass.localize(\n                    `ui.panel.config.zwave_js.security_classes.${\n                      SecurityClass[this._node.highest_security_class]\n                    }.title`\n                  )\n                : this._node.is_secure === false\n                ? this.hass.localize(\n                    \"ui.panel.config.zwave_js.security_classes.none.title\"\n                  )\n                : this.hass.localize(\n                    \"ui.panel.config.zwave_js.device_info.unknown\"\n                  )}\n            </div>\n            <div>\n              ${this.hass.localize(\n                \"ui.panel.config.zwave_js.device_info.zwave_plus\"\n              )}:\n              ${this._node.zwave_plus_version\n                ? this.hass.localize(\n                    \"ui.panel.config.zwave_js.device_info.zwave_plus_version\",\n                    \"version\",\n                    this._node.zwave_plus_version\n                  )\n                : this.hass.localize(\"ui.common.no\")}\n            </div>\n          `\n        : \"\"}\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        h4 {\n          margin-bottom: 4px;\n        }\n        div {\n          word-break: break-all;\n          margin-top: 2px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-device-info-zwave_js\": HaDeviceInfoZWaveJS;\n  }\n}\n"],"names":[],"sourceRoot":""}