[tox]
envlist =
  {py3}-django{2,3,4}
  bandit
  black
  flake8
  isort
  mypy

[cleanup]
commands =
  find {toxinidir}/tests -type f -name "*.pyc" -delete
  find {toxinidir}/tests -type d -name "__pycache__" -delete
  find {toxinidir}/src -type f -name "*.pyc" -delete
  find {toxinidir}/src -type d -name "__pycache__" -delete
  find {toxinidir}/src -type f -path "*.egg-info*" -delete
  find {toxinidir}/src -type d -path "*.egg-info" -delete

[pipupgrade]
commands =
  python -m pip install --upgrade pip

[testenv:black]
basepython = python3
changedir = {toxinidir}
deps = black
commands =
  {[pipupgrade]commands}
  black --line-length 88 --check --diff {toxinidir}/src/manageadmins {toxinidir}/tests {toxinidir}
  {[cleanup]commands}

[testenv:flake8]
changedir = {toxinidir}
deps = flake8
commands =
  {[pipupgrade]commands}
  flake8 {toxinidir}/src/manageadmins {toxinidir}/tests
  {[cleanup]commands}

[testenv:isort]
changedir = {toxinidir}
deps = isort
commands =
  {[pipupgrade]commands}
  isort --check-only --diff {toxinidir}/src/manageadmins {toxinidir}/tests
  {[cleanup]commands}

[testenv:mypy]
changedir = {toxinidir}
deps = mypy
       django-stubs
       types-requests
commands =
  {[pipupgrade]commands}
  mypy {toxinidir}/src/manageadmins {toxinidir}/tests
  {[cleanup]commands}

[testenv]
whitelist_externals =
  find
  rm
setenv =
    PYTHONWARNINGS=once::DeprecationWarning
commands =
  {[pipupgrade]commands}
  coverage run --source manageadmins runtests.py
  coverage report -m
  {[cleanup]commands}
deps =
  coverage
  factory-boy
  django2: Django>=2.0<3.0
  django3: Django>=3.0<4.0
  django4: Django>=4.0

[testenv:bandit]
deps =
    bandit==1.7.1
commands =
    bandit -c bandit.yaml -r src/manageadmins
