Metadata-Version: 2.1
Name: dhf-sdk
Version: 0.0.4
Summary: API wrapper for DHFinance.
Author: Andrew Svetlov
License: MIT
Project-URL: GitHub, https://github.com/DHFinance
Platform: macOS
Platform: POSIX
Platform: Windows
Classifier: License :: OSI Approved :: BSD License
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Operating System :: POSIX
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Environment :: Web Environment
Classifier: Development Status :: 5 - Production/Stable
Requires-Python: >=3.6
Description-Content-Type: text/x-rst
License-File: LICENSE

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=




D

H

F

-

S

D

K




=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=

=







P

y

t

h

o

n

 

S

D

K

 

t

o

 

i

n

t

e

g

r

a

t

e

 

w

i

t

h

 

D

H

F

i

n

a

n

c

e

 

i

n

 

m

i

n

u

t

e

s

.







G

e

t

t

i

n

g

 

S

t

a

r

t

e

d




=

=

=

=

=

=

=

=

=

=

=

=

=

=

=




1

.

 

*

*

S

i

g

n

 

u

p

*

*

 

-

 

B

e

f

o

r

e

 

y

o

u

 

b

e

g

i

n

,

 

y

o

u

 

n

e

e

d

 

t

o

 

s

i

g

n

 

u

p

 

f

o

r

 

y

o

u

r

 

p

a

y

m

e

n

t

 

g

a

t

e

w

a

y

 

a

c

c

o

u

n

t

 

(

h

t

t

p

s

:

/

/

p

a

y

.

d

h

f

i

.

o

n

l

i

n

e

 

a

s

 

e

x

a

m

p

l

e

)

 

a

n

d

 

r

e

t

r

i

e

v

e

 

y

o

u

r

 

s

t

o

r

e

 

A

P

I

 

t

o

k

e

n

 

(

a

d

d

 

S

t

o

r

e

 

-

 

A

P

I

K

e

y

 

G

e

n

e

r

a

t

e

)

 

a

n

d

 

A

P

I

_

U

R

L

 

(

h

t

t

p

s

:

/

/

p

a

y

.

d

h

f

i

.

o

n

l

i

n

e

/

a

p

i

 

a

s

 

e

x

a

m

p

l

e

)

.

 




2

.

 

*

*

R

e

q

u

i

r

e

m

e

n

t

s

*

*

 

â€“

 

T

o

 

r

u

n

 

t

h

e

 

S

D

K

,

 

y

o

u

r

 

s

y

s

t

e

m

 

w

i

l

l

 

n

e

e

d

 

t

o

 

h

a

v

e

 

P

y

t

h

o

n

 

>

=

 

3

.

7

.




3

.

 

*

*

I

n

s

t

a

l

l

*

*







L

o

c

a

l

 

b

u

i

l

d

:







.

.

 

c

o

d

e

-

b

l

o

c

k

:

:







 

 

 

 

p

y

t

h

o

n

 

s

e

t

u

p

.

p

y

 

i

n

s

t

a

l

l

 

-

-

u

s

e

r







F

r

o

m

 

P

y

P

i

:







.

.

 

c

o

d

e

-

b

l

o

c

k

:

:







 

 

 

 

p

i

p

 

i

n

s

t

a

l

l

 

d

h

f

-

s

d

k










U

s

a

g

e




=

=

=

=

=

=

=

=

=

=

=

=

=

=

=




.

.

 

c

o

d

e

-

b

l

o

c

k

:

:







 

 

 

 

f

r

o

m

 

d

h

f

_

w

r

a

p

p

e

r

.

c

l

i

e

n

t

 

i

m

p

o

r

t

 

T

r

a

n

s

a

c

t

i

o

n

C

l

i

e

n

t

,

 

P

a

y

m

e

n

t

C

l

i

e

n

t




 

 

 

 

f

r

o

m

 

d

h

f

_

w

r

a

p

p

e

r

.

e

n

t

i

t

i

e

s

.

t

r

a

n

s

a

c

t

i

o

n

 

i

m

p

o

r

t

 

T

r

a

n

s

a

c

t

i

o

n

P

a

r

a

m

s

D

T

O




 

 

 

 

f

r

o

m

 

d

h

f

_

w

r

a

p

p

e

r

.

e

n

t

i

t

i

e

s

.

p

a

y

m

e

n

t

 

i

m

p

o

r

t

 

P

a

y

m

e

n

t

D

T

O







 

 

 

 

t

r

a

n

s

a

c

t

i

o

n

_

c

l

i

e

n

t

 

=

 

T

r

a

n

s

a

c

t

i

o

n

C

l

i

e

n

t

(

'

h

t

t

p

:

/

/

e

x

a

m

p

l

e

.

c

o

m

'

,

 

t

o

k

e

n

=

'

x

x

x

x

x

'

)







 

 

 

 

#

G

e

t

 

t

r

a

n

s

a

c

t

i

o

n

s

 

l

i

s

t




 

 

 

 

t

r

a

n

s

a

c

t

i

o

n

s

 

=

 

t

r

a

n

s

a

c

t

i

o

n

_

c

l

i

e

n

t

.

g

e

t

_

t

r

a

n

s

a

c

t

i

o

n

s

(




 

 

 

 

 

 

 

 

p

a

r

a

m

s

=

T

r

a

n

s

a

c

t

i

o

n

P

a

r

a

m

s

D

T

O

(

l

i

m

i

t

=

1

)




 

 

 

 

)







 

 

 

 

p

a

y

m

e

n

t

_

c

l

i

e

n

t

 

=

 

P

a

y

m

e

n

t

C

l

i

e

n

t

(

'

h

t

t

p

:

/

/

e

x

a

m

p

l

e

.

c

o

m

'

,

 

t

o

k

e

n

=

'

x

x

x

x

x

'

)







 

 

 

 

#

G

e

t

 

p

a

y

m

e

n

t

s

 

l

i

s

t




 

 

 

 

p

a

y

m

e

n

t

s

 

=

 

p

a

y

m

e

n

t

_

c

l

i

e

n

t

.

g

e

t

_

p

a

y

m

e

n

t

s

(

)







 

 

 

 

#

G

e

t

 

p

a

y

m

e

n

t

s

 

b

y

 

i

d




 

 

 

 

p

a

y

m

e

n

t

 

=

 

p

a

y

m

e

n

t

_

c

l

i

e

n

t

.

g

e

t

_

p

a

y

m

e

n

t

(

p

a

y

m

e

n

t

_

i

d

=

1

)







 

 

 

 

#

A

d

d

 

n

e

w

 

p

a

y

m

e

n

t




 

 

 

 

n

e

w

_

p

a

y

m

e

n

t

 

=

 

p

a

y

m

e

n

t

_

c

l

i

e

n

t

.

c

r

e

a

t

e

_

p

a

y

m

e

n

t

(

p

a

y

m

e

n

t

=

P

a

y

m

e

n

t

D

T

O

(




 

 

 

 

 

 

 

 

a

m

o

u

n

t

=

2

5

0

0

0

0

0

0

0

0

,




 

 

 

 

 

 

 

 

c

o

m

m

e

n

t

=

"

t

e

s

t

"

,




 

 

 

 

)

)







N

o

t

e

:

 

a

m

o

u

n

t

 

s

h

o

u

l

d

 

b

e

 

i

n

 

m

o

t

e

s

,

 

f

o

r

 

e

x

a

m

p

l

e

 

1

 

c

s

p

r

 

=

 

 

1

0

0

0

0

0

0

0

0

0

 

i

n

 

m

o

t

e

s







R

u

n

 

t

e

s

t

s




=

=

=

=

=

=

=

=

=

=

=

=

=

=

=




*

*

T

o

 

r

u

n

 

u

n

i

t

 

t

e

s

t

s

:

*

*







.

.

 

c

o

d

e

-

b

l

o

c

k

:

:







 

 

 

 

n

o

s

e

t

e

s

t

s

 

-

-

v

e

r

b

o

s

i

t

y

=

2

 

t

e

s

t

s

/

u

n

i

t







*

*

T

o

 

r

u

n

 

i

n

t

e

g

r

a

t

i

o

n

 

t

e

s

t

s

 

s

e

t

 

u

p

 

e

n

v

i

r

o

n

m

e

n

t

 

v

a

r

i

a

b

l

e

s

:

*

*







:

:










 

 

 

 

T

O

K

E

N

 

-

 

S

t

o

r

e

 

A

P

I

 

k

e

y

.




 

 

 

 

A

P

I

_

B

A

S

E

_

U

R

L

 

-

 

B

a

s

e

 

U

R

L

.







*

*

A

n

d

 

t

h

e

n

 

c

a

l

l

 

f

o

r

 

t

e

s

t

s

:

*

*







.

.

 

c

o

d

e

-

b

l

o

c

k

:

:







 

 

 

 

n

o

s

e

t

e

s

t

s

 

-

-

v

e

r

b

o

s

i

t

y

=

2

 

t

e

s

t

s

/

i

n

t

e

g

r

a

t

i

o

n

