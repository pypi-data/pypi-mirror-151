"use strict";(self.webpackChunk_agoose77_jupyterlab_markup_expr=self.webpackChunk_agoose77_jupyterlab_markup_expr||[]).push([[37],{37:(e,t,r)=>{function n(e,t){var r,n;const s=null!==(r=null==t?void 0:t.openDelim)&&void 0!==r?r:"{{",l=null!==(n=null==t?void 0:t.closeDelim)&&void 0!==n?n:"}}";e.inline.ruler.after("emphasis","expr",(function(e,t){let r=e.pos;if(e.src[r]!==s[0])return!1;if(e.src.slice(r,r+s.length)!==s)return!1;r+=s.length;const n=r;let i=-1;for(;-1===i;){if(r=e.src.indexOf(l[0],r),-1===r)return!1;e.src.slice(r,r+l.length)===l?(i=r,r+=l.length):r++}const a=e.src.slice(n,i);e.pos=r;const o=e.push("expr","input",0);return o.attrSet("type","hidden"),o.attrSet("class","eval-expr"),o.attrSet("value",a),!0}))}r.r(t),r.d(t,{default:()=>s});const s=(0,r(626).simpleMarkdownItPlugin)("@agoose77/jupyterlab-markup-expr",{id:"markdown-it-expr",title:"Create spans with stored expressions from Markdown",description:"Embed Markdown text in a data attribute in rendered spans",documentationUrls:{},plugin:async()=>[n]})}}]);