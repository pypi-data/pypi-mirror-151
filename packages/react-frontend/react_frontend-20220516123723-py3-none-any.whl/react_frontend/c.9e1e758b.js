import{s as t}from"./c.85c615ca.js";import{g as e}from"./c.40d6516d.js";import{g as s}from"./c.027db416.js";import{b3 as o,b4 as r,b5 as n}from"./c.3e14cfd3.js";import{e as a,s as i,d as u,c as _}from"./c.d4761680.js";import{eu as c}from"./main-ac83c92b.js";function f(){return a(Date.now())}function m(){return i(Date.now())}const g=[],y=t=>t.callWS({type:"energy/info"}),d=t=>((t,e)=>{const s={};for(const o of t){const t=e(o);t in s?s[t].push(o):s[t]=[o]}return s})(t.energy_sources,(t=>t.type)),l=(a,i={})=>{let d="_energy";if(i.key){if(!i.key.startsWith("energy_"))throw new Error("Key need to start with energy_");d=`_${i.key}`}if(a.connection[d])return a.connection[d];g.push(i.key);const l=c(a.connection,d,(async()=>{if(l.prefs||(l.prefs=await(t=>t.callWS({type:"energy/get_prefs"}))(a)),l._refreshTimeout&&clearTimeout(l._refreshTimeout),l._active&&(!l.end||l.end>new Date)){const t=new Date;t.getMinutes()>=20&&t.setHours(t.getHours()+1),t.setMinutes(20,0,0),l._refreshTimeout=window.setTimeout((()=>l.refresh()),t.getTime()-Date.now())}return(async(o,a,i,c)=>{const[f,m,g]=await Promise.all([e(o,{domain:"co2signal"}),t(o.connection,s),y(o)]),d=f.length?f[0]:void 0;let l;if(d)for(const t of m){if(t.config_entry_id!==d.entry_id)continue;const e=o.states[t.entity_id];if(e&&"%"===e.attributes.unit_of_measurement){l=e.entity_id;break}}const p=[],h=[],w=a.energy_sources.filter((t=>"gas"===t.type)),T=await r(o,w.map((t=>t.stat_energy_from)));for(const t of a.energy_sources)if("solar"!==t.type)if("gas"!==t.type)if("battery"!==t.type){for(const e of t.flow_from){p.push(e.stat_energy_from),h.push(e.stat_energy_from),e.stat_cost&&h.push(e.stat_cost);const t=g.cost_sensors[e.stat_energy_from];t&&h.push(t)}for(const e of t.flow_to){h.push(e.stat_energy_to),e.stat_compensation&&h.push(e.stat_compensation);const t=g.cost_sensors[e.stat_energy_to];t&&h.push(t)}}else h.push(t.stat_energy_from),h.push(t.stat_energy_to);else{if(h.push(t.stat_energy_from),!o.states[t.stat_energy_from])for(const e of T)(null==e?void 0:e.statistic_id)===t.stat_energy_from&&null!=e&&e.unit_of_measurement&&(t.unit_of_measurement="Wh"===(null==e?void 0:e.unit_of_measurement)?"kWh":null==e?void 0:e.unit_of_measurement);t.stat_cost&&h.push(t.stat_cost);const e=g.cost_sensors[t.stat_energy_from];e&&h.push(e)}else h.push(t.stat_energy_from);const v=u(c||new Date,i),b=_(i,-1),S=await n(o,b,c,h,v>35?"month":v>2?"day":"hour");let D;return void 0!==l&&(D=await(async(t,e,s,o,r,n="hour")=>t.callWS({type:"energy/fossil_energy_consumption",start_time:e.toISOString(),end_time:null==r?void 0:r.toISOString(),energy_statistic_ids:s,co2_statistic_id:o,period:n}))(o,i,p,l,c,v>35?"month":v>2?"day":"hour")),Object.values(S).forEach((t=>{t.length&&new Date(t[0].start)>b&&t.unshift({...t[0],start:b.toISOString(),end:b.toISOString(),sum:0,state:0})})),{start:i,end:c,info:g,prefs:a,stats:S,co2SignalConfigEntry:d,co2SignalEntity:l,fossilEnergyConsumption:D}})(a,l.prefs,l.start,l.end)})),p=l.subscribe;l.subscribe=t=>{const e=p(t);return l._active++,()=>{l._active--,l._active<1&&(clearTimeout(l._refreshTimeout),l._refreshTimeout=void 0),e()}},l._active=0,l.prefs=i.prefs;const h=new Date;l.start=h.getHours()>0?m():o(),l.end=h.getHours()>0?f():function(){var t=new Date,e=t.getFullYear(),s=t.getMonth(),o=t.getDate(),r=new Date(0);return r.setFullYear(e,s,o-1),r.setHours(23,59,59,999),r}();const w=()=>{l._updatePeriodTimeout=window.setTimeout((()=>{l.start=m(),l.end=f(),w()}),_(f(),1).getTime()-Date.now())};return w(),l.clearPrefs=()=>{l.prefs=void 0},l.setPeriod=(t,e)=>{var s;l.start=t,l.end=e,l.start.getTime()!==m().getTime()||(null===(s=l.end)||void 0===s?void 0:s.getTime())!==f().getTime()||l._updatePeriodTimeout?l._updatePeriodTimeout&&(clearTimeout(l._updatePeriodTimeout),l._updatePeriodTimeout=void 0):w()},l},p=t=>t.callWS({type:"energy/solar_forecast"}),h=(t,e)=>{for(const s of e.energy_sources){if("gas"!==s.type)continue;const e=t.states[s.stat_energy_from];if(null!=e&&e.attributes.unit_of_measurement)return"Wh"===e.attributes.unit_of_measurement?"kWh":e.attributes.unit_of_measurement;if(s.unit_of_measurement)return s.unit_of_measurement}};export{f as a,h as b,p as c,d as e,l as g,m as s};
