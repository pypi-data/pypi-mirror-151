import{_ as e,s as a,e as i,t,m as s,$ as r,f as o,n}from"./main-ac83c92b.js";import"./c.1fca9ca6.js";import{X as l,Y as c,Z as d,_ as m,a7 as u,$ as h,a0 as v}from"./c.3e14cfd3.js";import{b as g}from"./c.461e571b.js";import"./c.4e93087d.js";import"./c.8eddd911.js";import"./c.027db416.js";import"./c.c8193d47.js";import"./c.47fa9be3.js";import"./c.e9aa747b.js";import"./c.8e198788.js";import"./c.25e73c3c.js";import"./c.5ea5eadd.js";import"./c.8cbd7110.js";const p=l(g,c({name:d(m()),entity:d(m()),unit:d(m()),min:d(u()),max:d(u()),severity:d(c()),theme:d(m()),needle:d(h())}));let y=e([n("hui-gauge-card-editor")],(function(e,a){return{F:class extends a{constructor(...a){super(...a),e(this)}},d:[{kind:"field",decorators:[i({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[t()],key:"_config",value:void 0},{kind:"method",key:"setConfig",value:function(e){v(e,p),this._config=e}},{kind:"field",key:"_schema",value:()=>s((e=>{const a=[{name:"entity",selector:{entity:{domain:["counter","input_number","number","sensor"]}}},{name:"",type:"grid",schema:[{name:"name",selector:{text:{}}},{name:"unit",selector:{text:{}}}]},{name:"theme",selector:{theme:{}}},{name:"",type:"grid",schema:[{name:"min",selector:{number:{min:1,mode:"box"}}},{name:"max",selector:{number:{min:1,mode:"box"}}}]},{name:"",type:"grid",schema:[{name:"needle",selector:{boolean:{}}},{name:"show_severity",selector:{boolean:{}}}]}];return e&&a.push({name:"",type:"grid",schema:[{name:"green",selector:{number:{min:0,mode:"box"}}},{name:"yellow",selector:{number:{min:0,mode:"box"}}},{name:"red",selector:{number:{min:0,mode:"box"}}}]}),a}))},{kind:"method",key:"render",value:function(){if(!this.hass||!this._config)return r``;const e=this._schema(void 0!==this._config.severity),a={show_severity:void 0!==this._config.severity,...this._config};return r`
      <ha-form
        .hass=${this.hass}
        .data=${a}
        .schema=${e}
        .computeLabel=${this._computeLabelCallback}
        @value-changed=${this._valueChanged}
      ></ha-form>
    `}},{kind:"method",key:"_valueChanged",value:function(e){let a=e.detail.value;var i,t,s;a.show_severity?a={...a,severity:{green:a.green||(null===(i=a.severity)||void 0===i?void 0:i.green)||0,yellow:a.yellow||(null===(t=a.severity)||void 0===t?void 0:t.yellow)||0,red:a.red||(null===(s=a.severity)||void 0===s?void 0:s.red)||0}}:!a.show_severity&&a.severity&&delete a.severity;delete a.show_severity,delete a.green,delete a.yellow,delete a.red,o(this,"config-changed",{config:a})}},{kind:"field",key:"_computeLabelCallback",value(){return e=>{switch(e.name){case"name":return this.hass.localize("ui.panel.lovelace.editor.card.generic.name");case"entity":return`${this.hass.localize("ui.panel.lovelace.editor.card.generic.entity")} (${this.hass.localize("ui.panel.lovelace.editor.card.config.required")})`;case"max":return this.hass.localize("ui.panel.lovelace.editor.card.generic.maximum");case"min":return this.hass.localize("ui.panel.lovelace.editor.card.generic.minimum");case"show_severity":return this.hass.localize("ui.panel.lovelace.editor.card.gauge.severity.define");case"needle":return this.hass.localize("ui.panel.lovelace.editor.card.gauge.needle_gauge");case"theme":return`${this.hass.localize("ui.panel.lovelace.editor.card.generic.theme")} (${this.hass.localize("ui.panel.lovelace.editor.card.config.optional")})`}return this.hass.localize(`ui.panel.lovelace.editor.card.gauge.${e.name}`)||this.hass.localize(`ui.panel.lovelace.editor.card.generic.${e.name}`)||this.hass.localize(`ui.panel.lovelace.editor.card.gauge.severity.${e.name}`)}}}]}}),a);export{y as HuiGaugeCardEditor};
