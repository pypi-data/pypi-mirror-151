# autogenerated
# mypy: ignore-errors
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/test_run_results/test_run_results.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rime_sdk.protos.google.api import annotations_pb2 as protos_dot_google_dot_api_dot_annotations__pb2
from rime_sdk.protos.results_upload import results_upload_pb2 as protos_dot_results__upload_dot_results__upload__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.protos/test_run_results/test_run_results.proto\x12\x04rime\x1a#protos/google/api/annotations.proto\x1a*protos/results_upload/results_upload.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xdb\x0b\n\x07TestRun\x12(\n\x08metadata\x18\x01 \x01(\x0b\x32\x16.rime.TestRun.Metadata\x12\x36\n\x10\x64\x61ta_source_info\x18\x02 \x01(\x0b\x32\x1c.rime.TestRun.DataSourceInfo\x12:\n\x11model_source_info\x18\x03 \x01(\x0b\x32\x1d.rime.TestRun.ModelSourceInfoH\x00\x12&\n\x07metrics\x18\x04 \x01(\x0b\x32\x15.rime.TestRun.Metrics\x1a\x80\x02\n\x08Metadata\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06job_id\x18\x03 \x01(\t\x12\x12\n\nproject_id\x18\x04 \x01(\t\x12$\n\x0ctesting_type\x18\x05 \x01(\x0e\x32\x0e.rime.TestType\x12!\n\tdata_type\x18\x06 \x01(\x0e\x32\x0e.rime.DataType\x12%\n\nmodel_task\x18\x07 \x01(\x0e\x32\x0f.rime.ModelTaskH\x00\x12/\n\x0bupload_time\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x15\n\x13optional_model_task\x1a\xb7\x01\n\x0e\x44\x61taSourceInfo\x12\x34\n\x03ref\x18\x01 \x01(\x0b\x32\'.rime.TestRun.DataSourceInfo.DataSource\x12\x35\n\x04\x65val\x18\x02 \x01(\x0b\x32\'.rime.TestRun.DataSourceInfo.DataSource\x1a\x38\n\nDataSource\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x66\x65\x61tures\x18\x03 \x03(\t\x1a+\n\x0fModelSourceInfo\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x1a\x81\x06\n\x07Metrics\x12\x38\n\nmodel_perf\x18\x01 \x03(\x0b\x32$.rime.TestRun.Metrics.ModelPerfEntry\x12\x1c\n\x12\x61verage_prediction\x18\x02 \x01(\x01H\x00\x12\x12\n\nnum_inputs\x18\x03 \x01(\x03\x12\x1a\n\x12num_failing_inputs\x18\x04 \x01(\x03\x12\x17\n\x0f\x64uration_millis\x18\x05 \x01(\x01\x12=\n\x0fseverity_counts\x18\x06 \x01(\x0b\x32$.rime.TestRun.Metrics.SeverityCounts\x12;\n\x0esummary_counts\x18\x07 \x01(\x0b\x32#.rime.TestRun.Metrics.SummaryCounts\x12\x18\n\x10robustness_score\x18\x08 \x01(\x01\x1a\xa0\x01\n\x0fModelPerfMetric\x12\x14\n\nref_metric\x18\x01 \x01(\x01H\x00\x12\x15\n\x0b\x65val_metric\x18\x02 \x01(\x01H\x01\x12\x17\n\x0fsubset_severity\x18\x03 \x01(\t\x12\x18\n\x10subset_pass_rate\x18\x04 \x01(\tB\x15\n\x13optional_ref_metricB\x16\n\x14optional_eval_metric\x1aI\n\x0eSeverityCounts\x12\x0c\n\x04none\x18\x01 \x01(\x03\x12\x0b\n\x03low\x18\x02 \x01(\x03\x12\x0e\n\x06medium\x18\x03 \x01(\x03\x12\x0c\n\x04high\x18\x04 \x01(\x03\x1aY\n\rSummaryCounts\x12\r\n\x05total\x18\x01 \x01(\x03\x12\x0c\n\x04pass\x18\x02 \x01(\x03\x12\x0f\n\x07warning\x18\x03 \x01(\x03\x12\x0c\n\x04\x66\x61il\x18\x04 \x01(\x03\x12\x0c\n\x04skip\x18\x05 \x01(\x03\x1aW\n\x0eModelPerfEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x34\n\x05value\x18\x02 \x01(\x0b\x32%.rime.TestRun.Metrics.ModelPerfMetric:\x02\x38\x01\x42\x1d\n\x1boptional_average_predictionB\x1c\n\x1aoptional_model_source_info\"\x92\x01\n\x0fTestRunReadMask\x12;\n\rmetadata_mask\x18\x01 \x01(\x0b\x32\".rime.TestRunReadMask.MetadataMaskH\x00\x1a(\n\x0cMetadataMask\x12\n\n\x02id\x18\x01 \x01(\x08\x12\x0c\n\x04name\x18\x02 \x01(\x08\x42\x18\n\x16optional_metadata_mask\"r\n\x10TestRunWriteMask\x12:\n\rmetadata_mask\x18\x01 \x01(\x0b\x32#.rime.TestRunWriteMask.MetadataMask\x1a\"\n\x0cMetadataMask\x12\x0c\n\x04name\x18\x02 \x01(\x08J\x04\x08\x01\x10\x02\"M\n\x11GetTestRunRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12#\n\x04mask\x18\x02 \x01(\x0b\x32\x15.rime.TestRunReadMask\"5\n\x12GetTestRunResponse\x12\x1f\n\x08test_run\x18\x01 \x01(\x0b\x32\r.rime.TestRun\"]\n\x14UpdateTestRunRequest\x12\x1f\n\x08test_run\x18\x01 \x01(\x0b\x32\r.rime.TestRun\x12$\n\x04mask\x18\x02 \x01(\x0b\x32\x16.rime.TestRunWriteMask\"\x17\n\x15UpdateTestRunResponse\"+\n\x14\x44\x65leteTestRunRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\"\x17\n\x15\x44\x65leteTestRunResponse\"Y\n\x1cListTestRunsByProjectRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x12\n\npage_token\x18\x02 \x01(\t\x12\x11\n\tpage_size\x18\x03 \x01(\x03\"Z\n\x1dListTestRunsByProjectResponse\x12 \n\ttest_runs\x18\x01 \x03(\x0b\x32\r.rime.TestRun\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"f\n\x13MoveTestRunsRequest\x12\x19\n\x11source_project_id\x18\x01 \x01(\t\x12\x1e\n\x16\x64\x65stination_project_id\x18\x02 \x01(\t\x12\x14\n\x0ctest_run_ids\x18\x03 \x03(\t\"\x16\n\x14MoveTestRunsResponse\"]\n\tTestBatch\x12*\n\x08metadata\x18\x01 \x01(\x0b\x32\x18.rime.TestBatch.Metadata\x1a$\n\x08Metadata\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\"\x96\x01\n\x11TestBatchReadMask\x12=\n\rmetadata_mask\x18\x01 \x01(\x0b\x32$.rime.TestBatchReadMask.MetadataMaskH\x00\x1a(\n\x0cMetadataMask\x12\n\n\x02id\x18\x01 \x01(\x08\x12\x0c\n\x04type\x18\x02 \x01(\x08\x42\x18\n\x16optional_metadata_mask\"\x1a\n\x12TestBatchWriteMaskJ\x04\x08\x01\x10\x02\"h\n\x13GetTestBatchRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x15\n\rtest_batch_id\x18\x02 \x01(\t\x12%\n\x04mask\x18\x03 \x01(\x0b\x32\x17.rime.TestBatchReadMask\"6\n\x14GetTestBatchResponse\x12\x1e\n\x05\x62\x61tch\x18\x01 \x01(\x0b\x32\x0f.rime.TestBatch\"u\n\x16UpdateTestBatchRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x1e\n\x05\x62\x61tch\x18\x02 \x01(\x0b\x32\x0f.rime.TestBatch\x12&\n\x04mask\x18\x03 \x01(\x0b\x32\x18.rime.TestBatchWriteMask\"\x19\n\x17UpdateTestBatchResponse\"T\n\x16ListTestBatchesRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12%\n\x04mask\x18\x02 \x01(\x0b\x32\x17.rime.TestBatchReadMask\">\n\x17ListTestBatchesResponse\x12#\n\ntest_batch\x18\x01 \x01(\x0b\x32\x0f.rime.TestBatch\"\xb0\x01\n\x08TestCase\x12\x13\n\x0btest_run_id\x18\x02 \x01(\t\x12\x10\n\x08\x66\x65\x61tures\x18\x03 \x03(\t\x12\x17\n\x0ftest_batch_type\x18\x04 \x01(\t\x12$\n\x06status\x18\x05 \x01(\x0e\x32\x14.rime.TestCaseStatus\x12$\n\x08severity\x18\x06 \x01(\x0e\x32\x12.rime.TestSeverity\x12\x18\n\x10importance_score\x18\x07 \x01(\x01\"7\n\x11TestCaseWriteMaskJ\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05J\x04\x08\x05\x10\x06J\x04\x08\x06\x10\x07J\x04\x08\x07\x10\x08\"?\n\x12GetTestCaseRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x14\n\x0ctest_case_id\x18\x02 \x01(\t\"8\n\x13GetTestCaseResponse\x12!\n\ttest_case\x18\x01 \x01(\x0b\x32\x0e.rime.TestCase\"\x8d\x01\n\x15UpdateTestCaseRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x15\n\rtest_batch_id\x18\x02 \x01(\t\x12!\n\ttest_case\x18\x03 \x01(\x0b\x32\x0e.rime.TestCase\x12%\n\x04mask\x18\x04 \x01(\x0b\x32\x17.rime.TestCaseWriteMask\"\x18\n\x16UpdateTestCaseResponse\"R\n\x14ListTestCasesRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x12\n\npage_token\x18\x02 \x01(\t\x12\x11\n\tpage_size\x18\x03 \x01(\x03\"T\n\x15ListTestCasesResponse\x12\"\n\ntest_cases\x18\x01 \x03(\x0b\x32\x0e.rime.TestCase\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"e\n\rFeatureResult\x12.\n\x08metadata\x18\x01 \x01(\x0b\x32\x1c.rime.FeatureResult.Metadata\x1a$\n\x08Metadata\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"\x9e\x01\n\x15\x46\x65\x61tureResultReadMask\x12\x41\n\rmetadata_mask\x18\x01 \x01(\x0b\x32(.rime.FeatureResultReadMask.MetadataMaskH\x00\x1a(\n\x0cMetadataMask\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\tB\x18\n\x16optional_metadata_mask\"\x1e\n\x16\x46\x65\x61tureResultWriteMaskJ\x04\x08\x01\x10\x02\"\x83\x01\n\x1aUpdateFeatureResultRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12$\n\x07\x66\x65\x61ture\x18\x02 \x01(\x0b\x32\x13.rime.FeatureResult\x12*\n\x04mask\x18\x03 \x01(\x0b\x32\x1c.rime.FeatureResultWriteMask\"\x1d\n\x1bUpdateFeatureResultResponse\"m\n\x17GetFeatureResultRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12\x12\n\nfeature_id\x18\x02 \x01(\t\x12)\n\x04mask\x18\x03 \x01(\x0b\x32\x1b.rime.FeatureResultReadMask\"@\n\x18GetFeatureResultResponse\x12$\n\x07\x66\x65\x61ture\x18\x01 \x01(\x0b\x32\x13.rime.FeatureResult\"[\n\x19ListFeatureResultsRequest\x12\x13\n\x0btest_run_id\x18\x01 \x01(\t\x12)\n\x04mask\x18\x02 \x01(\x0b\x32\x1b.rime.FeatureResultReadMask\"B\n\x1aListFeatureResultsResponse\x12$\n\x07\x66\x65\x61ture\x18\x01 \x01(\x0b\x32\x13.rime.FeatureResult2\x9c\x06\n\rResultsReader\x12\x64\n\nGetTestRun\x12\x17.rime.GetTestRunRequest\x1a\x18.rime.GetTestRunResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/test-runs/{test_run_id}\x12`\n\x15ListTestRunsByProject\x12\".rime.ListTestRunsByProjectRequest\x1a#.rime.ListTestRunsByProjectResponse\x12\x45\n\x0cGetTestBatch\x12\x19.rime.GetTestBatchRequest\x1a\x1a.rime.GetTestBatchResponse\x12P\n\x0fListTestBatches\x12\x1c.rime.ListTestBatchesRequest\x1a\x1d.rime.ListTestBatchesResponse0\x01\x12\x81\x01\n\x0bGetTestCase\x12\x18.rime.GetTestCaseRequest\x1a\x19.rime.GetTestCaseResponse\"=\x82\xd3\xe4\x93\x02\x37\x12\x35/v1/test-runs/{test_run_id}/test-cases/{test_case_id}\x12x\n\rListTestCases\x12\x1a.rime.ListTestCasesRequest\x1a\x1b.rime.ListTestCasesResponse\".\x82\xd3\xe4\x93\x02(\x12&/v1/test-runs/{test_run_id}/test-cases\x12Q\n\x10GetFeatureResult\x12\x1d.rime.GetFeatureResultRequest\x1a\x1e.rime.GetFeatureResultResponse\x12Y\n\x12ListFeatureResults\x12\x1f.rime.ListFeatureResultsRequest\x1a .rime.ListFeatureResultsResponse0\x01\x32\xe3\x03\n\rResultsWriter\x12H\n\rUpdateTestRun\x12\x1a.rime.UpdateTestRunRequest\x1a\x1b.rime.UpdateTestRunResponse\x12H\n\rDeleteTestRun\x12\x1a.rime.DeleteTestRunRequest\x1a\x1b.rime.DeleteTestRunResponse\x12\x45\n\x0cMoveTestRuns\x12\x19.rime.MoveTestRunsRequest\x1a\x1a.rime.MoveTestRunsResponse\x12N\n\x0fUpdateTestBatch\x12\x1c.rime.UpdateTestBatchRequest\x1a\x1d.rime.UpdateTestBatchResponse\x12K\n\x0eUpdateTestCase\x12\x1b.rime.UpdateTestCaseRequest\x1a\x1c.rime.UpdateTestCaseResponse\x12Z\n\x13UpdateFeatureResult\x12 .rime.UpdateFeatureResultRequest\x1a!.rime.UpdateFeatureResultResponseB\x1fZ\x1dri/_gen/protos/testrunresultsb\x06proto3')



_TESTRUN = DESCRIPTOR.message_types_by_name['TestRun']
_TESTRUN_METADATA = _TESTRUN.nested_types_by_name['Metadata']
_TESTRUN_DATASOURCEINFO = _TESTRUN.nested_types_by_name['DataSourceInfo']
_TESTRUN_DATASOURCEINFO_DATASOURCE = _TESTRUN_DATASOURCEINFO.nested_types_by_name['DataSource']
_TESTRUN_MODELSOURCEINFO = _TESTRUN.nested_types_by_name['ModelSourceInfo']
_TESTRUN_METRICS = _TESTRUN.nested_types_by_name['Metrics']
_TESTRUN_METRICS_MODELPERFMETRIC = _TESTRUN_METRICS.nested_types_by_name['ModelPerfMetric']
_TESTRUN_METRICS_SEVERITYCOUNTS = _TESTRUN_METRICS.nested_types_by_name['SeverityCounts']
_TESTRUN_METRICS_SUMMARYCOUNTS = _TESTRUN_METRICS.nested_types_by_name['SummaryCounts']
_TESTRUN_METRICS_MODELPERFENTRY = _TESTRUN_METRICS.nested_types_by_name['ModelPerfEntry']
_TESTRUNREADMASK = DESCRIPTOR.message_types_by_name['TestRunReadMask']
_TESTRUNREADMASK_METADATAMASK = _TESTRUNREADMASK.nested_types_by_name['MetadataMask']
_TESTRUNWRITEMASK = DESCRIPTOR.message_types_by_name['TestRunWriteMask']
_TESTRUNWRITEMASK_METADATAMASK = _TESTRUNWRITEMASK.nested_types_by_name['MetadataMask']
_GETTESTRUNREQUEST = DESCRIPTOR.message_types_by_name['GetTestRunRequest']
_GETTESTRUNRESPONSE = DESCRIPTOR.message_types_by_name['GetTestRunResponse']
_UPDATETESTRUNREQUEST = DESCRIPTOR.message_types_by_name['UpdateTestRunRequest']
_UPDATETESTRUNRESPONSE = DESCRIPTOR.message_types_by_name['UpdateTestRunResponse']
_DELETETESTRUNREQUEST = DESCRIPTOR.message_types_by_name['DeleteTestRunRequest']
_DELETETESTRUNRESPONSE = DESCRIPTOR.message_types_by_name['DeleteTestRunResponse']
_LISTTESTRUNSBYPROJECTREQUEST = DESCRIPTOR.message_types_by_name['ListTestRunsByProjectRequest']
_LISTTESTRUNSBYPROJECTRESPONSE = DESCRIPTOR.message_types_by_name['ListTestRunsByProjectResponse']
_MOVETESTRUNSREQUEST = DESCRIPTOR.message_types_by_name['MoveTestRunsRequest']
_MOVETESTRUNSRESPONSE = DESCRIPTOR.message_types_by_name['MoveTestRunsResponse']
_TESTBATCH = DESCRIPTOR.message_types_by_name['TestBatch']
_TESTBATCH_METADATA = _TESTBATCH.nested_types_by_name['Metadata']
_TESTBATCHREADMASK = DESCRIPTOR.message_types_by_name['TestBatchReadMask']
_TESTBATCHREADMASK_METADATAMASK = _TESTBATCHREADMASK.nested_types_by_name['MetadataMask']
_TESTBATCHWRITEMASK = DESCRIPTOR.message_types_by_name['TestBatchWriteMask']
_GETTESTBATCHREQUEST = DESCRIPTOR.message_types_by_name['GetTestBatchRequest']
_GETTESTBATCHRESPONSE = DESCRIPTOR.message_types_by_name['GetTestBatchResponse']
_UPDATETESTBATCHREQUEST = DESCRIPTOR.message_types_by_name['UpdateTestBatchRequest']
_UPDATETESTBATCHRESPONSE = DESCRIPTOR.message_types_by_name['UpdateTestBatchResponse']
_LISTTESTBATCHESREQUEST = DESCRIPTOR.message_types_by_name['ListTestBatchesRequest']
_LISTTESTBATCHESRESPONSE = DESCRIPTOR.message_types_by_name['ListTestBatchesResponse']
_TESTCASE = DESCRIPTOR.message_types_by_name['TestCase']
_TESTCASEWRITEMASK = DESCRIPTOR.message_types_by_name['TestCaseWriteMask']
_GETTESTCASEREQUEST = DESCRIPTOR.message_types_by_name['GetTestCaseRequest']
_GETTESTCASERESPONSE = DESCRIPTOR.message_types_by_name['GetTestCaseResponse']
_UPDATETESTCASEREQUEST = DESCRIPTOR.message_types_by_name['UpdateTestCaseRequest']
_UPDATETESTCASERESPONSE = DESCRIPTOR.message_types_by_name['UpdateTestCaseResponse']
_LISTTESTCASESREQUEST = DESCRIPTOR.message_types_by_name['ListTestCasesRequest']
_LISTTESTCASESRESPONSE = DESCRIPTOR.message_types_by_name['ListTestCasesResponse']
_FEATURERESULT = DESCRIPTOR.message_types_by_name['FeatureResult']
_FEATURERESULT_METADATA = _FEATURERESULT.nested_types_by_name['Metadata']
_FEATURERESULTREADMASK = DESCRIPTOR.message_types_by_name['FeatureResultReadMask']
_FEATURERESULTREADMASK_METADATAMASK = _FEATURERESULTREADMASK.nested_types_by_name['MetadataMask']
_FEATURERESULTWRITEMASK = DESCRIPTOR.message_types_by_name['FeatureResultWriteMask']
_UPDATEFEATURERESULTREQUEST = DESCRIPTOR.message_types_by_name['UpdateFeatureResultRequest']
_UPDATEFEATURERESULTRESPONSE = DESCRIPTOR.message_types_by_name['UpdateFeatureResultResponse']
_GETFEATURERESULTREQUEST = DESCRIPTOR.message_types_by_name['GetFeatureResultRequest']
_GETFEATURERESULTRESPONSE = DESCRIPTOR.message_types_by_name['GetFeatureResultResponse']
_LISTFEATURERESULTSREQUEST = DESCRIPTOR.message_types_by_name['ListFeatureResultsRequest']
_LISTFEATURERESULTSRESPONSE = DESCRIPTOR.message_types_by_name['ListFeatureResultsResponse']
TestRun = _reflection.GeneratedProtocolMessageType('TestRun', (_message.Message,), {

  'Metadata' : _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), {
    'DESCRIPTOR' : _TESTRUN_METADATA,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRun.Metadata)
    })
  ,

  'DataSourceInfo' : _reflection.GeneratedProtocolMessageType('DataSourceInfo', (_message.Message,), {

    'DataSource' : _reflection.GeneratedProtocolMessageType('DataSource', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_DATASOURCEINFO_DATASOURCE,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:rime.TestRun.DataSourceInfo.DataSource)
      })
    ,
    'DESCRIPTOR' : _TESTRUN_DATASOURCEINFO,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRun.DataSourceInfo)
    })
  ,

  'ModelSourceInfo' : _reflection.GeneratedProtocolMessageType('ModelSourceInfo', (_message.Message,), {
    'DESCRIPTOR' : _TESTRUN_MODELSOURCEINFO,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRun.ModelSourceInfo)
    })
  ,

  'Metrics' : _reflection.GeneratedProtocolMessageType('Metrics', (_message.Message,), {

    'ModelPerfMetric' : _reflection.GeneratedProtocolMessageType('ModelPerfMetric', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_METRICS_MODELPERFMETRIC,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:rime.TestRun.Metrics.ModelPerfMetric)
      })
    ,

    'SeverityCounts' : _reflection.GeneratedProtocolMessageType('SeverityCounts', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_METRICS_SEVERITYCOUNTS,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:rime.TestRun.Metrics.SeverityCounts)
      })
    ,

    'SummaryCounts' : _reflection.GeneratedProtocolMessageType('SummaryCounts', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_METRICS_SUMMARYCOUNTS,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:rime.TestRun.Metrics.SummaryCounts)
      })
    ,

    'ModelPerfEntry' : _reflection.GeneratedProtocolMessageType('ModelPerfEntry', (_message.Message,), {
      'DESCRIPTOR' : _TESTRUN_METRICS_MODELPERFENTRY,
      '__module__' : 'protos.test_run_results.test_run_results_pb2'
      # @@protoc_insertion_point(class_scope:rime.TestRun.Metrics.ModelPerfEntry)
      })
    ,
    'DESCRIPTOR' : _TESTRUN_METRICS,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRun.Metrics)
    })
  ,
  'DESCRIPTOR' : _TESTRUN,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestRun)
  })
_sym_db.RegisterMessage(TestRun)
_sym_db.RegisterMessage(TestRun.Metadata)
_sym_db.RegisterMessage(TestRun.DataSourceInfo)
_sym_db.RegisterMessage(TestRun.DataSourceInfo.DataSource)
_sym_db.RegisterMessage(TestRun.ModelSourceInfo)
_sym_db.RegisterMessage(TestRun.Metrics)
_sym_db.RegisterMessage(TestRun.Metrics.ModelPerfMetric)
_sym_db.RegisterMessage(TestRun.Metrics.SeverityCounts)
_sym_db.RegisterMessage(TestRun.Metrics.SummaryCounts)
_sym_db.RegisterMessage(TestRun.Metrics.ModelPerfEntry)

TestRunReadMask = _reflection.GeneratedProtocolMessageType('TestRunReadMask', (_message.Message,), {

  'MetadataMask' : _reflection.GeneratedProtocolMessageType('MetadataMask', (_message.Message,), {
    'DESCRIPTOR' : _TESTRUNREADMASK_METADATAMASK,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRunReadMask.MetadataMask)
    })
  ,
  'DESCRIPTOR' : _TESTRUNREADMASK,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestRunReadMask)
  })
_sym_db.RegisterMessage(TestRunReadMask)
_sym_db.RegisterMessage(TestRunReadMask.MetadataMask)

TestRunWriteMask = _reflection.GeneratedProtocolMessageType('TestRunWriteMask', (_message.Message,), {

  'MetadataMask' : _reflection.GeneratedProtocolMessageType('MetadataMask', (_message.Message,), {
    'DESCRIPTOR' : _TESTRUNWRITEMASK_METADATAMASK,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestRunWriteMask.MetadataMask)
    })
  ,
  'DESCRIPTOR' : _TESTRUNWRITEMASK,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestRunWriteMask)
  })
_sym_db.RegisterMessage(TestRunWriteMask)
_sym_db.RegisterMessage(TestRunWriteMask.MetadataMask)

GetTestRunRequest = _reflection.GeneratedProtocolMessageType('GetTestRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTRUNREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetTestRunRequest)
  })
_sym_db.RegisterMessage(GetTestRunRequest)

GetTestRunResponse = _reflection.GeneratedProtocolMessageType('GetTestRunResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTRUNRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetTestRunResponse)
  })
_sym_db.RegisterMessage(GetTestRunResponse)

UpdateTestRunRequest = _reflection.GeneratedProtocolMessageType('UpdateTestRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTRUNREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.UpdateTestRunRequest)
  })
_sym_db.RegisterMessage(UpdateTestRunRequest)

UpdateTestRunResponse = _reflection.GeneratedProtocolMessageType('UpdateTestRunResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTRUNRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.UpdateTestRunResponse)
  })
_sym_db.RegisterMessage(UpdateTestRunResponse)

DeleteTestRunRequest = _reflection.GeneratedProtocolMessageType('DeleteTestRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETETESTRUNREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.DeleteTestRunRequest)
  })
_sym_db.RegisterMessage(DeleteTestRunRequest)

DeleteTestRunResponse = _reflection.GeneratedProtocolMessageType('DeleteTestRunResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETETESTRUNRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.DeleteTestRunResponse)
  })
_sym_db.RegisterMessage(DeleteTestRunResponse)

ListTestRunsByProjectRequest = _reflection.GeneratedProtocolMessageType('ListTestRunsByProjectRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTRUNSBYPROJECTREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListTestRunsByProjectRequest)
  })
_sym_db.RegisterMessage(ListTestRunsByProjectRequest)

ListTestRunsByProjectResponse = _reflection.GeneratedProtocolMessageType('ListTestRunsByProjectResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTRUNSBYPROJECTRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListTestRunsByProjectResponse)
  })
_sym_db.RegisterMessage(ListTestRunsByProjectResponse)

MoveTestRunsRequest = _reflection.GeneratedProtocolMessageType('MoveTestRunsRequest', (_message.Message,), {
  'DESCRIPTOR' : _MOVETESTRUNSREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.MoveTestRunsRequest)
  })
_sym_db.RegisterMessage(MoveTestRunsRequest)

MoveTestRunsResponse = _reflection.GeneratedProtocolMessageType('MoveTestRunsResponse', (_message.Message,), {
  'DESCRIPTOR' : _MOVETESTRUNSRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.MoveTestRunsResponse)
  })
_sym_db.RegisterMessage(MoveTestRunsResponse)

TestBatch = _reflection.GeneratedProtocolMessageType('TestBatch', (_message.Message,), {

  'Metadata' : _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), {
    'DESCRIPTOR' : _TESTBATCH_METADATA,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestBatch.Metadata)
    })
  ,
  'DESCRIPTOR' : _TESTBATCH,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestBatch)
  })
_sym_db.RegisterMessage(TestBatch)
_sym_db.RegisterMessage(TestBatch.Metadata)

TestBatchReadMask = _reflection.GeneratedProtocolMessageType('TestBatchReadMask', (_message.Message,), {

  'MetadataMask' : _reflection.GeneratedProtocolMessageType('MetadataMask', (_message.Message,), {
    'DESCRIPTOR' : _TESTBATCHREADMASK_METADATAMASK,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.TestBatchReadMask.MetadataMask)
    })
  ,
  'DESCRIPTOR' : _TESTBATCHREADMASK,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestBatchReadMask)
  })
_sym_db.RegisterMessage(TestBatchReadMask)
_sym_db.RegisterMessage(TestBatchReadMask.MetadataMask)

TestBatchWriteMask = _reflection.GeneratedProtocolMessageType('TestBatchWriteMask', (_message.Message,), {
  'DESCRIPTOR' : _TESTBATCHWRITEMASK,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestBatchWriteMask)
  })
_sym_db.RegisterMessage(TestBatchWriteMask)

GetTestBatchRequest = _reflection.GeneratedProtocolMessageType('GetTestBatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTBATCHREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetTestBatchRequest)
  })
_sym_db.RegisterMessage(GetTestBatchRequest)

GetTestBatchResponse = _reflection.GeneratedProtocolMessageType('GetTestBatchResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTBATCHRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetTestBatchResponse)
  })
_sym_db.RegisterMessage(GetTestBatchResponse)

UpdateTestBatchRequest = _reflection.GeneratedProtocolMessageType('UpdateTestBatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTBATCHREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.UpdateTestBatchRequest)
  })
_sym_db.RegisterMessage(UpdateTestBatchRequest)

UpdateTestBatchResponse = _reflection.GeneratedProtocolMessageType('UpdateTestBatchResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTBATCHRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.UpdateTestBatchResponse)
  })
_sym_db.RegisterMessage(UpdateTestBatchResponse)

ListTestBatchesRequest = _reflection.GeneratedProtocolMessageType('ListTestBatchesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTBATCHESREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListTestBatchesRequest)
  })
_sym_db.RegisterMessage(ListTestBatchesRequest)

ListTestBatchesResponse = _reflection.GeneratedProtocolMessageType('ListTestBatchesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTBATCHESRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListTestBatchesResponse)
  })
_sym_db.RegisterMessage(ListTestBatchesResponse)

TestCase = _reflection.GeneratedProtocolMessageType('TestCase', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestCase)
  })
_sym_db.RegisterMessage(TestCase)

TestCaseWriteMask = _reflection.GeneratedProtocolMessageType('TestCaseWriteMask', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEWRITEMASK,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.TestCaseWriteMask)
  })
_sym_db.RegisterMessage(TestCaseWriteMask)

GetTestCaseRequest = _reflection.GeneratedProtocolMessageType('GetTestCaseRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTCASEREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetTestCaseRequest)
  })
_sym_db.RegisterMessage(GetTestCaseRequest)

GetTestCaseResponse = _reflection.GeneratedProtocolMessageType('GetTestCaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTCASERESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetTestCaseResponse)
  })
_sym_db.RegisterMessage(GetTestCaseResponse)

UpdateTestCaseRequest = _reflection.GeneratedProtocolMessageType('UpdateTestCaseRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTCASEREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.UpdateTestCaseRequest)
  })
_sym_db.RegisterMessage(UpdateTestCaseRequest)

UpdateTestCaseResponse = _reflection.GeneratedProtocolMessageType('UpdateTestCaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTCASERESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.UpdateTestCaseResponse)
  })
_sym_db.RegisterMessage(UpdateTestCaseResponse)

ListTestCasesRequest = _reflection.GeneratedProtocolMessageType('ListTestCasesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTCASESREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListTestCasesRequest)
  })
_sym_db.RegisterMessage(ListTestCasesRequest)

ListTestCasesResponse = _reflection.GeneratedProtocolMessageType('ListTestCasesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTCASESRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListTestCasesResponse)
  })
_sym_db.RegisterMessage(ListTestCasesResponse)

FeatureResult = _reflection.GeneratedProtocolMessageType('FeatureResult', (_message.Message,), {

  'Metadata' : _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), {
    'DESCRIPTOR' : _FEATURERESULT_METADATA,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.FeatureResult.Metadata)
    })
  ,
  'DESCRIPTOR' : _FEATURERESULT,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.FeatureResult)
  })
_sym_db.RegisterMessage(FeatureResult)
_sym_db.RegisterMessage(FeatureResult.Metadata)

FeatureResultReadMask = _reflection.GeneratedProtocolMessageType('FeatureResultReadMask', (_message.Message,), {

  'MetadataMask' : _reflection.GeneratedProtocolMessageType('MetadataMask', (_message.Message,), {
    'DESCRIPTOR' : _FEATURERESULTREADMASK_METADATAMASK,
    '__module__' : 'protos.test_run_results.test_run_results_pb2'
    # @@protoc_insertion_point(class_scope:rime.FeatureResultReadMask.MetadataMask)
    })
  ,
  'DESCRIPTOR' : _FEATURERESULTREADMASK,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.FeatureResultReadMask)
  })
_sym_db.RegisterMessage(FeatureResultReadMask)
_sym_db.RegisterMessage(FeatureResultReadMask.MetadataMask)

FeatureResultWriteMask = _reflection.GeneratedProtocolMessageType('FeatureResultWriteMask', (_message.Message,), {
  'DESCRIPTOR' : _FEATURERESULTWRITEMASK,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.FeatureResultWriteMask)
  })
_sym_db.RegisterMessage(FeatureResultWriteMask)

UpdateFeatureResultRequest = _reflection.GeneratedProtocolMessageType('UpdateFeatureResultRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEFEATURERESULTREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.UpdateFeatureResultRequest)
  })
_sym_db.RegisterMessage(UpdateFeatureResultRequest)

UpdateFeatureResultResponse = _reflection.GeneratedProtocolMessageType('UpdateFeatureResultResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEFEATURERESULTRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.UpdateFeatureResultResponse)
  })
_sym_db.RegisterMessage(UpdateFeatureResultResponse)

GetFeatureResultRequest = _reflection.GeneratedProtocolMessageType('GetFeatureResultRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETFEATURERESULTREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetFeatureResultRequest)
  })
_sym_db.RegisterMessage(GetFeatureResultRequest)

GetFeatureResultResponse = _reflection.GeneratedProtocolMessageType('GetFeatureResultResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETFEATURERESULTRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetFeatureResultResponse)
  })
_sym_db.RegisterMessage(GetFeatureResultResponse)

ListFeatureResultsRequest = _reflection.GeneratedProtocolMessageType('ListFeatureResultsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTFEATURERESULTSREQUEST,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListFeatureResultsRequest)
  })
_sym_db.RegisterMessage(ListFeatureResultsRequest)

ListFeatureResultsResponse = _reflection.GeneratedProtocolMessageType('ListFeatureResultsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTFEATURERESULTSRESPONSE,
  '__module__' : 'protos.test_run_results.test_run_results_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListFeatureResultsResponse)
  })
_sym_db.RegisterMessage(ListFeatureResultsResponse)

_RESULTSREADER = DESCRIPTOR.services_by_name['ResultsReader']
_RESULTSWRITER = DESCRIPTOR.services_by_name['ResultsWriter']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\035ri/_gen/protos/testrunresults'
  _TESTRUN_METRICS_MODELPERFENTRY._options = None
  _TESTRUN_METRICS_MODELPERFENTRY._serialized_options = b'8\001'
  _RESULTSREADER.methods_by_name['GetTestRun']._options = None
  _RESULTSREADER.methods_by_name['GetTestRun']._serialized_options = b'\202\323\344\223\002\035\022\033/v1/test-runs/{test_run_id}'
  _RESULTSREADER.methods_by_name['GetTestCase']._options = None
  _RESULTSREADER.methods_by_name['GetTestCase']._serialized_options = b'\202\323\344\223\0027\0225/v1/test-runs/{test_run_id}/test-cases/{test_case_id}'
  _RESULTSREADER.methods_by_name['ListTestCases']._options = None
  _RESULTSREADER.methods_by_name['ListTestCases']._serialized_options = b'\202\323\344\223\002(\022&/v1/test-runs/{test_run_id}/test-cases'
  _TESTRUN._serialized_start=171
  _TESTRUN._serialized_end=1670
  _TESTRUN_METADATA._serialized_start=381
  _TESTRUN_METADATA._serialized_end=637
  _TESTRUN_DATASOURCEINFO._serialized_start=640
  _TESTRUN_DATASOURCEINFO._serialized_end=823
  _TESTRUN_DATASOURCEINFO_DATASOURCE._serialized_start=767
  _TESTRUN_DATASOURCEINFO_DATASOURCE._serialized_end=823
  _TESTRUN_MODELSOURCEINFO._serialized_start=825
  _TESTRUN_MODELSOURCEINFO._serialized_end=868
  _TESTRUN_METRICS._serialized_start=871
  _TESTRUN_METRICS._serialized_end=1640
  _TESTRUN_METRICS_MODELPERFMETRIC._serialized_start=1194
  _TESTRUN_METRICS_MODELPERFMETRIC._serialized_end=1354
  _TESTRUN_METRICS_SEVERITYCOUNTS._serialized_start=1356
  _TESTRUN_METRICS_SEVERITYCOUNTS._serialized_end=1429
  _TESTRUN_METRICS_SUMMARYCOUNTS._serialized_start=1431
  _TESTRUN_METRICS_SUMMARYCOUNTS._serialized_end=1520
  _TESTRUN_METRICS_MODELPERFENTRY._serialized_start=1522
  _TESTRUN_METRICS_MODELPERFENTRY._serialized_end=1609
  _TESTRUNREADMASK._serialized_start=1673
  _TESTRUNREADMASK._serialized_end=1819
  _TESTRUNREADMASK_METADATAMASK._serialized_start=1753
  _TESTRUNREADMASK_METADATAMASK._serialized_end=1793
  _TESTRUNWRITEMASK._serialized_start=1821
  _TESTRUNWRITEMASK._serialized_end=1935
  _TESTRUNWRITEMASK_METADATAMASK._serialized_start=1901
  _TESTRUNWRITEMASK_METADATAMASK._serialized_end=1935
  _GETTESTRUNREQUEST._serialized_start=1937
  _GETTESTRUNREQUEST._serialized_end=2014
  _GETTESTRUNRESPONSE._serialized_start=2016
  _GETTESTRUNRESPONSE._serialized_end=2069
  _UPDATETESTRUNREQUEST._serialized_start=2071
  _UPDATETESTRUNREQUEST._serialized_end=2164
  _UPDATETESTRUNRESPONSE._serialized_start=2166
  _UPDATETESTRUNRESPONSE._serialized_end=2189
  _DELETETESTRUNREQUEST._serialized_start=2191
  _DELETETESTRUNREQUEST._serialized_end=2234
  _DELETETESTRUNRESPONSE._serialized_start=2236
  _DELETETESTRUNRESPONSE._serialized_end=2259
  _LISTTESTRUNSBYPROJECTREQUEST._serialized_start=2261
  _LISTTESTRUNSBYPROJECTREQUEST._serialized_end=2350
  _LISTTESTRUNSBYPROJECTRESPONSE._serialized_start=2352
  _LISTTESTRUNSBYPROJECTRESPONSE._serialized_end=2442
  _MOVETESTRUNSREQUEST._serialized_start=2444
  _MOVETESTRUNSREQUEST._serialized_end=2546
  _MOVETESTRUNSRESPONSE._serialized_start=2548
  _MOVETESTRUNSRESPONSE._serialized_end=2570
  _TESTBATCH._serialized_start=2572
  _TESTBATCH._serialized_end=2665
  _TESTBATCH_METADATA._serialized_start=2629
  _TESTBATCH_METADATA._serialized_end=2665
  _TESTBATCHREADMASK._serialized_start=2668
  _TESTBATCHREADMASK._serialized_end=2818
  _TESTBATCHREADMASK_METADATAMASK._serialized_start=2752
  _TESTBATCHREADMASK_METADATAMASK._serialized_end=2792
  _TESTBATCHWRITEMASK._serialized_start=2820
  _TESTBATCHWRITEMASK._serialized_end=2846
  _GETTESTBATCHREQUEST._serialized_start=2848
  _GETTESTBATCHREQUEST._serialized_end=2952
  _GETTESTBATCHRESPONSE._serialized_start=2954
  _GETTESTBATCHRESPONSE._serialized_end=3008
  _UPDATETESTBATCHREQUEST._serialized_start=3010
  _UPDATETESTBATCHREQUEST._serialized_end=3127
  _UPDATETESTBATCHRESPONSE._serialized_start=3129
  _UPDATETESTBATCHRESPONSE._serialized_end=3154
  _LISTTESTBATCHESREQUEST._serialized_start=3156
  _LISTTESTBATCHESREQUEST._serialized_end=3240
  _LISTTESTBATCHESRESPONSE._serialized_start=3242
  _LISTTESTBATCHESRESPONSE._serialized_end=3304
  _TESTCASE._serialized_start=3307
  _TESTCASE._serialized_end=3483
  _TESTCASEWRITEMASK._serialized_start=3485
  _TESTCASEWRITEMASK._serialized_end=3540
  _GETTESTCASEREQUEST._serialized_start=3542
  _GETTESTCASEREQUEST._serialized_end=3605
  _GETTESTCASERESPONSE._serialized_start=3607
  _GETTESTCASERESPONSE._serialized_end=3663
  _UPDATETESTCASEREQUEST._serialized_start=3666
  _UPDATETESTCASEREQUEST._serialized_end=3807
  _UPDATETESTCASERESPONSE._serialized_start=3809
  _UPDATETESTCASERESPONSE._serialized_end=3833
  _LISTTESTCASESREQUEST._serialized_start=3835
  _LISTTESTCASESREQUEST._serialized_end=3917
  _LISTTESTCASESRESPONSE._serialized_start=3919
  _LISTTESTCASESRESPONSE._serialized_end=4003
  _FEATURERESULT._serialized_start=4005
  _FEATURERESULT._serialized_end=4106
  _FEATURERESULT_METADATA._serialized_start=381
  _FEATURERESULT_METADATA._serialized_end=417
  _FEATURERESULTREADMASK._serialized_start=4109
  _FEATURERESULTREADMASK._serialized_end=4267
  _FEATURERESULTREADMASK_METADATAMASK._serialized_start=4201
  _FEATURERESULTREADMASK_METADATAMASK._serialized_end=4241
  _FEATURERESULTWRITEMASK._serialized_start=4269
  _FEATURERESULTWRITEMASK._serialized_end=4299
  _UPDATEFEATURERESULTREQUEST._serialized_start=4302
  _UPDATEFEATURERESULTREQUEST._serialized_end=4433
  _UPDATEFEATURERESULTRESPONSE._serialized_start=4435
  _UPDATEFEATURERESULTRESPONSE._serialized_end=4464
  _GETFEATURERESULTREQUEST._serialized_start=4466
  _GETFEATURERESULTREQUEST._serialized_end=4575
  _GETFEATURERESULTRESPONSE._serialized_start=4577
  _GETFEATURERESULTRESPONSE._serialized_end=4641
  _LISTFEATURERESULTSREQUEST._serialized_start=4643
  _LISTFEATURERESULTSREQUEST._serialized_end=4734
  _LISTFEATURERESULTSRESPONSE._serialized_start=4736
  _LISTFEATURERESULTSRESPONSE._serialized_end=4802
  _RESULTSREADER._serialized_start=4805
  _RESULTSREADER._serialized_end=5601
  _RESULTSWRITER._serialized_start=5604
  _RESULTSWRITER._serialized_end=6087
# @@protoc_insertion_point(module_scope)
