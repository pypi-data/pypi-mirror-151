<macro>
def set_true(data):
    if 'bfd-enable' in data:
        return data, {"bfd-enable": True}
    elif 'black-hole' in data:
        return data, {"black-hole": True}
</macro>

<group name="configure.router">
#-------------------------------------------------- {{ ignore }}
echo "Management Router Configuration" {{ _start_ }}
#-------------------------------------------------- {{ ignore }}
    <group name="router-name.{{ router }}">
    router {{ router }}
        <group name="entry">
        static-route {{ address | is_ip }}/{{ prefix }} next-hop {{ next-hop | is_ip }}
        </group>
    </group>
    exit {{ _end_ }}
</group>

<group name="configure.router.static-route.ipv4">
#-------------------------------------------------- {{ ignore }}
echo "Static Route Configuration" {{ _start_ }}
#-------------------------------------------------- {{ ignore }}
        <group name="entry">
        static-route {{ address | IPV4}}/{{ prefix }} next-hop {{ next-hop | is_ip }} {{ bfd | macro('set_true') | _start_ }}
        static-route {{ address | IPV4 }}/{{ prefix }} next-hop {{ next-hop | is_ip }} preference {{ preference | DIGIT | _start_ }}
        static-route {{ address | IPV4 }}/{{ prefix }} {{ black-hole | macro('set_true') | _start_ }}
        </group>
</group>
#-------------------------------------------------- {{ _end_ }}
echo "Static IPv6 Route Configuration" {{ _start_ }}
<group name="configure.router.static-route.ipv6">
#-------------------------------------------------- {{ ignore }}
        <group name="entry">
        static-route {{ address | IPV6 }}/{{ prefix }} next-hop {{ next-hop | is_ip }} {{ bfd | macro('set_true') | _start_ }}
        static-route {{ address | IPV6 }}/{{ prefix }} next-hop {{ next-hop | is_ip }} preference {{ preference | DIGIT | _start_ }}
        static-route {{ address | IPV6 }}/{{ prefix }} {{ black-hole | macro('set_true') | _start_ }}
        </group>
#-------------------------------------------------- {{ _end_ }}
</group>
