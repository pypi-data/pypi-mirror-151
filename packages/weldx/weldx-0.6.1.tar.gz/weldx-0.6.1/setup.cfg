[metadata]
name = weldx
author = "Cagtay Fabry <cagtay.fabry@bam.de>, Volker Hirthammer <volker.hirthammer@bam.de>, Martin K. Scherer <martin.scherer@bam.de>"
author_email = "cagtay.fabry@bam.de"
home_page = https://www.bam.de/weldx
description = Python API for the WelDX file format and standard
long_description = file: README.rst
long_description_content_type = text/x-rst
license = BSD License
license_file = LICENSE
platform = any
keywords = 
	welding
	weldx
	bam
classifiers = 
	Development Status :: 3 - Alpha
	Intended Audience :: Science/Research
	License :: OSI Approved :: BSD License
	Operating System :: OS Independent
	Natural Language :: English
	Programming Language :: Python
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Topic :: Scientific/Engineering :: Physics
project_urls = 
	Documentation = https://weldx.readthedocs.io
	Source Code = https://github.com/BAMweldx/weldx
	Bug Tracker = https://github.com/BAMweldx/weldx/issues
	Changelog = https://github.com/BAMweldx/weldx/blob/master/CHANGELOG.rst

[options]
packages = find:
python_requires = >=3.8,<3.11
setup_requires = 
	setuptools >=38.3.0
	setuptools_scm
install_requires = 
	numpy >=1.20
	asdf >=2.8.2
	pandas >=1.0
	xarray >=0.19
	scipy >=1.4,!=1.6.0,!=1.6.1
	sympy >=1.6
	pint >=0.18
	pint-xarray >=0.2.1
	bottleneck >=1.3.3
	boltons
	bidict
	networkx >=2,!=2.7.0,<=2.8.0
	fs
	meshio
	psutil
	IPython
include_package_data = True

[options.extras_require]
test = 
	pytest
	pytest-cov
	pytest-xdist
	nbval
vis = 
	weldx_widgets >= 0.2

[options.entry_points]
asdf.extensions = 
	weldx = weldx.asdf.extension:get_extensions
	weldx_validators = weldx.asdf._extension:WeldxValidatorExtension
asdf.resource_mappings = 
	weldx_schemas = weldx.asdf.extension:get_resource_mappings
console_scripts = 
	welding_schema = weldx.asdf.cli.welding_schema:main

[flake8]
ignore = 
	W503,W504,  # line break after binary operator
	E203,       # E203 whitespace before ':' (not PEP8 compliant anyway)
	C408        # allow dict() over literal {}
max-line-length = 88
select = C,E,F,W,B,B950 # black formatting options
per-file-ignores = 
	aws_setup.py:E501
exclude = 
	__init__.py,
	doc/conf.py,
no-accept-encodings = True

[pydocstyle]
convention = numpy
match = (?!__)(?!_version)(?!conftest).*\.py
match_dir = ^(?!(tests|tags|asdf)).*

[tool:pytest]
addopts = --tb=short --color=yes -rsw --cov=weldx --cov-report=term-missing:skip-covered --doctest-modules
testpaths = 
	weldx
markers = 
	slow: marks tests as slow to run (skipped by default, enable with --runslow option)
asdf_schema_root = weldx/schemas/weldx.bam.de/weldx
norecursedirs = doc
filterwarnings = 
	ignore::DeprecationWarning:traittypes.*:
	ignore:Passing method to :FutureWarning:xarray.*:
	error::pint.UnitStrippedWarning

[isort]
profile = black
default_section = THIRDPARTY
known_first_party = weldx
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

[coverage:report]
omit = 
	weldx/_version.py
	weldx/tests/*
exclude_lines = 
	pragma: no cover
	
	def __repr__
	def __str__
	def _ipython_display_

[mypy]
python_version = 3.9
files = weldx
ignore_missing_imports = True
strict_optional = False
pretty = True
allow_redefinition = True
show_error_context = True
show_error_codes = True
show_column_numbers = True
sqlite_cache = True

[mypy-weldx.asdf.*]
ignore_errors = True

[mypy-weldx.tags.*]
ignore_errors = True

[mypy-weldx.tests.*]
ignore_errors = True

[mypy-weldx.welding.groove.*]
ignore_errors = True

[mypy-weldx.geometry.*]
ignore_errors = True

[mypy-xarray]
follow_imports = skip
ignore_errors = True

[egg_info]
tag_build = 
tag_date = 0

