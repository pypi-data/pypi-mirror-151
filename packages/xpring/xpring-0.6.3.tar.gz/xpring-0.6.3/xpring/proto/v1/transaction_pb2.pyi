# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from .account_pb2 import (
    AccountAddress as org___xrpl___rpc___v1___account_pb2___AccountAddress,
)

from .amount_pb2 import (
    Currency as org___xrpl___rpc___v1___amount_pb2___Currency,
    XRPDropsAmount as org___xrpl___rpc___v1___amount_pb2___XRPDropsAmount,
)

from .common_pb2 import (
    Account as org___xrpl___rpc___v1___common_pb2___Account,
    AccountTransactionID as org___xrpl___rpc___v1___common_pb2___AccountTransactionID,
    Amount as org___xrpl___rpc___v1___common_pb2___Amount,
    Authorize as org___xrpl___rpc___v1___common_pb2___Authorize,
    Balance as org___xrpl___rpc___v1___common_pb2___Balance,
    CancelAfter as org___xrpl___rpc___v1___common_pb2___CancelAfter,
    Channel as org___xrpl___rpc___v1___common_pb2___Channel,
    CheckID as org___xrpl___rpc___v1___common_pb2___CheckID,
    ClearFlag as org___xrpl___rpc___v1___common_pb2___ClearFlag,
    Condition as org___xrpl___rpc___v1___common_pb2___Condition,
    DeliverMin as org___xrpl___rpc___v1___common_pb2___DeliverMin,
    Destination as org___xrpl___rpc___v1___common_pb2___Destination,
    DestinationTag as org___xrpl___rpc___v1___common_pb2___DestinationTag,
    Domain as org___xrpl___rpc___v1___common_pb2___Domain,
    EmailHash as org___xrpl___rpc___v1___common_pb2___EmailHash,
    Expiration as org___xrpl___rpc___v1___common_pb2___Expiration,
    FinishAfter as org___xrpl___rpc___v1___common_pb2___FinishAfter,
    Flags as org___xrpl___rpc___v1___common_pb2___Flags,
    Fulfillment as org___xrpl___rpc___v1___common_pb2___Fulfillment,
    Index as org___xrpl___rpc___v1___common_pb2___Index,
    InvoiceID as org___xrpl___rpc___v1___common_pb2___InvoiceID,
    Issuer as org___xrpl___rpc___v1___common_pb2___Issuer,
    LastLedgerSequence as org___xrpl___rpc___v1___common_pb2___LastLedgerSequence,
    LimitAmount as org___xrpl___rpc___v1___common_pb2___LimitAmount,
    MemoData as org___xrpl___rpc___v1___common_pb2___MemoData,
    MemoFormat as org___xrpl___rpc___v1___common_pb2___MemoFormat,
    MemoType as org___xrpl___rpc___v1___common_pb2___MemoType,
    MessageKey as org___xrpl___rpc___v1___common_pb2___MessageKey,
    NFTokenBrokerFee as org___xrpl___rpc___v1___common_pb2___NFTokenBrokerFee,
    NFTokenBuyOffer as org___xrpl___rpc___v1___common_pb2___NFTokenBuyOffer,
    NFTokenID as org___xrpl___rpc___v1___common_pb2___NFTokenID,
    NFTokenMinter as org___xrpl___rpc___v1___common_pb2___NFTokenMinter,
    NFTokenSellOffer as org___xrpl___rpc___v1___common_pb2___NFTokenSellOffer,
    NFTokenTaxon as org___xrpl___rpc___v1___common_pb2___NFTokenTaxon,
    OfferSequence as org___xrpl___rpc___v1___common_pb2___OfferSequence,
    Owner as org___xrpl___rpc___v1___common_pb2___Owner,
    PaymentChannelSignature as org___xrpl___rpc___v1___common_pb2___PaymentChannelSignature,
    PublicKey as org___xrpl___rpc___v1___common_pb2___PublicKey,
    QualityIn as org___xrpl___rpc___v1___common_pb2___QualityIn,
    QualityOut as org___xrpl___rpc___v1___common_pb2___QualityOut,
    RegularKey as org___xrpl___rpc___v1___common_pb2___RegularKey,
    SendMax as org___xrpl___rpc___v1___common_pb2___SendMax,
    Sequence as org___xrpl___rpc___v1___common_pb2___Sequence,
    SetFlag as org___xrpl___rpc___v1___common_pb2___SetFlag,
    SettleDelay as org___xrpl___rpc___v1___common_pb2___SettleDelay,
    SignerEntry as org___xrpl___rpc___v1___common_pb2___SignerEntry,
    SignerQuorum as org___xrpl___rpc___v1___common_pb2___SignerQuorum,
    SigningPublicKey as org___xrpl___rpc___v1___common_pb2___SigningPublicKey,
    SourceTag as org___xrpl___rpc___v1___common_pb2___SourceTag,
    TakerGets as org___xrpl___rpc___v1___common_pb2___TakerGets,
    TakerPays as org___xrpl___rpc___v1___common_pb2___TakerPays,
    TickSize as org___xrpl___rpc___v1___common_pb2___TickSize,
    TicketCount as org___xrpl___rpc___v1___common_pb2___TicketCount,
    TicketSequence as org___xrpl___rpc___v1___common_pb2___TicketSequence,
    TransactionSignature as org___xrpl___rpc___v1___common_pb2___TransactionSignature,
    TransferFee as org___xrpl___rpc___v1___common_pb2___TransferFee,
    TransferRate as org___xrpl___rpc___v1___common_pb2___TransferRate,
    URI as org___xrpl___rpc___v1___common_pb2___URI,
    Unauthorize as org___xrpl___rpc___v1___common_pb2___Unauthorize,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Union as typing___Union,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Transaction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def account(self) -> org___xrpl___rpc___v1___common_pb2___Account: ...

    @property
    def fee(self) -> org___xrpl___rpc___v1___amount_pb2___XRPDropsAmount: ...

    @property
    def sequence(self) -> org___xrpl___rpc___v1___common_pb2___Sequence: ...

    @property
    def payment(self) -> type___Payment: ...

    @property
    def account_set(self) -> type___AccountSet: ...

    @property
    def account_delete(self) -> type___AccountDelete: ...

    @property
    def check_cancel(self) -> type___CheckCancel: ...

    @property
    def check_cash(self) -> type___CheckCash: ...

    @property
    def check_create(self) -> type___CheckCreate: ...

    @property
    def deposit_preauth(self) -> type___DepositPreauth: ...

    @property
    def escrow_cancel(self) -> type___EscrowCancel: ...

    @property
    def escrow_create(self) -> type___EscrowCreate: ...

    @property
    def escrow_finish(self) -> type___EscrowFinish: ...

    @property
    def nftoken_accept_offer(self) -> type___NFTokenAcceptOffer: ...

    @property
    def nftoken_burn(self) -> type___NFTokenBurn: ...

    @property
    def nftoken_cancel_offer(self) -> type___NFTokenCancelOffer: ...

    @property
    def nftoken_create_offer(self) -> type___NFTokenCreateOffer: ...

    @property
    def nftoken_mint(self) -> type___NFTokenMint: ...

    @property
    def offer_cancel(self) -> type___OfferCancel: ...

    @property
    def offer_create(self) -> type___OfferCreate: ...

    @property
    def payment_channel_claim(self) -> type___PaymentChannelClaim: ...

    @property
    def payment_channel_create(self) -> type___PaymentChannelCreate: ...

    @property
    def payment_channel_fund(self) -> type___PaymentChannelFund: ...

    @property
    def set_regular_key(self) -> type___SetRegularKey: ...

    @property
    def signer_list_set(self) -> type___SignerListSet: ...

    @property
    def ticket_create(self) -> type___TicketCreate: ...

    @property
    def trust_set(self) -> type___TrustSet: ...

    @property
    def signing_public_key(self) -> org___xrpl___rpc___v1___common_pb2___SigningPublicKey: ...

    @property
    def transaction_signature(self) -> org___xrpl___rpc___v1___common_pb2___TransactionSignature: ...

    @property
    def flags(self) -> org___xrpl___rpc___v1___common_pb2___Flags: ...

    @property
    def last_ledger_sequence(self) -> org___xrpl___rpc___v1___common_pb2___LastLedgerSequence: ...

    @property
    def source_tag(self) -> org___xrpl___rpc___v1___common_pb2___SourceTag: ...

    @property
    def memos(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Memo]: ...

    @property
    def signers(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Signer]: ...

    @property
    def account_transaction_id(self) -> org___xrpl___rpc___v1___common_pb2___AccountTransactionID: ...

    @property
    def ticket_sequence(self) -> org___xrpl___rpc___v1___common_pb2___TicketSequence: ...

    def __init__(self,
        *,
        account : typing___Optional[org___xrpl___rpc___v1___common_pb2___Account] = None,
        fee : typing___Optional[org___xrpl___rpc___v1___amount_pb2___XRPDropsAmount] = None,
        sequence : typing___Optional[org___xrpl___rpc___v1___common_pb2___Sequence] = None,
        payment : typing___Optional[type___Payment] = None,
        account_set : typing___Optional[type___AccountSet] = None,
        account_delete : typing___Optional[type___AccountDelete] = None,
        check_cancel : typing___Optional[type___CheckCancel] = None,
        check_cash : typing___Optional[type___CheckCash] = None,
        check_create : typing___Optional[type___CheckCreate] = None,
        deposit_preauth : typing___Optional[type___DepositPreauth] = None,
        escrow_cancel : typing___Optional[type___EscrowCancel] = None,
        escrow_create : typing___Optional[type___EscrowCreate] = None,
        escrow_finish : typing___Optional[type___EscrowFinish] = None,
        nftoken_accept_offer : typing___Optional[type___NFTokenAcceptOffer] = None,
        nftoken_burn : typing___Optional[type___NFTokenBurn] = None,
        nftoken_cancel_offer : typing___Optional[type___NFTokenCancelOffer] = None,
        nftoken_create_offer : typing___Optional[type___NFTokenCreateOffer] = None,
        nftoken_mint : typing___Optional[type___NFTokenMint] = None,
        offer_cancel : typing___Optional[type___OfferCancel] = None,
        offer_create : typing___Optional[type___OfferCreate] = None,
        payment_channel_claim : typing___Optional[type___PaymentChannelClaim] = None,
        payment_channel_create : typing___Optional[type___PaymentChannelCreate] = None,
        payment_channel_fund : typing___Optional[type___PaymentChannelFund] = None,
        set_regular_key : typing___Optional[type___SetRegularKey] = None,
        signer_list_set : typing___Optional[type___SignerListSet] = None,
        ticket_create : typing___Optional[type___TicketCreate] = None,
        trust_set : typing___Optional[type___TrustSet] = None,
        signing_public_key : typing___Optional[org___xrpl___rpc___v1___common_pb2___SigningPublicKey] = None,
        transaction_signature : typing___Optional[org___xrpl___rpc___v1___common_pb2___TransactionSignature] = None,
        flags : typing___Optional[org___xrpl___rpc___v1___common_pb2___Flags] = None,
        last_ledger_sequence : typing___Optional[org___xrpl___rpc___v1___common_pb2___LastLedgerSequence] = None,
        source_tag : typing___Optional[org___xrpl___rpc___v1___common_pb2___SourceTag] = None,
        memos : typing___Optional[typing___Iterable[type___Memo]] = None,
        signers : typing___Optional[typing___Iterable[type___Signer]] = None,
        account_transaction_id : typing___Optional[org___xrpl___rpc___v1___common_pb2___AccountTransactionID] = None,
        ticket_sequence : typing___Optional[org___xrpl___rpc___v1___common_pb2___TicketSequence] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> Transaction: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> Transaction: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account",b"account",u"account_delete",b"account_delete",u"account_set",b"account_set",u"account_transaction_id",b"account_transaction_id",u"check_cancel",b"check_cancel",u"check_cash",b"check_cash",u"check_create",b"check_create",u"deposit_preauth",b"deposit_preauth",u"escrow_cancel",b"escrow_cancel",u"escrow_create",b"escrow_create",u"escrow_finish",b"escrow_finish",u"fee",b"fee",u"flags",b"flags",u"last_ledger_sequence",b"last_ledger_sequence",u"nftoken_accept_offer",b"nftoken_accept_offer",u"nftoken_burn",b"nftoken_burn",u"nftoken_cancel_offer",b"nftoken_cancel_offer",u"nftoken_create_offer",b"nftoken_create_offer",u"nftoken_mint",b"nftoken_mint",u"offer_cancel",b"offer_cancel",u"offer_create",b"offer_create",u"payment",b"payment",u"payment_channel_claim",b"payment_channel_claim",u"payment_channel_create",b"payment_channel_create",u"payment_channel_fund",b"payment_channel_fund",u"sequence",b"sequence",u"set_regular_key",b"set_regular_key",u"signer_list_set",b"signer_list_set",u"signing_public_key",b"signing_public_key",u"source_tag",b"source_tag",u"ticket_create",b"ticket_create",u"ticket_sequence",b"ticket_sequence",u"transaction_data",b"transaction_data",u"transaction_signature",b"transaction_signature",u"trust_set",b"trust_set"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account",b"account",u"account_delete",b"account_delete",u"account_set",b"account_set",u"account_transaction_id",b"account_transaction_id",u"check_cancel",b"check_cancel",u"check_cash",b"check_cash",u"check_create",b"check_create",u"deposit_preauth",b"deposit_preauth",u"escrow_cancel",b"escrow_cancel",u"escrow_create",b"escrow_create",u"escrow_finish",b"escrow_finish",u"fee",b"fee",u"flags",b"flags",u"last_ledger_sequence",b"last_ledger_sequence",u"memos",b"memos",u"nftoken_accept_offer",b"nftoken_accept_offer",u"nftoken_burn",b"nftoken_burn",u"nftoken_cancel_offer",b"nftoken_cancel_offer",u"nftoken_create_offer",b"nftoken_create_offer",u"nftoken_mint",b"nftoken_mint",u"offer_cancel",b"offer_cancel",u"offer_create",b"offer_create",u"payment",b"payment",u"payment_channel_claim",b"payment_channel_claim",u"payment_channel_create",b"payment_channel_create",u"payment_channel_fund",b"payment_channel_fund",u"sequence",b"sequence",u"set_regular_key",b"set_regular_key",u"signer_list_set",b"signer_list_set",u"signers",b"signers",u"signing_public_key",b"signing_public_key",u"source_tag",b"source_tag",u"ticket_create",b"ticket_create",u"ticket_sequence",b"ticket_sequence",u"transaction_data",b"transaction_data",u"transaction_signature",b"transaction_signature",u"trust_set",b"trust_set"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"transaction_data",b"transaction_data"]) -> typing_extensions___Literal["payment","account_set","account_delete","check_cancel","check_cash","check_create","deposit_preauth","escrow_cancel","escrow_create","escrow_finish","nftoken_accept_offer","nftoken_burn","nftoken_cancel_offer","nftoken_create_offer","nftoken_mint","offer_cancel","offer_create","payment_channel_claim","payment_channel_create","payment_channel_fund","set_regular_key","signer_list_set","ticket_create","trust_set"]: ...
type___Transaction = Transaction

class Memo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def memo_data(self) -> org___xrpl___rpc___v1___common_pb2___MemoData: ...

    @property
    def memo_format(self) -> org___xrpl___rpc___v1___common_pb2___MemoFormat: ...

    @property
    def memo_type(self) -> org___xrpl___rpc___v1___common_pb2___MemoType: ...

    def __init__(self,
        *,
        memo_data : typing___Optional[org___xrpl___rpc___v1___common_pb2___MemoData] = None,
        memo_format : typing___Optional[org___xrpl___rpc___v1___common_pb2___MemoFormat] = None,
        memo_type : typing___Optional[org___xrpl___rpc___v1___common_pb2___MemoType] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> Memo: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> Memo: ...
    def HasField(self, field_name: typing_extensions___Literal[u"memo_data",b"memo_data",u"memo_format",b"memo_format",u"memo_type",b"memo_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"memo_data",b"memo_data",u"memo_format",b"memo_format",u"memo_type",b"memo_type"]) -> None: ...
type___Memo = Memo

class Signer(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def account(self) -> org___xrpl___rpc___v1___common_pb2___Account: ...

    @property
    def transaction_signature(self) -> org___xrpl___rpc___v1___common_pb2___TransactionSignature: ...

    @property
    def signing_public_key(self) -> org___xrpl___rpc___v1___common_pb2___SigningPublicKey: ...

    def __init__(self,
        *,
        account : typing___Optional[org___xrpl___rpc___v1___common_pb2___Account] = None,
        transaction_signature : typing___Optional[org___xrpl___rpc___v1___common_pb2___TransactionSignature] = None,
        signing_public_key : typing___Optional[org___xrpl___rpc___v1___common_pb2___SigningPublicKey] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> Signer: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> Signer: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account",b"account",u"signing_public_key",b"signing_public_key",u"transaction_signature",b"transaction_signature"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account",b"account",u"signing_public_key",b"signing_public_key",u"transaction_signature",b"transaction_signature"]) -> None: ...
type___Signer = Signer

class AccountSet(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def clear_flag(self) -> org___xrpl___rpc___v1___common_pb2___ClearFlag: ...

    @property
    def domain(self) -> org___xrpl___rpc___v1___common_pb2___Domain: ...

    @property
    def email_hash(self) -> org___xrpl___rpc___v1___common_pb2___EmailHash: ...

    @property
    def message_key(self) -> org___xrpl___rpc___v1___common_pb2___MessageKey: ...

    @property
    def set_flag(self) -> org___xrpl___rpc___v1___common_pb2___SetFlag: ...

    @property
    def transfer_rate(self) -> org___xrpl___rpc___v1___common_pb2___TransferRate: ...

    @property
    def tick_size(self) -> org___xrpl___rpc___v1___common_pb2___TickSize: ...

    @property
    def nftoken_minter(self) -> org___xrpl___rpc___v1___common_pb2___NFTokenMinter: ...

    def __init__(self,
        *,
        clear_flag : typing___Optional[org___xrpl___rpc___v1___common_pb2___ClearFlag] = None,
        domain : typing___Optional[org___xrpl___rpc___v1___common_pb2___Domain] = None,
        email_hash : typing___Optional[org___xrpl___rpc___v1___common_pb2___EmailHash] = None,
        message_key : typing___Optional[org___xrpl___rpc___v1___common_pb2___MessageKey] = None,
        set_flag : typing___Optional[org___xrpl___rpc___v1___common_pb2___SetFlag] = None,
        transfer_rate : typing___Optional[org___xrpl___rpc___v1___common_pb2___TransferRate] = None,
        tick_size : typing___Optional[org___xrpl___rpc___v1___common_pb2___TickSize] = None,
        nftoken_minter : typing___Optional[org___xrpl___rpc___v1___common_pb2___NFTokenMinter] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> AccountSet: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> AccountSet: ...
    def HasField(self, field_name: typing_extensions___Literal[u"clear_flag",b"clear_flag",u"domain",b"domain",u"email_hash",b"email_hash",u"message_key",b"message_key",u"nftoken_minter",b"nftoken_minter",u"set_flag",b"set_flag",u"tick_size",b"tick_size",u"transfer_rate",b"transfer_rate"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"clear_flag",b"clear_flag",u"domain",b"domain",u"email_hash",b"email_hash",u"message_key",b"message_key",u"nftoken_minter",b"nftoken_minter",u"set_flag",b"set_flag",u"tick_size",b"tick_size",u"transfer_rate",b"transfer_rate"]) -> None: ...
type___AccountSet = AccountSet

class AccountDelete(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def destination(self) -> org___xrpl___rpc___v1___common_pb2___Destination: ...

    @property
    def destination_tag(self) -> org___xrpl___rpc___v1___common_pb2___DestinationTag: ...

    def __init__(self,
        *,
        destination : typing___Optional[org___xrpl___rpc___v1___common_pb2___Destination] = None,
        destination_tag : typing___Optional[org___xrpl___rpc___v1___common_pb2___DestinationTag] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> AccountDelete: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> AccountDelete: ...
    def HasField(self, field_name: typing_extensions___Literal[u"destination",b"destination",u"destination_tag",b"destination_tag"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"destination",b"destination",u"destination_tag",b"destination_tag"]) -> None: ...
type___AccountDelete = AccountDelete

class CheckCancel(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def check_id(self) -> org___xrpl___rpc___v1___common_pb2___CheckID: ...

    def __init__(self,
        *,
        check_id : typing___Optional[org___xrpl___rpc___v1___common_pb2___CheckID] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> CheckCancel: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> CheckCancel: ...
    def HasField(self, field_name: typing_extensions___Literal[u"check_id",b"check_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"check_id",b"check_id"]) -> None: ...
type___CheckCancel = CheckCancel

class CheckCash(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def check_id(self) -> org___xrpl___rpc___v1___common_pb2___CheckID: ...

    @property
    def amount(self) -> org___xrpl___rpc___v1___common_pb2___Amount: ...

    @property
    def deliver_min(self) -> org___xrpl___rpc___v1___common_pb2___DeliverMin: ...

    def __init__(self,
        *,
        check_id : typing___Optional[org___xrpl___rpc___v1___common_pb2___CheckID] = None,
        amount : typing___Optional[org___xrpl___rpc___v1___common_pb2___Amount] = None,
        deliver_min : typing___Optional[org___xrpl___rpc___v1___common_pb2___DeliverMin] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> CheckCash: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> CheckCash: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"amount_oneof",b"amount_oneof",u"check_id",b"check_id",u"deliver_min",b"deliver_min"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"amount_oneof",b"amount_oneof",u"check_id",b"check_id",u"deliver_min",b"deliver_min"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"amount_oneof",b"amount_oneof"]) -> typing_extensions___Literal["amount","deliver_min"]: ...
type___CheckCash = CheckCash

class CheckCreate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def destination(self) -> org___xrpl___rpc___v1___common_pb2___Destination: ...

    @property
    def send_max(self) -> org___xrpl___rpc___v1___common_pb2___SendMax: ...

    @property
    def destination_tag(self) -> org___xrpl___rpc___v1___common_pb2___DestinationTag: ...

    @property
    def expiration(self) -> org___xrpl___rpc___v1___common_pb2___Expiration: ...

    @property
    def invoice_id(self) -> org___xrpl___rpc___v1___common_pb2___InvoiceID: ...

    def __init__(self,
        *,
        destination : typing___Optional[org___xrpl___rpc___v1___common_pb2___Destination] = None,
        send_max : typing___Optional[org___xrpl___rpc___v1___common_pb2___SendMax] = None,
        destination_tag : typing___Optional[org___xrpl___rpc___v1___common_pb2___DestinationTag] = None,
        expiration : typing___Optional[org___xrpl___rpc___v1___common_pb2___Expiration] = None,
        invoice_id : typing___Optional[org___xrpl___rpc___v1___common_pb2___InvoiceID] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> CheckCreate: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> CheckCreate: ...
    def HasField(self, field_name: typing_extensions___Literal[u"destination",b"destination",u"destination_tag",b"destination_tag",u"expiration",b"expiration",u"invoice_id",b"invoice_id",u"send_max",b"send_max"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"destination",b"destination",u"destination_tag",b"destination_tag",u"expiration",b"expiration",u"invoice_id",b"invoice_id",u"send_max",b"send_max"]) -> None: ...
type___CheckCreate = CheckCreate

class DepositPreauth(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def authorize(self) -> org___xrpl___rpc___v1___common_pb2___Authorize: ...

    @property
    def unauthorize(self) -> org___xrpl___rpc___v1___common_pb2___Unauthorize: ...

    def __init__(self,
        *,
        authorize : typing___Optional[org___xrpl___rpc___v1___common_pb2___Authorize] = None,
        unauthorize : typing___Optional[org___xrpl___rpc___v1___common_pb2___Unauthorize] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> DepositPreauth: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> DepositPreauth: ...
    def HasField(self, field_name: typing_extensions___Literal[u"authorization_oneof",b"authorization_oneof",u"authorize",b"authorize",u"unauthorize",b"unauthorize"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"authorization_oneof",b"authorization_oneof",u"authorize",b"authorize",u"unauthorize",b"unauthorize"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"authorization_oneof",b"authorization_oneof"]) -> typing_extensions___Literal["authorize","unauthorize"]: ...
type___DepositPreauth = DepositPreauth

class EscrowCancel(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def owner(self) -> org___xrpl___rpc___v1___common_pb2___Owner: ...

    @property
    def offer_sequence(self) -> org___xrpl___rpc___v1___common_pb2___OfferSequence: ...

    def __init__(self,
        *,
        owner : typing___Optional[org___xrpl___rpc___v1___common_pb2___Owner] = None,
        offer_sequence : typing___Optional[org___xrpl___rpc___v1___common_pb2___OfferSequence] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> EscrowCancel: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> EscrowCancel: ...
    def HasField(self, field_name: typing_extensions___Literal[u"offer_sequence",b"offer_sequence",u"owner",b"owner"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"offer_sequence",b"offer_sequence",u"owner",b"owner"]) -> None: ...
type___EscrowCancel = EscrowCancel

class EscrowCreate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def amount(self) -> org___xrpl___rpc___v1___common_pb2___Amount: ...

    @property
    def destination(self) -> org___xrpl___rpc___v1___common_pb2___Destination: ...

    @property
    def cancel_after(self) -> org___xrpl___rpc___v1___common_pb2___CancelAfter: ...

    @property
    def finish_after(self) -> org___xrpl___rpc___v1___common_pb2___FinishAfter: ...

    @property
    def condition(self) -> org___xrpl___rpc___v1___common_pb2___Condition: ...

    @property
    def destination_tag(self) -> org___xrpl___rpc___v1___common_pb2___DestinationTag: ...

    def __init__(self,
        *,
        amount : typing___Optional[org___xrpl___rpc___v1___common_pb2___Amount] = None,
        destination : typing___Optional[org___xrpl___rpc___v1___common_pb2___Destination] = None,
        cancel_after : typing___Optional[org___xrpl___rpc___v1___common_pb2___CancelAfter] = None,
        finish_after : typing___Optional[org___xrpl___rpc___v1___common_pb2___FinishAfter] = None,
        condition : typing___Optional[org___xrpl___rpc___v1___common_pb2___Condition] = None,
        destination_tag : typing___Optional[org___xrpl___rpc___v1___common_pb2___DestinationTag] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> EscrowCreate: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> EscrowCreate: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"cancel_after",b"cancel_after",u"condition",b"condition",u"destination",b"destination",u"destination_tag",b"destination_tag",u"finish_after",b"finish_after"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"cancel_after",b"cancel_after",u"condition",b"condition",u"destination",b"destination",u"destination_tag",b"destination_tag",u"finish_after",b"finish_after"]) -> None: ...
type___EscrowCreate = EscrowCreate

class EscrowFinish(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def owner(self) -> org___xrpl___rpc___v1___common_pb2___Owner: ...

    @property
    def offer_sequence(self) -> org___xrpl___rpc___v1___common_pb2___OfferSequence: ...

    @property
    def condition(self) -> org___xrpl___rpc___v1___common_pb2___Condition: ...

    @property
    def fulfillment(self) -> org___xrpl___rpc___v1___common_pb2___Fulfillment: ...

    def __init__(self,
        *,
        owner : typing___Optional[org___xrpl___rpc___v1___common_pb2___Owner] = None,
        offer_sequence : typing___Optional[org___xrpl___rpc___v1___common_pb2___OfferSequence] = None,
        condition : typing___Optional[org___xrpl___rpc___v1___common_pb2___Condition] = None,
        fulfillment : typing___Optional[org___xrpl___rpc___v1___common_pb2___Fulfillment] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> EscrowFinish: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> EscrowFinish: ...
    def HasField(self, field_name: typing_extensions___Literal[u"condition",b"condition",u"fulfillment",b"fulfillment",u"offer_sequence",b"offer_sequence",u"owner",b"owner"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"condition",b"condition",u"fulfillment",b"fulfillment",u"offer_sequence",b"offer_sequence",u"owner",b"owner"]) -> None: ...
type___EscrowFinish = EscrowFinish

class NFTokenAcceptOffer(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def nftoken_broker_fee(self) -> org___xrpl___rpc___v1___common_pb2___NFTokenBrokerFee: ...

    @property
    def nftoken_buy_offer(self) -> org___xrpl___rpc___v1___common_pb2___NFTokenBuyOffer: ...

    @property
    def nftoken_sell_offer(self) -> org___xrpl___rpc___v1___common_pb2___NFTokenSellOffer: ...

    def __init__(self,
        *,
        nftoken_broker_fee : typing___Optional[org___xrpl___rpc___v1___common_pb2___NFTokenBrokerFee] = None,
        nftoken_buy_offer : typing___Optional[org___xrpl___rpc___v1___common_pb2___NFTokenBuyOffer] = None,
        nftoken_sell_offer : typing___Optional[org___xrpl___rpc___v1___common_pb2___NFTokenSellOffer] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> NFTokenAcceptOffer: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> NFTokenAcceptOffer: ...
    def HasField(self, field_name: typing_extensions___Literal[u"nftoken_broker_fee",b"nftoken_broker_fee",u"nftoken_buy_offer",b"nftoken_buy_offer",u"nftoken_sell_offer",b"nftoken_sell_offer"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"nftoken_broker_fee",b"nftoken_broker_fee",u"nftoken_buy_offer",b"nftoken_buy_offer",u"nftoken_sell_offer",b"nftoken_sell_offer"]) -> None: ...
type___NFTokenAcceptOffer = NFTokenAcceptOffer

class NFTokenBurn(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def owner(self) -> org___xrpl___rpc___v1___common_pb2___Owner: ...

    @property
    def nftoken_id(self) -> org___xrpl___rpc___v1___common_pb2___NFTokenID: ...

    def __init__(self,
        *,
        owner : typing___Optional[org___xrpl___rpc___v1___common_pb2___Owner] = None,
        nftoken_id : typing___Optional[org___xrpl___rpc___v1___common_pb2___NFTokenID] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> NFTokenBurn: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> NFTokenBurn: ...
    def HasField(self, field_name: typing_extensions___Literal[u"nftoken_id",b"nftoken_id",u"owner",b"owner"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"nftoken_id",b"nftoken_id",u"owner",b"owner"]) -> None: ...
type___NFTokenBurn = NFTokenBurn

class NFTokenCancelOffer(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def nftoken_offers(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[org___xrpl___rpc___v1___common_pb2___Index]: ...

    def __init__(self,
        *,
        nftoken_offers : typing___Optional[typing___Iterable[org___xrpl___rpc___v1___common_pb2___Index]] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> NFTokenCancelOffer: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> NFTokenCancelOffer: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"nftoken_offers",b"nftoken_offers"]) -> None: ...
type___NFTokenCancelOffer = NFTokenCancelOffer

class NFTokenCreateOffer(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def amount(self) -> org___xrpl___rpc___v1___common_pb2___Amount: ...

    @property
    def destination(self) -> org___xrpl___rpc___v1___common_pb2___Destination: ...

    @property
    def expiration(self) -> org___xrpl___rpc___v1___common_pb2___Expiration: ...

    @property
    def owner(self) -> org___xrpl___rpc___v1___common_pb2___Owner: ...

    @property
    def nftoken_id(self) -> org___xrpl___rpc___v1___common_pb2___NFTokenID: ...

    def __init__(self,
        *,
        amount : typing___Optional[org___xrpl___rpc___v1___common_pb2___Amount] = None,
        destination : typing___Optional[org___xrpl___rpc___v1___common_pb2___Destination] = None,
        expiration : typing___Optional[org___xrpl___rpc___v1___common_pb2___Expiration] = None,
        owner : typing___Optional[org___xrpl___rpc___v1___common_pb2___Owner] = None,
        nftoken_id : typing___Optional[org___xrpl___rpc___v1___common_pb2___NFTokenID] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> NFTokenCreateOffer: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> NFTokenCreateOffer: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"destination",b"destination",u"expiration",b"expiration",u"nftoken_id",b"nftoken_id",u"owner",b"owner"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"destination",b"destination",u"expiration",b"expiration",u"nftoken_id",b"nftoken_id",u"owner",b"owner"]) -> None: ...
type___NFTokenCreateOffer = NFTokenCreateOffer

class NFTokenMint(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def issuer(self) -> org___xrpl___rpc___v1___common_pb2___Issuer: ...

    @property
    def nftoken_taxon(self) -> org___xrpl___rpc___v1___common_pb2___NFTokenTaxon: ...

    @property
    def transfer_fee(self) -> org___xrpl___rpc___v1___common_pb2___TransferFee: ...

    @property
    def uri(self) -> org___xrpl___rpc___v1___common_pb2___URI: ...

    def __init__(self,
        *,
        issuer : typing___Optional[org___xrpl___rpc___v1___common_pb2___Issuer] = None,
        nftoken_taxon : typing___Optional[org___xrpl___rpc___v1___common_pb2___NFTokenTaxon] = None,
        transfer_fee : typing___Optional[org___xrpl___rpc___v1___common_pb2___TransferFee] = None,
        uri : typing___Optional[org___xrpl___rpc___v1___common_pb2___URI] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> NFTokenMint: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> NFTokenMint: ...
    def HasField(self, field_name: typing_extensions___Literal[u"issuer",b"issuer",u"nftoken_taxon",b"nftoken_taxon",u"transfer_fee",b"transfer_fee",u"uri",b"uri"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"issuer",b"issuer",u"nftoken_taxon",b"nftoken_taxon",u"transfer_fee",b"transfer_fee",u"uri",b"uri"]) -> None: ...
type___NFTokenMint = NFTokenMint

class OfferCancel(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def offer_sequence(self) -> org___xrpl___rpc___v1___common_pb2___OfferSequence: ...

    def __init__(self,
        *,
        offer_sequence : typing___Optional[org___xrpl___rpc___v1___common_pb2___OfferSequence] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> OfferCancel: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> OfferCancel: ...
    def HasField(self, field_name: typing_extensions___Literal[u"offer_sequence",b"offer_sequence"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"offer_sequence",b"offer_sequence"]) -> None: ...
type___OfferCancel = OfferCancel

class OfferCreate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def expiration(self) -> org___xrpl___rpc___v1___common_pb2___Expiration: ...

    @property
    def offer_sequence(self) -> org___xrpl___rpc___v1___common_pb2___OfferSequence: ...

    @property
    def taker_gets(self) -> org___xrpl___rpc___v1___common_pb2___TakerGets: ...

    @property
    def taker_pays(self) -> org___xrpl___rpc___v1___common_pb2___TakerPays: ...

    def __init__(self,
        *,
        expiration : typing___Optional[org___xrpl___rpc___v1___common_pb2___Expiration] = None,
        offer_sequence : typing___Optional[org___xrpl___rpc___v1___common_pb2___OfferSequence] = None,
        taker_gets : typing___Optional[org___xrpl___rpc___v1___common_pb2___TakerGets] = None,
        taker_pays : typing___Optional[org___xrpl___rpc___v1___common_pb2___TakerPays] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> OfferCreate: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> OfferCreate: ...
    def HasField(self, field_name: typing_extensions___Literal[u"expiration",b"expiration",u"offer_sequence",b"offer_sequence",u"taker_gets",b"taker_gets",u"taker_pays",b"taker_pays"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"expiration",b"expiration",u"offer_sequence",b"offer_sequence",u"taker_gets",b"taker_gets",u"taker_pays",b"taker_pays"]) -> None: ...
type___OfferCreate = OfferCreate

class Payment(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class PathElement(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def account(self) -> org___xrpl___rpc___v1___account_pb2___AccountAddress: ...

        @property
        def currency(self) -> org___xrpl___rpc___v1___amount_pb2___Currency: ...

        @property
        def issuer(self) -> org___xrpl___rpc___v1___account_pb2___AccountAddress: ...

        def __init__(self,
            *,
            account : typing___Optional[org___xrpl___rpc___v1___account_pb2___AccountAddress] = None,
            currency : typing___Optional[org___xrpl___rpc___v1___amount_pb2___Currency] = None,
            issuer : typing___Optional[org___xrpl___rpc___v1___account_pb2___AccountAddress] = None,
            ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(cls, s: builtin___bytes) -> Payment.PathElement: ...
        else:
            @classmethod
            def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> Payment.PathElement: ...
        def HasField(self, field_name: typing_extensions___Literal[u"account",b"account",u"currency",b"currency",u"issuer",b"issuer"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"account",b"account",u"currency",b"currency",u"issuer",b"issuer"]) -> None: ...
    type___PathElement = PathElement

    class Path(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def elements(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Payment.PathElement]: ...

        def __init__(self,
            *,
            elements : typing___Optional[typing___Iterable[type___Payment.PathElement]] = None,
            ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(cls, s: builtin___bytes) -> Payment.Path: ...
        else:
            @classmethod
            def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> Payment.Path: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"elements",b"elements"]) -> None: ...
    type___Path = Path


    @property
    def amount(self) -> org___xrpl___rpc___v1___common_pb2___Amount: ...

    @property
    def destination(self) -> org___xrpl___rpc___v1___common_pb2___Destination: ...

    @property
    def destination_tag(self) -> org___xrpl___rpc___v1___common_pb2___DestinationTag: ...

    @property
    def invoice_id(self) -> org___xrpl___rpc___v1___common_pb2___InvoiceID: ...

    @property
    def paths(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Payment.Path]: ...

    @property
    def send_max(self) -> org___xrpl___rpc___v1___common_pb2___SendMax: ...

    @property
    def deliver_min(self) -> org___xrpl___rpc___v1___common_pb2___DeliverMin: ...

    def __init__(self,
        *,
        amount : typing___Optional[org___xrpl___rpc___v1___common_pb2___Amount] = None,
        destination : typing___Optional[org___xrpl___rpc___v1___common_pb2___Destination] = None,
        destination_tag : typing___Optional[org___xrpl___rpc___v1___common_pb2___DestinationTag] = None,
        invoice_id : typing___Optional[org___xrpl___rpc___v1___common_pb2___InvoiceID] = None,
        paths : typing___Optional[typing___Iterable[type___Payment.Path]] = None,
        send_max : typing___Optional[org___xrpl___rpc___v1___common_pb2___SendMax] = None,
        deliver_min : typing___Optional[org___xrpl___rpc___v1___common_pb2___DeliverMin] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> Payment: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> Payment: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"deliver_min",b"deliver_min",u"destination",b"destination",u"destination_tag",b"destination_tag",u"invoice_id",b"invoice_id",u"send_max",b"send_max"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"deliver_min",b"deliver_min",u"destination",b"destination",u"destination_tag",b"destination_tag",u"invoice_id",b"invoice_id",u"paths",b"paths",u"send_max",b"send_max"]) -> None: ...
type___Payment = Payment

class PaymentChannelClaim(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def channel(self) -> org___xrpl___rpc___v1___common_pb2___Channel: ...

    @property
    def balance(self) -> org___xrpl___rpc___v1___common_pb2___Balance: ...

    @property
    def amount(self) -> org___xrpl___rpc___v1___common_pb2___Amount: ...

    @property
    def payment_channel_signature(self) -> org___xrpl___rpc___v1___common_pb2___PaymentChannelSignature: ...

    @property
    def public_key(self) -> org___xrpl___rpc___v1___common_pb2___PublicKey: ...

    def __init__(self,
        *,
        channel : typing___Optional[org___xrpl___rpc___v1___common_pb2___Channel] = None,
        balance : typing___Optional[org___xrpl___rpc___v1___common_pb2___Balance] = None,
        amount : typing___Optional[org___xrpl___rpc___v1___common_pb2___Amount] = None,
        payment_channel_signature : typing___Optional[org___xrpl___rpc___v1___common_pb2___PaymentChannelSignature] = None,
        public_key : typing___Optional[org___xrpl___rpc___v1___common_pb2___PublicKey] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PaymentChannelClaim: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> PaymentChannelClaim: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"balance",b"balance",u"channel",b"channel",u"payment_channel_signature",b"payment_channel_signature",u"public_key",b"public_key"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"balance",b"balance",u"channel",b"channel",u"payment_channel_signature",b"payment_channel_signature",u"public_key",b"public_key"]) -> None: ...
type___PaymentChannelClaim = PaymentChannelClaim

class PaymentChannelCreate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def amount(self) -> org___xrpl___rpc___v1___common_pb2___Amount: ...

    @property
    def destination(self) -> org___xrpl___rpc___v1___common_pb2___Destination: ...

    @property
    def settle_delay(self) -> org___xrpl___rpc___v1___common_pb2___SettleDelay: ...

    @property
    def public_key(self) -> org___xrpl___rpc___v1___common_pb2___PublicKey: ...

    @property
    def cancel_after(self) -> org___xrpl___rpc___v1___common_pb2___CancelAfter: ...

    @property
    def destination_tag(self) -> org___xrpl___rpc___v1___common_pb2___DestinationTag: ...

    def __init__(self,
        *,
        amount : typing___Optional[org___xrpl___rpc___v1___common_pb2___Amount] = None,
        destination : typing___Optional[org___xrpl___rpc___v1___common_pb2___Destination] = None,
        settle_delay : typing___Optional[org___xrpl___rpc___v1___common_pb2___SettleDelay] = None,
        public_key : typing___Optional[org___xrpl___rpc___v1___common_pb2___PublicKey] = None,
        cancel_after : typing___Optional[org___xrpl___rpc___v1___common_pb2___CancelAfter] = None,
        destination_tag : typing___Optional[org___xrpl___rpc___v1___common_pb2___DestinationTag] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PaymentChannelCreate: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> PaymentChannelCreate: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"cancel_after",b"cancel_after",u"destination",b"destination",u"destination_tag",b"destination_tag",u"public_key",b"public_key",u"settle_delay",b"settle_delay"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"cancel_after",b"cancel_after",u"destination",b"destination",u"destination_tag",b"destination_tag",u"public_key",b"public_key",u"settle_delay",b"settle_delay"]) -> None: ...
type___PaymentChannelCreate = PaymentChannelCreate

class PaymentChannelFund(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def channel(self) -> org___xrpl___rpc___v1___common_pb2___Channel: ...

    @property
    def amount(self) -> org___xrpl___rpc___v1___common_pb2___Amount: ...

    @property
    def expiration(self) -> org___xrpl___rpc___v1___common_pb2___Expiration: ...

    def __init__(self,
        *,
        channel : typing___Optional[org___xrpl___rpc___v1___common_pb2___Channel] = None,
        amount : typing___Optional[org___xrpl___rpc___v1___common_pb2___Amount] = None,
        expiration : typing___Optional[org___xrpl___rpc___v1___common_pb2___Expiration] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PaymentChannelFund: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> PaymentChannelFund: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"channel",b"channel",u"expiration",b"expiration"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"channel",b"channel",u"expiration",b"expiration"]) -> None: ...
type___PaymentChannelFund = PaymentChannelFund

class SetRegularKey(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def regular_key(self) -> org___xrpl___rpc___v1___common_pb2___RegularKey: ...

    def __init__(self,
        *,
        regular_key : typing___Optional[org___xrpl___rpc___v1___common_pb2___RegularKey] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> SetRegularKey: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> SetRegularKey: ...
    def HasField(self, field_name: typing_extensions___Literal[u"regular_key",b"regular_key"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"regular_key",b"regular_key"]) -> None: ...
type___SetRegularKey = SetRegularKey

class SignerListSet(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def signer_quorum(self) -> org___xrpl___rpc___v1___common_pb2___SignerQuorum: ...

    @property
    def signer_entries(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[org___xrpl___rpc___v1___common_pb2___SignerEntry]: ...

    def __init__(self,
        *,
        signer_quorum : typing___Optional[org___xrpl___rpc___v1___common_pb2___SignerQuorum] = None,
        signer_entries : typing___Optional[typing___Iterable[org___xrpl___rpc___v1___common_pb2___SignerEntry]] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> SignerListSet: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> SignerListSet: ...
    def HasField(self, field_name: typing_extensions___Literal[u"signer_quorum",b"signer_quorum"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"signer_entries",b"signer_entries",u"signer_quorum",b"signer_quorum"]) -> None: ...
type___SignerListSet = SignerListSet

class TicketCreate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def count(self) -> org___xrpl___rpc___v1___common_pb2___TicketCount: ...

    def __init__(self,
        *,
        count : typing___Optional[org___xrpl___rpc___v1___common_pb2___TicketCount] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> TicketCreate: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> TicketCreate: ...
    def HasField(self, field_name: typing_extensions___Literal[u"count",b"count"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"count",b"count"]) -> None: ...
type___TicketCreate = TicketCreate

class TrustSet(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def limit_amount(self) -> org___xrpl___rpc___v1___common_pb2___LimitAmount: ...

    @property
    def quality_in(self) -> org___xrpl___rpc___v1___common_pb2___QualityIn: ...

    @property
    def quality_out(self) -> org___xrpl___rpc___v1___common_pb2___QualityOut: ...

    def __init__(self,
        *,
        limit_amount : typing___Optional[org___xrpl___rpc___v1___common_pb2___LimitAmount] = None,
        quality_in : typing___Optional[org___xrpl___rpc___v1___common_pb2___QualityIn] = None,
        quality_out : typing___Optional[org___xrpl___rpc___v1___common_pb2___QualityOut] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> TrustSet: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> TrustSet: ...
    def HasField(self, field_name: typing_extensions___Literal[u"limit_amount",b"limit_amount",u"quality_in",b"quality_in",u"quality_out",b"quality_out"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"limit_amount",b"limit_amount",u"quality_in",b"quality_in",u"quality_out",b"quality_out"]) -> None: ...
type___TrustSet = TrustSet
