name: tests

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - master
      - develop
      - "release/*"
      - "hotfix/*"
  pull_request:

jobs:
  unittests:
    runs-on: ${{ matrix.os }}
    env:
      ZFIT_DO_JIT: ${{ matrix.use-graph }}
    timeout-minutes: 240
    strategy:
      max-parallel: 15
      fail-fast: False
      matrix:
        use-graph: [ 1 ]  # TODO: reactivate eager, this was weirdly slow
        python-version: [ 3.7, 3.8, 3.9 ]
        os: [ ubuntu-latest ]
        extras: [ alldev ]
        include:
#          - os: macos-latest
          #            python-version: 3.9
          #            use-graph: 0
          - os: macos-latest
            python-version: 3.9
            use-graph: 1
            extras: alldev-nonlinux
          #          - os: windows-latest
          #            python-version: 3.9
          #            use-graph: 0
          - os: windows-latest
            python-version: 3.9
            use-graph: 1
            extras: alldev-nonlinux

    name: tests on ${{ matrix.os }} with ${{ matrix.python-version }} compiled = ${{ matrix.use-graph }}
    #    env:
    #      ZFIT_DO_JIT: ${{ matrix.use-graph }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        name: Set up Python ${{ matrix.python-version }}
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v3.0.2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-pip-${{ hashFiles('**/requirements_dev.txt') }}-pip-${{ hashFiles('**/pyproject.toml') }}-pip-${{ hashFiles('**/setup.cfg') }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[${{ matrix.extras }}]
      - name: Test with pytest
#        TODO: how to run below on windows?
#          if [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
#          echo "PYTEST_ADDOPTS=--longtests-kde" >> "$GITHUB_ENV"
#          fi
        run: |
          coverage run --source=. --omit=".tox/*,*/test*,*/minimizers/interface.py,*/core/testing.py" --branch -m pytest .
          mkdir coverage && coverage-lcov --output_file_path ./coverage/lcov.info
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{ matrix.use-graph }}-${{ matrix.python-version }}-ubuntu
          parallel: true
  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: [ 3.9 ]
    name: Testbuild docs
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        name: Set up Python ${{ matrix.python-version }}
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v3.0.2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-pip-${{ hashFiles('**/requirements_dev.txt') }}-pip-${{ hashFiles('**/pyproject.toml') }}-pip-${{ hashFiles('**/setup.cfg') }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --ignore-requires-python .[docs]
      - name: Build the docs, check for failure
        run: |
          bash utils/ci/testbuild_docs.sh

  examples:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      max-parallel: 8
      fail-fast: False
      matrix:
        use-graph: [ 0, 1 ]
        python-version: [ 3.8, 3.9 ]  # no 3.7 because cannot install correct numpy version... pep517 problems https://github.com/pypa/pip/issues/9542
    name: Run examples, Python ${{ matrix.python-version }}, compiled = ${{ matrix.use-graph }}
    env:
      ZFIT_DO_JIT: ${{ matrix.use-graph }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        name: Set up Python ${{ matrix.python-version }}

        with:
          python-version: ${{ matrix.python-version }}

      - name: Clone Tutorials
        run: |
          git clone https://github.com/zfit/zfit-tutorials.git

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v3.0.2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-pip-${{ hashFiles('**/requirements_dev.txt') }}-pip-${{ hashFiles('**/pyproject.toml') }}-pip-${{ hashFiles('**/setup.cfg') }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel "numpy<1.20"  # to fix the ci. pip cannot find the correct numpy version otherwise
          pip install -U .[all]
          pip install nbval
          pip install -r zfit-tutorials/requirements.txt
          pip install -U --force-reinstall .

      - name: Run notebooks
        run: |
          pytest --nbval-lax zfit-tutorials --ignore=zfit-tutorials/experimental --ignore=zfit-tutorials/_unused

      - name: Run examples
        run: |
          bash utils/ci/install_test_examples.sh

  finish:
    needs: unittests
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
