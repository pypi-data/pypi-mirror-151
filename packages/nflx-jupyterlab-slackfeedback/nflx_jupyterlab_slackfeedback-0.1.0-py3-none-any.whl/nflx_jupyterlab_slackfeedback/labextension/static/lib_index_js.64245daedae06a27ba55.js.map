{"version":3,"file":"lib_index_js.64245daedae06a27ba55.js","mappings":";;;;;;;;;;;;;;;;;;;AAAqD;AACG;AACF;AAClB;AAC7B;AACP;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAAa;AACxC;AACA;AACA,kBAAkB,6CAAS;AAC3B;AACA,sCAAsC,+DAAwB;AAC9D;AACA;AACA,SAAS;AACT;AACA,mBAAmB,kEAAkB;AACrC;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxByC;AACQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACP;AACA;AACA;AACA;AACA,+BAA+B,0DAAc;AAC7C;AACA;AACA,gBAAgB,0DAAa;AAC7B;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;AClB0C;AACU;AAC7C,sBAAsB,8DAAO;AACpC;AACA,YAAY,wDAAQ;AACpB,CAAC;;;;;;;;;;;;;;;;;;;ACLwD;AAChB;AAC+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kFAAc;AAC7B;AACA;AACA;AACA;AACA,uDAAuD,kEAA4B;AACnF,IAAI,sDAAW;AACf;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBmB;AACoB;AACV;AACjB;AACa;AACd;AACjC,0BAA0B,gDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO,6BAA6B,6DAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAmB,2BAA2B,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,UAAU,SAAS,wBAAwB;AAC9E,YAAY,0DAAmB,CAAC,yDAAU,IAAI,SAAS,sCAAsC;AAC7F,YAAY,0DAAmB,CAAC,yDAAU,IAAI,SAAS,uCAAuC;AAC9F,YAAY,0DAAmB,QAAQ,iCAAiC,0CAA0C,wJAAwJ;AAC1Q;AACA,IAAI,gDAAS;AACb;AACA,YAAY,uDAAe;AAC3B,KAAK;AACL,YAAY,0DAAmB,UAAU,sBAAsB;AAC/D,QAAQ,0DAAmB,CAAC,6DAAa,IAAI,SAAS,iBAAiB,gDAAgD,mEAAc;AACrI;AACA,+BAA+B;AAC/B;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACrEA,iEAAe,ywDAAywD","sources":["webpack://@netflix-internal/nflx-jupyterlab-slackfeedback/./lib/buttons.js","webpack://@netflix-internal/nflx-jupyterlab-slackfeedback/./lib/commands.js","webpack://@netflix-internal/nflx-jupyterlab-slackfeedback/./lib/icons.js","webpack://@netflix-internal/nflx-jupyterlab-slackfeedback/./lib/index.js","webpack://@netflix-internal/nflx-jupyterlab-slackfeedback/./lib/slackfeedback.js","webpack://@netflix-internal/nflx-jupyterlab-slackfeedback/./style/slack.svg"],"sourcesContent":["import { ToolbarButton } from '@jupyterlab/apputils';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport { openSlackFeedbackCommand } from './commands';\nimport { slackIcon } from './icons';\nexport class SlackFeedbackButtonExtension {\n    constructor(commands, _nfa) {\n        this.commands = commands;\n        this.nfa = _nfa;\n    }\n    createNew(widget, _context) {\n        const button = new ToolbarButton({\n            label: 'Send Feedback',\n            tooltip: 'Send feedback to the Notebooks team slack channel',\n            icon: slackIcon,\n            onClick: () => {\n                this.commands.execute(openSlackFeedbackCommand);\n                this.nfa.logFeatureEngaged('jl-user-feedback', 'toolbar-button-click');\n            }\n        });\n        widget.toolbar.insertAfter('spacer', 'slack-feedback', button);\n        return new DisposableDelegate(() => {\n            button.dispose();\n        });\n    }\n}\n","import { Widget } from '@lumino/widgets';\nimport { FeedbackWidget } from './slackfeedback';\nexport const openTimelineCommand = 'timeline:open';\nexport const cloneVersionCommand = 'timeline:clone';\nexport const restoreVersionCommand = 'timeline:restore';\nexport const openTimelineVersionCommand = 'timeline:open-version';\nexport const openSlackFeedbackCommand = 'slack-feedback:open';\nexport function addCommands(app, nfa) {\n    app.commands.addCommand(openSlackFeedbackCommand, {\n        label: 'Open Slack Feedback Modal',\n        caption: 'Open Slack Feedback Modal',\n        execute: () => {\n            const widget = new FeedbackWidget(nfa);\n            nfa.logFeatureEngaged('timeline', 'sidebar-opened');\n            if (!document.getElementById('feedback-slack'))\n                Widget.attach(widget, document.body);\n        }\n    });\n}\n","import slackSvg from '../style/slack.svg';\nimport { LabIcon } from '@jupyterlab/ui-components';\nexport const slackIcon = new LabIcon({\n    name: 'nflx:slack-feedback',\n    svgstr: slackSvg\n});\n","import { SlackFeedbackButtonExtension } from './buttons';\nimport { addCommands } from './commands';\nimport { INflxAnalytics } from '@netflix-internal/jupyterlab-analytics';\n/**\n * Initialization data for the nflx-jupyterlab-slackfeedback extension.\n */\nconst plugin = {\n    id: 'nflx-jupyterlab-slackfeedback:plugin',\n    autoStart: true,\n    requires: [INflxAnalytics],\n    activate: activate\n};\nasync function activate(app, analytics) {\n    console.log('JupyterLab extension nflx-jupyterlab-slackfeedback is activated!');\n    app.docRegistry.addWidgetExtension('notebook', new SlackFeedbackButtonExtension(app.commands, analytics));\n    addCommands(app, analytics);\n}\nexport default plugin;\n","import React, { useEffect } from 'react';\nimport SlackFeedback, { themes } from 'react-slack-feedback';\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport { style } from 'typestyle';\nimport { Typography } from '@material-ui/core';\nimport ReactDOM from 'react-dom';\nconst panelWrapperClass = style({\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    overflowY: 'auto',\n    backgroundColor: 'var(--jp-layout-color1)!important'\n});\nfunction sendToServer(payload, success, error, nfa) {\n    switch (payload.attachments[0].title) {\n        case 'bug':\n            nfa.logFeatureEngaged('jl-user-feedback', 'bug');\n            break;\n        case 'feature':\n            nfa.logFeatureEngaged('jl-user-feedback', 'feauture');\n            break;\n        case 'improvement':\n            nfa.logFeatureEngaged('jl-user-feedback', 'improvement');\n            break;\n    }\n    payload['attachments'][0].author_name =\n        window.location.pathname.split('/')[1] + '@netflix.com';\n    return fetch(`${getJupyterPrefix()}api/slack/messages`, {\n        method: 'POST',\n        body: JSON.stringify(payload),\n        mode: 'no-cors'\n    })\n        .then(success => removeElement())\n        .catch(error);\n}\nexport class FeedbackWidget extends ReactWidget {\n    constructor(props) {\n        super();\n        this.addClass(panelWrapperClass);\n        this.nfa = props;\n    }\n    render() {\n        return React.createElement(SlackFeedbackComponent, { analytics: this.nfa });\n    }\n}\nconst removeElement = () => {\n    let slackFeedbackElement = document.getElementById('feedback-slack');\n    slackFeedbackElement === null || slackFeedbackElement === void 0 ? void 0 : slackFeedbackElement.remove();\n};\nfunction SlackFeedbackComponent(props) {\n    let slackFeedback = document.getElementById('channel!');\n    const officeHoursInfo = () => {\n        return (React.createElement(\"div\", { style: { marginBottom: '16px' } },\n            React.createElement(Typography, { style: { fontSize: '16px', color: '#0088ff' } }, \"Notebooks team has office hours!\"),\n            React.createElement(Typography, { style: { fontSize: '14px', color: 'GrayText' } }, \"Join us every Thursday from 1-2pm PST\"),\n            React.createElement(\"a\", { color: \"textSecondary\", style: { fontSize: '14px', color: 'HighlightText' }, href: \"https://docs.google.com/spreadsheets/d/16ZybsUjazQltdTS1KPE8vob1imZ6E30kv-DUQFqjzsc/edit#gid=0\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"Sign up here\")));\n    };\n    useEffect(() => {\n        if (document.getElementById('channel'))\n            ReactDOM.render(officeHoursInfo(), document.getElementById('channel'));\n    }, [slackFeedback]);\n    return (React.createElement(\"div\", { id: \"feedback-slack\" },\n        React.createElement(SlackFeedback, { style: { display: 'none' }, open: true, channel: \"#ask-notebooks\", theme: themes.default, onClose: () => removeElement(), onSubmit: (payload, success, error) => sendToServer(payload, success, error, props.analytics)\n                .then(success)\n                .catch(error) })));\n}\nexport function getJupyterPrefix() {\n    const windowPath = window.location.pathname;\n    return windowPath.substring(0, windowPath.indexOf('lab'));\n}\n","export default \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M25.0204 31.0599C27.2296 31.0599 29.0204 32.8508 29.0204 35.0599C29.0204 37.2691 27.2296 39.0599 25.0204 39.0599C22.8113 39.0599 21.0204 37.2691 21.0204 35.0599V31.0599H25.0204ZM14.9804 21.0199C17.1896 21.0199 18.9804 22.8108 18.9804 25.0199V35.0199C18.9804 37.2291 17.1896 39.0199 14.9804 39.0199C12.7713 39.0199 10.9804 37.2291 10.9804 35.0199V25.0199C10.9804 22.8108 12.7713 21.0199 14.9804 21.0199ZM8.9404 21.0199V25.0199C8.9404 27.2291 7.1496 29.0199 4.94043 29.0199C2.73129 29.0199 0.94043 27.2291 0.94043 25.0199C0.94043 22.8108 2.73129 21.0199 4.94043 21.0199H8.9404ZM35.0604 21.0199C37.2696 21.0199 39.0604 22.8108 39.0604 25.0199C39.0604 27.2291 37.2696 29.0199 35.0604 29.0199H25.0604C23.6314 29.0199 22.3109 28.2575 21.5963 27.0199C20.8818 25.7823 20.8818 24.2575 21.5963 23.0199C22.3109 21.7823 23.6314 21.0199 25.0604 21.0199H35.0604ZM35.0604 10.9799C37.2696 10.9799 39.0604 12.7708 39.0604 14.9799C39.0604 17.1891 37.2696 18.9799 35.0604 18.9799H31.0604V14.9799C31.0604 12.7708 32.8513 10.9799 35.0604 10.9799ZM25.0204 0.979941C27.2296 0.979941 29.0204 2.7708 29.0204 4.97994V14.9799C29.0204 17.1891 27.2296 18.9799 25.0204 18.9799C22.8113 18.9799 21.0204 17.1891 21.0204 14.9799V4.97994C21.0204 2.7708 22.8113 0.979941 25.0204 0.979941ZM14.9804 10.9599C17.1896 10.9599 18.9804 12.7508 18.9804 14.9599C18.9804 17.1691 17.1896 18.9599 14.9804 18.9599H4.98043C2.77129 18.9599 0.98043 17.1691 0.98043 14.9599C0.98043 12.7508 2.77129 10.9599 4.98043 10.9599H14.9804ZM14.9804 0.939941C17.1896 0.939941 18.9804 2.7308 18.9804 4.93994V8.9399H14.9804C12.7713 8.9399 10.9804 7.1491 10.9804 4.93994C10.9804 2.7308 12.7713 0.939941 14.9804 0.939941Z\\\" fill=\\\"black\\\"/>\\n</svg>\\n\";"],"names":[],"sourceRoot":""}