Metadata-Version: 2.1
Name: sap-ai-core-metaflow
Version: 1.1.3
Summary: A Metaflow plugin to execute flows on Argo Workflows
Home-page: https://www.sap.com/
Author: SAP SE
License: SAP DEVELOPER LICENSE AGREEMENT
Project-URL: Documentation, https://blogs.sap.com/2022/04/20/train-your-model-in-sap-ai-core-using-the-metaflow-argo-plugin/
Keywords: SAP AI Core Metaflow Argo Kubernetes
Platform: Linux
Platform: Mac OS-X
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Plugins
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Other Audience
Classifier: Intended Audience :: Science/Research
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX :: Linux
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: metaflow (<2.5.5,>=2.5.4)
Provides-Extra: kubernetes
Requires-Dist: kubernetes ; extra == 'kubernetes'
Provides-Extra: test
Requires-Dist: pytest (>=7.1) ; extra == 'test'
Requires-Dist: pytest-cov[all] ; extra == 'test'

# Metaflow library for SAP AI Core

This Python library is a plugin that lets you generate workflow templates that can be executed in Argo or on SAP AI Core.

Sap-ai-core-metaflow is a [Metaflow](https://metaflow.org/) plugin to execute flows on [Argo Workflows](https://argoproj.github.io/argo-workflows/).

It adds Argo Workflows capabilities on top of Metaflow's `@kubernetes` decorator similar
to `step-functions` and `@batch`.

## Installation

```sh
pip install sap-ai-core-metaflow\[kubernetes\]
```

## Documentation

For general information about how to use Metaflow, see the Metaflow documentation <https://docs.metaflow.org>.

For command-line help, use the command option `--help`

## Configuration

The plugin requires configured Metaflow:

```sh
metaflow configure eks
```

## Usage

To see a sub-commands' detailed information, run::

```sh
python 00-helloworld/helloworld.py argo [sub-command] --help
```

An example creating an argo workflow from the Metaflow hello world tutorial.

```sh
metaflow tutorials pull
cd metaflow-tutorials

python 00-helloworld/helloworld.py argo create
python 00-helloworld/helloworld.py argo trigger
python 00-helloworld/helloworld.py argo list-runs
```

## Generate Argo Workflows Template

To store a generated template in a file, run the command:

```sh
python 00-helloworld/helloworld.py --with=kubernetes:secrets=default-object-store-secret argo create --only-json > helloworld.json
```

> Note
>
> Argo Workflows accepts both YAML and JSON templates. The Argo plugin always creates JSON.


